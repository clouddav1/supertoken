import {
  require_authRecipe_shared,
  require_passwordless,
  require_passwordless_shared2,
  require_thirdparty,
  require_thirdparty_shared,
  require_thirdpartypasswordless,
  require_thirdpartypasswordless_shared
} from "./chunk-RH76KC5N.js";
import {
  require_cookieHandler,
  require_genericComponentOverrideContext,
  require_jsx_runtime,
  require_multitenancy,
  require_normalisedURLDomain,
  require_normalisedURLPath,
  require_normalisedURLPath2,
  require_postSuperTokensInitCallbacks,
  require_recipeModule_shared,
  require_session,
  require_session_shared2,
  require_supertokens_web_js,
  require_translationContext,
  require_utils3 as require_utils,
  require_windowHandler2 as require_windowHandler
} from "./chunk-LFNHU7DE.js";
import {
  require_react
} from "./chunk-GCG7DT74.js";
import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/supertokens-auth-react/lib/build/thirdparty.js
var require_thirdparty2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdparty.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var recipe = require_thirdparty_shared();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks();
    require_windowHandler();
    require_multitenancy();
    require_utils();
    require_react();
    require_normalisedURLDomain();
    require_normalisedURLPath2();
    require_jsx_runtime();
    require_thirdparty();
    require_authRecipe_shared();
    require_recipeModule_shared();
    require_session_shared2();
    require_session();
    require_translationContext();
    require_normalisedURLPath();
    var Wrapper = function() {
      function Wrapper2() {
      }
      Wrapper2.init = function(config) {
        return recipe.ThirdParty.init(config);
      };
      Wrapper2.signOut = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe.ThirdParty.getInstanceOrThrow().signOut({
                userContext: genericComponentOverrideContext.getNormalisedUserContext(
                  input === null || input === void 0 ? void 0 : input.userContext
                )
              })
            ];
          });
        });
      };
      Wrapper2.redirectToThirdPartyLogin = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          var recipeInstance;
          return genericComponentOverrideContext.__generator(this, function(_a) {
            recipeInstance = recipe.ThirdParty.getInstanceOrThrow();
            return [
              2,
              recipe.redirectToThirdPartyLogin({
                thirdPartyId: input.thirdPartyId,
                config: recipeInstance.config,
                userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext),
                recipeImplementation: recipeInstance.webJSRecipe
              })
            ];
          });
        });
      };
      Wrapper2.getStateAndOtherInfoFromStorage = function(input) {
        return recipe.ThirdParty.getInstanceOrThrow().webJSRecipe.getStateAndOtherInfoFromStorage(
          genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
            userContext: genericComponentOverrideContext.getNormalisedUserContext(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      Wrapper2.getAuthorisationURLWithQueryParamsAndSetState = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe.ThirdParty.getInstanceOrThrow().webJSRecipe.getAuthorisationURLWithQueryParamsAndSetState(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
                })
              )
            ];
          });
        });
      };
      Wrapper2.signInAndUp = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe.ThirdParty.getInstanceOrThrow().webJSRecipe.signInAndUp(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.Apple = recipe.Apple;
      Wrapper2.Bitbucket = recipe.Bitbucket;
      Wrapper2.Discord = recipe.Discord;
      Wrapper2.Github = recipe.Github;
      Wrapper2.Gitlab = recipe.Gitlab;
      Wrapper2.Google = recipe.Google;
      Wrapper2.GoogleWorkspaces = recipe.GoogleWorkspaces;
      Wrapper2.Facebook = recipe.Facebook;
      Wrapper2.LinkedIn = recipe.LinkedIn;
      Wrapper2.ActiveDirectory = recipe.ActiveDirectory;
      Wrapper2.BoxySAML = recipe.BoxySAML;
      Wrapper2.Okta = recipe.Okta;
      Wrapper2.ComponentsOverrideProvider = recipe.Provider;
      return Wrapper2;
    }();
    var init = Wrapper.init;
    var signOut = Wrapper.signOut;
    var redirectToThirdPartyLogin = Wrapper.redirectToThirdPartyLogin;
    var getStateAndOtherInfoFromStorage = Wrapper.getStateAndOtherInfoFromStorage;
    var getAuthorisationURLWithQueryParamsAndSetState = Wrapper.getAuthorisationURLWithQueryParamsAndSetState;
    var signInAndUp = Wrapper.signInAndUp;
    var ThirdpartyComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;
    exports.ActiveDirectory = recipe.ActiveDirectory;
    exports.Apple = recipe.Apple;
    exports.Bitbucket = recipe.Bitbucket;
    exports.BoxySAML = recipe.BoxySAML;
    exports.Discord = recipe.Discord;
    exports.Facebook = recipe.Facebook;
    exports.Github = recipe.Github;
    exports.Gitlab = recipe.Gitlab;
    exports.Google = recipe.Google;
    exports.GoogleWorkspaces = recipe.GoogleWorkspaces;
    exports.LinkedIn = recipe.LinkedIn;
    exports.Okta = recipe.Okta;
    exports.Twitter = recipe.Twitter;
    exports.ThirdpartyComponentsOverrideProvider = ThirdpartyComponentsOverrideProvider;
    exports.default = Wrapper;
    exports.getAuthorisationURLWithQueryParamsAndSetState = getAuthorisationURLWithQueryParamsAndSetState;
    exports.getStateAndOtherInfoFromStorage = getStateAndOtherInfoFromStorage;
    exports.init = init;
    exports.redirectToThirdPartyLogin = redirectToThirdPartyLogin;
    exports.signInAndUp = signInAndUp;
    exports.signOut = signOut;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdpartypasswordless.js
var require_thirdpartypasswordless2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdpartypasswordless.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    require_thirdparty2();
    var recipe = require_thirdparty_shared();
    var recipe$1 = require_thirdpartypasswordless_shared();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks();
    require_windowHandler();
    require_multitenancy();
    require_utils();
    require_react();
    require_normalisedURLDomain();
    require_normalisedURLPath2();
    require_jsx_runtime();
    require_thirdparty();
    require_authRecipe_shared();
    require_recipeModule_shared();
    require_session_shared2();
    require_session();
    require_translationContext();
    require_normalisedURLPath();
    require_thirdpartypasswordless();
    require_passwordless_shared2();
    require_passwordless();
    var Wrapper = function() {
      function Wrapper2() {
      }
      Wrapper2.init = function(config) {
        return recipe$1.ThirdPartyPasswordless.init(config);
      };
      Wrapper2.signOut = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().signOut({
                userContext: genericComponentOverrideContext.getNormalisedUserContext(
                  input === null || input === void 0 ? void 0 : input.userContext
                )
              })
            ];
          });
        });
      };
      Wrapper2.redirectToThirdPartyLogin = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          var recipeInstance;
          return genericComponentOverrideContext.__generator(this, function(_a) {
            recipeInstance = recipe$1.ThirdPartyPasswordless.getInstanceOrThrow();
            if (recipeInstance.thirdPartyRecipe === void 0) {
              throw new Error(
                "Third party passwordless was initialised without any social providers. This function is only available if at least one social provider is initialised"
              );
            }
            return [
              2,
              recipe.redirectToThirdPartyLogin({
                thirdPartyId: input.thirdPartyId,
                config: recipeInstance.thirdPartyRecipe.config,
                userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext),
                recipeImplementation: recipeInstance.thirdPartyRecipe.webJSRecipe
              })
            ];
          });
        });
      };
      Wrapper2.thirdPartySignInAndUp = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.thirdPartySignInAndUp(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.getThirdPartyStateAndOtherInfoFromStorage = function(input) {
        return recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.getThirdPartyStateAndOtherInfoFromStorage(
          genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
            userContext: genericComponentOverrideContext.getNormalisedUserContext(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      Wrapper2.getThirdPartyAuthorisationURLWithQueryParamsAndSetState = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.getThirdPartyAuthorisationURLWithQueryParamsAndSetState(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
                })
              )
            ];
          });
        });
      };
      Wrapper2.createPasswordlessCode = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.createPasswordlessCode(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
                })
              )
            ];
          });
        });
      };
      Wrapper2.resendPasswordlessCode = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.resendPasswordlessCode(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.consumePasswordlessCode = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.consumePasswordlessCode(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.getPasswordlessLinkCodeFromURL = function(input) {
        return recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.getPasswordlessLinkCodeFromURL(
          genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
            userContext: genericComponentOverrideContext.getNormalisedUserContext(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      Wrapper2.getPasswordlessPreAuthSessionIdFromURL = function(input) {
        return recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.getPasswordlessPreAuthSessionIdFromURL(
          genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
            userContext: genericComponentOverrideContext.getNormalisedUserContext(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      Wrapper2.doesPasswordlessUserEmailExist = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.doesPasswordlessUserEmailExist(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
                })
              )
            ];
          });
        });
      };
      Wrapper2.doesPasswordlessUserPhoneNumberExist = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.doesPasswordlessUserPhoneNumberExist(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
                })
              )
            ];
          });
        });
      };
      Wrapper2.getPasswordlessLoginAttemptInfo = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.getPasswordlessLoginAttemptInfo(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.setPasswordlessLoginAttemptInfo = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.setPasswordlessLoginAttemptInfo(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.clearPasswordlessLoginAttemptInfo = function(input) {
        return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
          return genericComponentOverrideContext.__generator(this, function(_a) {
            return [
              2,
              recipe$1.ThirdPartyPasswordless.getInstanceOrThrow().webJSRecipe.clearPasswordlessLoginAttemptInfo(
                genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                  userContext: genericComponentOverrideContext.getNormalisedUserContext(
                    input === null || input === void 0 ? void 0 : input.userContext
                  )
                })
              )
            ];
          });
        });
      };
      Wrapper2.Apple = recipe.Apple;
      Wrapper2.Bitbucket = recipe.Bitbucket;
      Wrapper2.Discord = recipe.Discord;
      Wrapper2.Github = recipe.Github;
      Wrapper2.Gitlab = recipe.Gitlab;
      Wrapper2.Google = recipe.Google;
      Wrapper2.GoogleWorkspaces = recipe.GoogleWorkspaces;
      Wrapper2.Facebook = recipe.Facebook;
      Wrapper2.LinkedIn = recipe.LinkedIn;
      Wrapper2.ActiveDirectory = recipe.ActiveDirectory;
      Wrapper2.BoxySAML = recipe.BoxySAML;
      Wrapper2.Okta = recipe.Okta;
      Wrapper2.ComponentsOverrideProvider = recipe$1.Provider;
      return Wrapper2;
    }();
    var init = Wrapper.init;
    var signOut = Wrapper.signOut;
    var redirectToThirdPartyLogin = Wrapper.redirectToThirdPartyLogin;
    var thirdPartySignInAndUp = Wrapper.thirdPartySignInAndUp;
    var getThirdPartyStateAndOtherInfoFromStorage = Wrapper.getThirdPartyStateAndOtherInfoFromStorage;
    var getThirdPartyAuthorisationURLWithQueryParamsAndSetState = Wrapper.getThirdPartyAuthorisationURLWithQueryParamsAndSetState;
    var createPasswordlessCode = Wrapper.createPasswordlessCode;
    var resendPasswordlessCode = Wrapper.resendPasswordlessCode;
    var consumePasswordlessCode = Wrapper.consumePasswordlessCode;
    var getPasswordlessLinkCodeFromURL = Wrapper.getPasswordlessLinkCodeFromURL;
    var getPasswordlessPreAuthSessionIdFromURL = Wrapper.getPasswordlessPreAuthSessionIdFromURL;
    var doesPasswordlessUserEmailExist = Wrapper.doesPasswordlessUserEmailExist;
    var doesPasswordlessUserPhoneNumberExist = Wrapper.doesPasswordlessUserPhoneNumberExist;
    var getPasswordlessLoginAttemptInfo = Wrapper.getPasswordlessLoginAttemptInfo;
    var setPasswordlessLoginAttemptInfo = Wrapper.setPasswordlessLoginAttemptInfo;
    var clearPasswordlessLoginAttemptInfo = Wrapper.clearPasswordlessLoginAttemptInfo;
    var ThirdpartyPasswordlessComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;
    exports.ActiveDirectory = recipe.ActiveDirectory;
    exports.Apple = recipe.Apple;
    exports.Bitbucket = recipe.Bitbucket;
    exports.BoxySAML = recipe.BoxySAML;
    exports.Discord = recipe.Discord;
    exports.Facebook = recipe.Facebook;
    exports.Github = recipe.Github;
    exports.Gitlab = recipe.Gitlab;
    exports.Google = recipe.Google;
    exports.GoogleWorkspaces = recipe.GoogleWorkspaces;
    exports.LinkedIn = recipe.LinkedIn;
    exports.Okta = recipe.Okta;
    exports.ThirdpartyPasswordlessComponentsOverrideProvider = ThirdpartyPasswordlessComponentsOverrideProvider;
    exports.clearPasswordlessLoginAttemptInfo = clearPasswordlessLoginAttemptInfo;
    exports.consumePasswordlessCode = consumePasswordlessCode;
    exports.createPasswordlessCode = createPasswordlessCode;
    exports.default = Wrapper;
    exports.doesPasswordlessUserEmailExist = doesPasswordlessUserEmailExist;
    exports.doesPasswordlessUserPhoneNumberExist = doesPasswordlessUserPhoneNumberExist;
    exports.getPasswordlessLinkCodeFromURL = getPasswordlessLinkCodeFromURL;
    exports.getPasswordlessLoginAttemptInfo = getPasswordlessLoginAttemptInfo;
    exports.getPasswordlessPreAuthSessionIdFromURL = getPasswordlessPreAuthSessionIdFromURL;
    exports.getThirdPartyAuthorisationURLWithQueryParamsAndSetState = getThirdPartyAuthorisationURLWithQueryParamsAndSetState;
    exports.getThirdPartyStateAndOtherInfoFromStorage = getThirdPartyStateAndOtherInfoFromStorage;
    exports.init = init;
    exports.redirectToThirdPartyLogin = redirectToThirdPartyLogin;
    exports.resendPasswordlessCode = resendPasswordlessCode;
    exports.setPasswordlessLoginAttemptInfo = setPasswordlessLoginAttemptInfo;
    exports.signOut = signOut;
    exports.thirdPartySignInAndUp = thirdPartySignInAndUp;
  }
});

// node_modules/supertokens-auth-react/recipe/thirdpartypasswordless/index.js
var require_thirdpartypasswordless3 = __commonJS({
  "node_modules/supertokens-auth-react/recipe/thirdpartypasswordless/index.js"(exports) {
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_thirdpartypasswordless2());
  }
});
export default require_thirdpartypasswordless3();
//# sourceMappingURL=supertokens-auth-react_recipe_thirdpartypasswordless.js.map
