import {
  require_authRecipe,
  require_build,
  require_error,
  require_genericComponentOverrideContext,
  require_jsx_runtime,
  require_normalisedURLPath,
  require_normalisedURLPath2,
  require_postSuperTokensInitCallbacks,
  require_querier,
  require_recipe,
  require_recipeModule_shared,
  require_session_shared2,
  require_translationContext,
  require_utils,
  require_utils2,
  require_windowHandler,
  require_windowHandler2
} from "./chunk-LFNHU7DE.js";
import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/supertokens-web-js/lib/build/recipe/thirdparty/utils.js
var require_utils3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdparty/utils.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseUserInput = void 0;
    var utils_1 = require_utils2();
    function normaliseUserInput(config) {
      var override = __assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return __assign(__assign({}, (0, utils_1.normaliseAuthRecipe)(config)), { override });
    }
    exports.normaliseUserInput = normaliseUserInput;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdparty/recipeImplementation.js
var require_recipeImplementation = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdparty/recipeImplementation.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRecipeImplementation = void 0;
    var querier_1 = require_querier();
    var utils_1 = require_utils();
    var error_1 = require_error();
    var windowHandler_1 = require_windowHandler();
    function getRecipeImplementation(recipeImplInput) {
      var querier = new querier_1.default(recipeImplInput.recipeId, recipeImplInput.appInfo);
      return {
        getStateAndOtherInfoFromStorage: function() {
          var stateFromStorage = windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.sessionStorage.getItemSync(
            "supertokens-oauth-state-2"
          );
          if (stateFromStorage === null) {
            return void 0;
          }
          try {
            return JSON.parse(stateFromStorage);
          } catch (_a) {
            return void 0;
          }
        },
        setStateAndOtherInfoToStorage: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var value;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  value = JSON.stringify(__assign({}, input.state));
                  return [
                    4,
                    windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.sessionStorage.setItem(
                      "supertokens-oauth-state-2",
                      value
                    )
                  ];
                case 1:
                  _a.sent();
                  return [2];
              }
            });
          });
        },
        getAuthorisationURLWithQueryParamsAndSetState: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var urlResponse, frontendRedirectURIToSave, stateToSendToAuthProvider, stateExpiry, urlWithState;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    this.getAuthorisationURLFromBackend({
                      thirdPartyId: input.thirdPartyId,
                      tenantId: input.tenantId,
                      redirectURIOnProviderDashboard: input.redirectURIOnProviderDashboard || input.frontendRedirectURI,
                      userContext: input.userContext,
                      options: input.options
                    })
                  ];
                case 1:
                  urlResponse = _a.sent();
                  frontendRedirectURIToSave = input.redirectURIOnProviderDashboard !== void 0 && input.frontendRedirectURI !== input.redirectURIOnProviderDashboard ? input.frontendRedirectURI : void 0;
                  stateToSendToAuthProvider = this.generateStateToSendToOAuthProvider({
                    frontendRedirectURI: frontendRedirectURIToSave,
                    userContext: input.userContext
                  });
                  stateExpiry = Date.now() + 1e3 * 60 * 10;
                  return [
                    4,
                    this.setStateAndOtherInfoToStorage({
                      state: {
                        stateForAuthProvider: stateToSendToAuthProvider,
                        thirdPartyId: input.thirdPartyId,
                        tenantId: input.tenantId,
                        expiresAt: stateExpiry,
                        redirectURIOnProviderDashboard: input.redirectURIOnProviderDashboard || input.frontendRedirectURI,
                        pkceCodeVerifier: urlResponse.pkceCodeVerifier
                      },
                      userContext: input.userContext
                    })
                  ];
                case 2:
                  _a.sent();
                  urlWithState = (0, utils_1.appendQueryParamsToURL)(urlResponse.urlWithQueryParams, {
                    state: stateToSendToAuthProvider
                  });
                  return [2, urlWithState];
              }
            });
          });
        },
        getAuthorisationURLFromBackend: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var queryParams, _a, jsonBody, fetchResponse;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  queryParams = {
                    thirdPartyId: input.thirdPartyId,
                    redirectURIOnProviderDashboard: input.redirectURIOnProviderDashboard
                  };
                  if (recipeImplInput.clientType !== void 0) {
                    queryParams.clientType = recipeImplInput.clientType;
                  }
                  return [
                    4,
                    querier.get(
                      input.tenantId,
                      "/authorisationurl",
                      {},
                      queryParams,
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "GET_AUTHORISATION_URL",
                        options: input.options,
                        userContext: input.userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "GET_AUTHORISATION_URL",
                        userContext: input.userContext
                      })
                    )
                  ];
                case 1:
                  _a = _b.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  return [
                    2,
                    {
                      status: "OK",
                      urlWithQueryParams: jsonBody.urlWithQueryParams,
                      pkceCodeVerifier: jsonBody.pkceCodeVerifier,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        signInAndUp: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var stateFromStorage, stateFromQueryParams, verifiedState, errorInQuery, queryParams, queryParamsObj, _a, jsonBody, fetchResponse;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  stateFromStorage = this.getStateAndOtherInfoFromStorage({
                    userContext: input.userContext
                  });
                  stateFromQueryParams = this.getAuthStateFromURL({
                    userContext: input.userContext
                  });
                  return [
                    4,
                    this.verifyAndGetStateOrThrowError({
                      stateFromAuthProvider: stateFromQueryParams,
                      stateObjectFromStorage: stateFromStorage,
                      userContext: input.userContext
                    })
                  ];
                case 1:
                  verifiedState = _b.sent();
                  errorInQuery = this.getAuthErrorFromURL({
                    userContext: input.userContext
                  });
                  if (errorInQuery !== void 0) {
                    throw new Error("Auth provider responded with error: ".concat(errorInQuery));
                  }
                  queryParams = (0, utils_1.getAllQueryParams)();
                  queryParamsObj = Object.fromEntries(queryParams);
                  return [
                    4,
                    querier.post(
                      verifiedState.tenantId,
                      "/signinup",
                      {
                        body: JSON.stringify({
                          thirdPartyId: verifiedState.thirdPartyId,
                          clientType: recipeImplInput.clientType,
                          redirectURIInfo: {
                            redirectURIOnProviderDashboard: verifiedState.redirectURIOnProviderDashboard,
                            redirectURIQueryParams: queryParamsObj,
                            pkceCodeVerifier: verifiedState.pkceCodeVerifier
                          }
                        })
                      },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "THIRD_PARTY_SIGN_IN_UP",
                        options: input.options,
                        userContext: input.userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "THIRD_PARTY_SIGN_IN_UP",
                        userContext: input.userContext
                      })
                    )
                  ];
                case 2:
                  _a = _b.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  if (jsonBody.status === "FIELD_ERROR") {
                    throw new error_1.default(jsonBody.error);
                  }
                  return [2, __assign(__assign({}, jsonBody), { fetchResponse })];
              }
            });
          });
        },
        generateStateToSendToOAuthProvider: function(input) {
          var state = {
            state: "".concat(1e20).replace(/[018]/g, function(c) {
              return (parseInt(c) ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> parseInt(c) / 4).toString(16);
            })
          };
          if (input !== void 0 && input.frontendRedirectURI !== void 0) {
            state.frontendRedirectURI = input.frontendRedirectURI;
          }
          return btoa(JSON.stringify(state));
        },
        verifyAndGetStateOrThrowError: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              if (input.stateObjectFromStorage === void 0 || input.stateObjectFromStorage.stateForAuthProvider === void 0) {
                throw new Error("No valid auth state present in session storage");
              }
              if (input.stateFromAuthProvider === void 0) {
                throw new Error("No state recieved from auth provider");
              }
              if (input.stateObjectFromStorage.expiresAt < Date.now()) {
                throw new Error("Auth state verification failed. The auth provider took too long to respond");
              }
              if (input.stateFromAuthProvider !== input.stateObjectFromStorage.stateForAuthProvider) {
                throw new Error(
                  "Auth state verification failed. The auth provider responded with an invalid state"
                );
              }
              return [2, input.stateObjectFromStorage];
            });
          });
        },
        getAuthErrorFromURL: function() {
          return (0, utils_1.getQueryParams)("error");
        },
        getAuthStateFromURL: function() {
          var stateFromURL = (0, utils_1.getQueryParams)("state");
          if (stateFromURL === void 0) {
            return "";
          }
          return stateFromURL;
        }
      };
    }
    exports.default = getRecipeImplementation;
    exports.getRecipeImplementation = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdparty/recipe.js
var require_recipe2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdparty/recipe.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Recipe = void 0;
    var utils_1 = require_utils3();
    var supertokens_js_override_1 = require_build();
    var recipeImplementation_1 = require_recipeImplementation();
    var utils_2 = require_utils();
    var authRecipe_1 = require_authRecipe();
    var Recipe = function(_super) {
      __extends(Recipe2, _super);
      function Recipe2(config) {
        var _this = _super.call(this, (0, utils_1.normaliseUserInput)(config)) || this;
        var builder = new supertokens_js_override_1.default(
          (0, recipeImplementation_1.default)({
            recipeId: _this.config.recipeId,
            appInfo: _this.config.appInfo,
            clientType: _this.config.clientType,
            preAPIHook: _this.config.preAPIHook,
            postAPIHook: _this.config.postAPIHook
          })
        );
        _this.recipeImplementation = builder.override(_this.config.override.functions).build();
        return _this;
      }
      Recipe2.init = function(config) {
        return function(appInfo, clientType) {
          Recipe2.instance = new Recipe2(
            __assign(__assign({}, config), { recipeId: Recipe2.RECIPE_ID, appInfo, clientType })
          );
          return Recipe2.instance;
        };
      };
      Recipe2.getInstanceOrThrow = function() {
        if (Recipe2.instance === void 0) {
          var error = "No instance of ThirdParty found. Make sure to call the ThirdParty.init method.";
          error = (0, utils_2.checkForSSRErrorAndAppendIfNeeded)(error);
          throw Error(error);
        }
        return Recipe2.instance;
      };
      Recipe2.reset = function() {
        if (!(0, utils_2.isTest)()) {
          return;
        }
        Recipe2.instance = void 0;
        return;
      };
      Recipe2.RECIPE_ID = "thirdparty";
      return Recipe2;
    }(authRecipe_1.default);
    exports.Recipe = Recipe;
    exports.default = Recipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdparty/index.js
var require_thirdparty = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdparty/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.signOut = exports.signInAndUp = exports.getAuthorisationURLWithQueryParamsAndSetState = exports.getStateAndOtherInfoFromStorage = exports.init = void 0;
    var utils_1 = require_utils();
    var recipe_1 = require_recipe();
    var recipe_2 = require_recipe2();
    var RecipeWrapper = function() {
      function RecipeWrapper2() {
      }
      RecipeWrapper2.init = function(config) {
        return recipe_2.default.init(config);
      };
      RecipeWrapper2.signOut = function(input) {
        return recipe_2.default.getInstanceOrThrow().signOut({
          userContext: (0, utils_1.getNormalisedUserContext)(
            input === null || input === void 0 ? void 0 : input.userContext
          )
        });
      };
      RecipeWrapper2.getStateAndOtherInfoFromStorage = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.getStateAndOtherInfoFromStorage(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.getAuthorisationURLWithQueryParamsAndSetState = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var userContext, tenantId;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                userContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
                return [
                  4,
                  recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                ];
              case 1:
                tenantId = _a.sent();
                return [
                  2,
                  recipe_2.default.getInstanceOrThrow().recipeImplementation.getAuthorisationURLWithQueryParamsAndSetState(
                    __assign(__assign({ tenantId }, input), { userContext })
                  )
                ];
            }
          });
        });
      };
      RecipeWrapper2.signInAndUp = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.signInAndUp(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      return RecipeWrapper2;
    }();
    exports.default = RecipeWrapper;
    var init = RecipeWrapper.init;
    exports.init = init;
    var getAuthorisationURLWithQueryParamsAndSetState = RecipeWrapper.getAuthorisationURLWithQueryParamsAndSetState;
    exports.getAuthorisationURLWithQueryParamsAndSetState = getAuthorisationURLWithQueryParamsAndSetState;
    var getStateAndOtherInfoFromStorage = RecipeWrapper.getStateAndOtherInfoFromStorage;
    exports.getStateAndOtherInfoFromStorage = getStateAndOtherInfoFromStorage;
    var signInAndUp = RecipeWrapper.signInAndUp;
    exports.signInAndUp = signInAndUp;
    var signOut = RecipeWrapper.signOut;
    exports.signOut = signOut;
  }
});

// node_modules/supertokens-web-js/recipe/thirdparty/index.js
var require_thirdparty2 = __commonJS({
  "node_modules/supertokens-web-js/recipe/thirdparty/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_thirdparty());
  }
});

// node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js
var require_authRecipe_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var postSuperTokensInitCallbacks = require_postSuperTokensInitCallbacks();
    var index = require_recipeModule_shared();
    var recipe = require_session_shared2();
    var AuthRecipe = function(_super) {
      genericComponentOverrideContext.__extends(AuthRecipe2, _super);
      function AuthRecipe2(config) {
        var _this = _super.call(this, config) || this;
        _this.getAuthRecipeDefaultRedirectionURL = function(context) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              if (context.action === "SUCCESS") {
                return [2, context.redirectToPath === void 0 ? "/" : context.redirectToPath];
              } else {
                throw new Error("Should never come here");
              }
            });
          });
        };
        _this.signOut = function(input) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    recipe.Session.getInstanceOrThrow().signOut({
                      userContext: genericComponentOverrideContext.getNormalisedUserContext(
                        input === null || input === void 0 ? void 0 : input.userContext
                      )
                    })
                  ];
                case 1:
                  return [2, _a.sent()];
              }
            });
          });
        };
        _this.doesSessionExist = function(input) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    recipe.Session.getInstanceOrThrow().doesSessionExist({
                      userContext: genericComponentOverrideContext.getNormalisedUserContext(
                        input === null || input === void 0 ? void 0 : input.userContext
                      )
                    })
                  ];
                case 1:
                  return [2, _a.sent()];
              }
            });
          });
        };
        postSuperTokensInitCallbacks.PostSuperTokensInitCallbacks.addPostInitCallback(function() {
          var session = recipe.Session.getInstance();
          if (session !== void 0) {
            session.addAuthRecipeRedirectionHandler(_this.config.recipeId, _this.redirect.bind(_this));
          }
        });
        return _this;
      }
      return AuthRecipe2;
    }(index.RecipeModule);
    function normaliseAuthRecipe(config) {
      return genericComponentOverrideContext.normaliseRecipeModuleConfig(config);
    }
    exports.AuthRecipe = AuthRecipe;
    exports.normaliseAuthRecipe = normaliseAuthRecipe;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdparty-shared.js
var require_thirdparty_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdparty-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var ThirdpartyWebJS = require_thirdparty2();
    var utils = require_authRecipe_shared();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var translationContext = require_translationContext();
    var NormalisedURLPath$1 = require_normalisedURLPath();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ThirdpartyWebJS__default = _interopDefault(ThirdpartyWebJS);
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var NormalisedURLPath__default$1 = _interopDefault(NormalisedURLPath$1);
    var _a = genericComponentOverrideContext.createGenericComponentsOverrideContext();
    var useContext = _a[0];
    var Provider$1 = _a[1];
    function ProviderButton(_a2) {
      var logo = _a2.logo, providerName = _a2.providerName, displayName = _a2.displayName;
      var t = translationContext.useTranslation();
      var providerStyleName = "provider".concat(providerName);
      return jsxRuntime.jsxs(
        "button",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "button providerButton ".concat(providerStyleName) },
          {
            children: [
              logo !== void 0 && jsxRuntime.jsx(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "providerButtonLeft" },
                  {
                    children: jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "providerButtonLogo" },
                        {
                          children: jsxRuntime.jsx(
                            "div",
                            genericComponentOverrideContext.__assign(
                              { "data-supertokens": "providerButtonLogoCenter" },
                              { children: logo }
                            )
                          )
                        }
                      )
                    )
                  }
                )
              ),
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "providerButtonText" },
                  {
                    children: [
                      t("THIRD_PARTY_PROVIDER_DEFAULT_BTN_START"),
                      displayName,
                      t("THIRD_PARTY_PROVIDER_DEFAULT_BTN_END")
                    ]
                  }
                )
              )
            ]
          }
        )
      );
    }
    var Provider = function() {
      function Provider2(config) {
        var _this = this;
        this.config = config;
        this.getButton = function(name) {
          if (_this.config.buttonComponent !== void 0) {
            if (typeof _this.config.buttonComponent === "function") {
              return jsxRuntime.jsx(_this.config.buttonComponent, {
                name: name !== null && name !== void 0 ? name : _this.name
              });
            }
            return _this.config.buttonComponent;
          }
          var providerName = name !== void 0 ? name : _this.name;
          return jsxRuntime.jsx(ProviderButton, {
            logo: _this.getLogo(),
            providerName,
            displayName: providerName
          });
        };
      }
      Object.defineProperty(Provider2.prototype, "id", {
        get: function() {
          return this.config.id;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Provider2.prototype, "name", {
        get: function() {
          return this.config.name;
        },
        enumerable: false,
        configurable: true
      });
      Provider2.prototype.getRedirectURL = function() {
        if (this.config.getRedirectURL) {
          return this.config.getRedirectURL(this.config.id);
        }
        var domain = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().appInfo.websiteDomain.getAsStringDangerous();
        var callbackPath = new NormalisedURLPath__default.default("/callback/".concat(this.config.id));
        var path = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().appInfo.websiteBasePath.appendPath(callbackPath).getAsStringDangerous();
        return "".concat(domain).concat(path);
      };
      Provider2.prototype.getRedirectURIOnProviderDashboard = function() {
        return void 0;
      };
      return Provider2;
    }();
    var ActiveDirectory = function(_super) {
      genericComponentOverrideContext.__extends(ActiveDirectory2, _super);
      function ActiveDirectory2(config) {
        var _this = _super.call(
          this,
          genericComponentOverrideContext.__assign({ id: "active-directory", name: "Active Directory" }, config)
        ) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                width: "18",
                height: "16",
                viewBox: "0 0 416 415",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              },
              {
                children: [
                  jsxRuntime.jsxs(
                    "g",
                    genericComponentOverrideContext.__assign(
                      { clipPath: "url(#clip0_402_84)" },
                      {
                        children: [
                          jsxRuntime.jsx("path", {
                            d: "M415.575 316.343V403.598C415.575 413.817 412.431 415.914 402.736 414.341C337.753 404.646 271.984 395.737 206.477 386.566C194.686 384.994 190.494 380.802 190.494 367.963C191.542 321.584 191.018 274.943 190.494 228.04C190.494 217.821 193.638 214.677 203.857 214.677C270.936 215.201 336.967 215.201 402.736 215.201C413.479 215.201 416.099 219.393 416.099 229.088C415.051 258.435 415.575 287.258 415.575 316.343Z",
                            fill: "#00AAF2"
                          }),
                          jsxRuntime.jsx("path", {
                            d: "M304.214 198.431C271.198 198.431 238.183 197.907 205.167 198.431C194.948 198.431 190.756 196.335 190.756 184.544C191.28 137.117 191.28 90.4763 190.756 43.5734C190.756 34.4025 193.9 31.2582 202.547 29.686C270.15 19.991 337.753 10.558 405.356 0.338969C417.147 -1.23319 415.051 6.62762 415.051 13.1783C415.051 55.1026 415.575 97.813 415.051 139.737C415.051 155.197 414.527 170.657 415.051 186.116C415.575 195.811 411.907 198.431 402.736 198.431C370.244 197.907 337.229 198.431 304.214 198.431Z",
                            fill: "#00AAF2"
                          }),
                          jsxRuntime.jsx("path", {
                            d: "M85.6828 215.987H159.574C167.435 215.987 170.842 218.608 170.842 226.73V372.417C170.842 380.802 167.173 381.588 159.574 380.802C110.575 373.466 61.5764 366.391 12.8393 359.578C3.14432 358.006 0 354.862 0 344.643C0.524054 305.863 0.524054 267.083 0 227.516C0 217.821 2.62027 215.201 12.3153 215.201C37.2078 215.987 61.0523 215.987 85.6828 215.987Z",
                            fill: "#00AAF2"
                          }),
                          jsxRuntime.jsx("path", {
                            d: "M85.6827 198.431H12.8392C3.66825 198.431 0.523926 195.287 0.523926 185.592C1.04798 147.336 1.04798 109.08 0.523926 70.5621C0.523926 61.3912 3.1442 58.2469 12.8392 56.6747C61.8383 50.3861 110.837 43.3113 159.574 35.4505C170.842 33.8784 171.89 37.5467 171.89 46.7177V186.116C171.89 196.335 167.697 197.907 158.526 197.907C134.158 197.907 109.527 198.431 85.6827 198.431Z",
                            fill: "#00AAF2"
                          })
                        ]
                      }
                    )
                  ),
                  jsxRuntime.jsx("defs", {
                    children: jsxRuntime.jsx(
                      "clipPath",
                      genericComponentOverrideContext.__assign(
                        { id: "clip0_402_84" },
                        {
                          children: jsxRuntime.jsx("rect", {
                            width: "416",
                            height: "415",
                            fill: "white"
                          })
                        }
                      )
                    )
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      ActiveDirectory2.init = function(config) {
        if (ActiveDirectory2.instance !== void 0) {
          console.warn("ActiveDirectory Provider was already initialized");
          return ActiveDirectory2.instance;
        }
        ActiveDirectory2.instance = new ActiveDirectory2(config);
        return ActiveDirectory2.instance;
      };
      ActiveDirectory2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        ActiveDirectory2.instance = void 0;
        return;
      };
      return ActiveDirectory2;
    }(Provider);
    var Apple = function(_super) {
      genericComponentOverrideContext.__extends(Apple2, _super);
      function Apple2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "apple", name: "Apple" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                xmlns: "http://www.w3.org/2000/svg",
                width: "15.614",
                height: "18",
                viewBox: "0 0 15.614 18.737"
              },
              {
                children: jsxRuntime.jsxs(
                  "g",
                  genericComponentOverrideContext.__assign(
                    {
                      id: "iconfinder_logo_brand_brands_logos_apple_ios_2993701",
                      transform: "translate(-2)"
                    },
                    {
                      children: [
                        jsxRuntime.jsx("path", {
                          id: "Path_91415",
                          d: "M14.494 11.075a4.29 4.29 0 0 1 2.372-3.836A4.888 4.888 0 0 0 13.713 6a4.783 4.783 0 0 0-1.83.406 4.357 4.357 0 0 1-1.684.375 4.357 4.357 0 0 1-1.684-.375A4.783 4.783 0 0 0 6.685 6C6.206 6 2 6.153 2 11.465c0 4.344 2.964 8.587 4.685 8.587a5.18 5.18 0 0 0 2.194-.464 3.2 3.2 0 0 1 1.32-.316 3.2 3.2 0 0 1 1.32.317 5.187 5.187 0 0 0 2.194.463c1.206 0 2.922-2.085 3.9-4.826a4.209 4.209 0 0 1-3.119-4.151z",
                          style: { fill: "#000" },
                          transform: "translate(0 -1.316)"
                        }),
                        jsxRuntime.jsx("path", {
                          id: "XMLID_1339_",
                          d: "M12 4.684A4.734 4.734 0 0 0 15.906 0 4.734 4.734 0 0 0 12 4.684z",
                          style: { fill: "#000" },
                          transform: "translate(-2.193)"
                        }),
                        jsxRuntime.jsx("path", {
                          id: "Path_91416",
                          d: "M6.685 6.2a4.783 4.783 0 0 1 1.83.406 4.357 4.357 0 0 0 1.684.375 4.357 4.357 0 0 0 1.684-.381 4.783 4.783 0 0 1 1.83-.406 4.953 4.953 0 0 1 3.014 1.126c.047-.026.091-.058.14-.082A4.888 4.888 0 0 0 13.713 6a4.783 4.783 0 0 0-1.83.406 4.357 4.357 0 0 1-1.684.375 4.357 4.357 0 0 1-1.684-.375A4.783 4.783 0 0 0 6.685 6C6.206 6 2 6.153 2 11.465v.107C2.053 6.352 6.208 6.2 6.685 6.2z",
                          style: { fill: "#000", opacity: 0.1 },
                          transform: "translate(0 -1.316)"
                        }),
                        jsxRuntime.jsx("path", {
                          id: "Path_91417",
                          d: "M13.713 21.368a5.187 5.187 0 0 1-2.194-.463 3.2 3.2 0 0 0-1.32-.317 3.2 3.2 0 0 0-1.32.316 5.18 5.18 0 0 1-2.194.464c-1.707 0-4.633-4.174-4.681-8.48v.088c0 4.344 2.964 8.587 4.685 8.587a5.18 5.18 0 0 0 2.19-.463 3.2 3.2 0 0 1 1.32-.316 3.2 3.2 0 0 1 1.32.317 5.187 5.187 0 0 0 2.194.463c1.206 0 2.922-2.085 3.9-4.826-.023-.006-.043-.017-.066-.023-.991 2.654-2.655 4.653-3.834 4.653z",
                          style: { fill: "#000", opacity: 0.2 },
                          transform: "translate(0 -2.826)"
                        }),
                        jsxRuntime.jsx("path", {
                          id: "Path_91418",
                          d: "M15.888.4A4.621 4.621 0 0 1 12 4.544v.2A4.745 4.745 0 0 0 15.9.261c0 .039 0 .098-.012.139z",
                          style: { fill: "#000", opacity: 0.2 },
                          transform: "translate(-2.193 -.057)"
                        }),
                        jsxRuntime.jsx("path", {
                          id: "Path_91419",
                          d: "M12.005 4.477c.009-.051.02-.192.032-.278q.012-.161.035-.317A4.491 4.491 0 0 1 15.9.2V0a4.738 4.738 0 0 0-3.895 4.477z",
                          style: { fill: "#000", opacity: 0.1 },
                          transform: "translate(-2.194)"
                        }),
                        jsxRuntime.jsx("path", {
                          id: "Path_91420",
                          d: "M14.494 9.759a4.29 4.29 0 0 1 2.372-3.836 4.888 4.888 0 0 0-3.153-1.239 4.783 4.783 0 0 0-1.83.406 4.357 4.357 0 0 1-1.684.375 4.357 4.357 0 0 1-1.684-.375 4.783 4.783 0 0 0-1.83-.406C6.206 4.684 2 4.838 2 10.15c0 4.344 2.964 8.587 4.685 8.587a5.18 5.18 0 0 0 2.194-.464 3.2 3.2 0 0 1 1.32-.316 3.2 3.2 0 0 1 1.32.317 5.187 5.187 0 0 0 2.194.463c1.206 0 2.922-2.085 3.9-4.826a4.209 4.209 0 0 1-3.119-4.152zM13.713 0a4.734 4.734 0 0 0-3.9 4.684A4.734 4.734 0 0 0 13.713 0z",
                          style: { fill: "#000" }
                        })
                      ]
                    }
                  )
                )
              }
            )
          );
        };
        return _this;
      }
      Apple2.prototype.getRedirectURIOnProviderDashboard = function() {
        var domain = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().appInfo.apiDomain.getAsStringDangerous();
        var callbackPath = new NormalisedURLPath__default$1.default("/callback/".concat(this.id));
        var path = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().appInfo.apiBasePath.appendPath(callbackPath).getAsStringDangerous();
        return "".concat(domain).concat(path);
      };
      Apple2.init = function(config) {
        if (Apple2.instance !== void 0) {
          console.warn("Apple Provider was already initialized");
          return Apple2.instance;
        }
        Apple2.instance = new Apple2(config);
        return Apple2.instance;
      };
      Apple2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Apple2.instance = void 0;
        return;
      };
      return Apple2;
    }(Provider);
    var Bitbucket = function(_super) {
      genericComponentOverrideContext.__extends(Bitbucket2, _super);
      function Bitbucket2(config) {
        var _this = _super.call(
          this,
          genericComponentOverrideContext.__assign({ id: "bitbucket", name: "Bitbucket" }, config)
        ) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                width: "19",
                height: "17",
                viewBox: "0 0 19 17",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              },
              {
                children: [
                  jsxRuntime.jsx("path", {
                    d: "M0.59534 0.0522702C0.229457 0.0522702 -0.0841565 0.365883 0.0203815 0.73174L2.58156 16.2556C2.63383 16.6738 2.99971 16.9351 3.3656 16.9351H15.6488C15.9624 16.9351 16.1715 16.726 16.2238 16.4124L18.7849 0.679471C18.8372 0.313614 18.5759 0 18.21 0L0.59534 0.0522702ZM11.3628 11.2901H7.44258L6.3972 5.74956H12.3036L11.3628 11.2901Z",
                    fill: "#2684FF"
                  }),
                  jsxRuntime.jsx("path", {
                    d: "M17.9502 5.76172H12.3052L11.3643 11.3022H7.44415L2.84448 16.7905C2.84448 16.7905 3.05356 16.9996 3.36717 16.9996H15.6504C15.964 16.9996 16.1731 16.7905 16.2253 16.4769L17.9502 5.76172Z",
                    fill: "url(#paint0_linear_4108_67124)"
                  }),
                  jsxRuntime.jsx("defs", {
                    children: jsxRuntime.jsxs(
                      "linearGradient",
                      genericComponentOverrideContext.__assign(
                        {
                          id: "paint0_linear_4108_67124",
                          x1: "19.2748",
                          y1: "7.29202",
                          x2: "9.92001",
                          y2: "14.5943",
                          gradientUnits: "userSpaceOnUse"
                        },
                        {
                          children: [
                            jsxRuntime.jsx("stop", { offset: "0.176", stopColor: "#0052CC" }),
                            jsxRuntime.jsx("stop", { offset: "1", stopColor: "#2684FF" })
                          ]
                        }
                      )
                    )
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      Bitbucket2.init = function(config) {
        if (Bitbucket2.instance !== void 0) {
          console.warn("Bitbucket Provider was already initialized");
          return Bitbucket2.instance;
        }
        Bitbucket2.instance = new Bitbucket2(config);
        return Bitbucket2.instance;
      };
      Bitbucket2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Bitbucket2.instance = void 0;
        return;
      };
      return Bitbucket2;
    }(Provider);
    var BoxySAML = function(_super) {
      genericComponentOverrideContext.__extends(BoxySAML2, _super);
      function BoxySAML2(config) {
        var _this = _super.call(
          this,
          genericComponentOverrideContext.__assign({ id: "boxy-saml", name: "BoxySAML" }, config)
        ) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                width: "18",
                height: "18",
                viewBox: "0 0 315 315",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              },
              {
                children: jsxRuntime.jsx("path", {
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M77.105 1.63917C73.508 2.90917 68.328 7.66517 48.6 27.8102C9.78001 67.4512 4.335 73.2352 2.366 76.9282C0.576997 80.2832 0.5 84.9492 0.5 189.428V298.428L2.653 302.428C5.419 307.568 8.402 310.306 14 312.844C18.441 314.857 19.926 314.884 127 314.884C234.09 314.884 235.558 314.858 240 312.843C245.891 310.171 310.072 246.476 313.03 240.366C314.954 236.392 314.999 233.722 314.978 126.862C314.957 22.7132 314.867 17.2322 313.114 13.3722C310.846 8.37917 304.317 2.63917 299.142 1.08917C296.299 0.237168 266.809 -0.0508316 188.384 0.00716838C94.448 0.0761684 80.968 0.274168 77.105 1.63917ZM299.587 16.2342L302 19.0402V126.895V234.75L298.923 237.339L295.847 239.928H188.569H81.292L78.712 237.537C77.293 236.221 75.859 233.634 75.527 231.787C75.195 229.939 75.053 181.338 75.211 123.783C75.496 20.7532 75.531 19.1032 77.5 16.9152C78.6 15.6922 80.4 14.3202 81.5 13.8662C82.6 13.4122 131.577 13.1282 190.337 13.2342L297.173 13.4282L299.587 16.2342ZM189.775 79.4872C188.276 80.3002 186.578 81.8482 186.001 82.9262C184.177 86.3332 173.018 165.844 174 168.429C177.035 176.411 188.093 177.229 192.086 169.767C192.692 168.635 195.809 149.655 199.012 127.59C205.461 83.1672 205.462 82.7702 199.128 79.4942C195.412 77.5722 193.306 77.5712 189.775 79.4872ZM147.151 92.3012C145.86 93.0182 138.78 100.089 131.419 108.016C117.072 123.464 115.535 126.23 118.33 131.557C119.159 133.136 126.097 140.616 133.749 148.178C146.43 160.712 147.978 161.928 151.253 161.928C153.66 161.928 155.863 161.073 157.923 159.339C160.53 157.146 161 156.054 161 152.194C161 147.768 160.716 147.349 151.011 137.487L141.022 127.337L151.011 116.416C160.041 106.543 161 105.125 161 101.646C161 96.5122 159.53 94.0472 155.452 92.3432C151.342 90.6262 150.183 90.6202 147.151 92.3012ZM219.923 94.8512C217.643 97.1312 217 98.6762 217 101.873C217 106.272 218.273 108.028 231.174 121.43L236.951 127.433L227.491 137.575C217.182 148.627 215.888 150.869 217.139 155.509C218.403 160.197 221.481 162.428 226.684 162.428C231.123 162.428 231.269 162.315 245.459 147.864C260.272 132.777 262.086 129.914 260.113 124.725C259.055 121.943 233.866 94.4622 230.937 92.8942C227.407 91.0052 222.983 91.7912 219.923 94.8512Z",
                  fill: "black"
                })
              }
            )
          );
        };
        return _this;
      }
      BoxySAML2.init = function(config) {
        if (BoxySAML2.instance !== void 0) {
          console.warn("BoxySAML Provider was already initialized");
          return BoxySAML2.instance;
        }
        BoxySAML2.instance = new BoxySAML2(config);
        return BoxySAML2.instance;
      };
      BoxySAML2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        BoxySAML2.instance = void 0;
        return;
      };
      return BoxySAML2;
    }(Provider);
    var Discord = function(_super) {
      genericComponentOverrideContext.__extends(Discord2, _super);
      function Discord2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "discord", name: "Discord" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                width: "18",
                height: "14",
                viewBox: "0 0 18 14",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              },
              {
                children: [
                  jsxRuntime.jsx(
                    "g",
                    genericComponentOverrideContext.__assign(
                      { clipPath: "url(#clip0_4108_67056)" },
                      {
                        children: jsxRuntime.jsx("path", {
                          d: "M15.2477 1.17248C14.0651 0.616848 12.8166 0.222666 11.5342 0C11.3587 0.321942 11.1999 0.653178 11.0585 0.99232C9.69245 0.781074 8.30327 0.781074 6.93722 0.99232C6.79573 0.653213 6.63694 0.321981 6.46152 0C5.17826 0.224546 3.92896 0.619664 2.74515 1.17538C0.394984 4.74367 -0.242109 8.22333 0.0764376 11.6536C1.45275 12.6971 2.99324 13.4908 4.63094 14C4.99971 13.491 5.32601 12.9511 5.6064 12.3858C5.07384 12.1817 4.55982 11.9299 4.0703 11.6332C4.19914 11.5374 4.32514 11.4386 4.4469 11.3427C5.87129 12.0301 7.42594 12.3865 8.99999 12.3865C10.574 12.3865 12.1287 12.0301 13.5531 11.3427C13.6762 11.4458 13.8023 11.5446 13.9297 11.6332C13.4392 11.9304 12.9242 12.1827 12.3907 12.3873C12.6708 12.9523 12.9971 13.4918 13.3662 14C15.0053 13.4928 16.547 12.6996 17.9235 11.655C18.2973 7.67704 17.285 4.22935 15.2477 1.17248ZM6.0099 9.544C5.12221 9.544 4.38885 8.71731 4.38885 7.70029C4.38885 6.68327 5.09673 5.84931 6.00707 5.84931C6.9174 5.84931 7.6451 6.68327 7.62953 7.70029C7.61396 8.71731 6.91457 9.544 6.0099 9.544ZM11.9901 9.544C11.101 9.544 10.3704 8.71731 10.3704 7.70029C10.3704 6.68327 11.0783 5.84931 11.9901 5.84931C12.9018 5.84931 13.6239 6.68327 13.6083 7.70029C13.5927 8.71731 12.8947 9.544 11.9901 9.544Z",
                          fill: "#5865F2"
                        })
                      }
                    )
                  ),
                  jsxRuntime.jsx("defs", {
                    children: jsxRuntime.jsx(
                      "clipPath",
                      genericComponentOverrideContext.__assign(
                        { id: "clip0_4108_67056" },
                        {
                          children: jsxRuntime.jsx("rect", {
                            width: "18",
                            height: "14",
                            fill: "white"
                          })
                        }
                      )
                    )
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      Discord2.init = function(config) {
        if (Discord2.instance !== void 0) {
          console.warn("Discord Provider was already initialized");
          return Discord2.instance;
        }
        Discord2.instance = new Discord2(config);
        return Discord2.instance;
      };
      Discord2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Discord2.instance = void 0;
        return;
      };
      return Discord2;
    }(Provider);
    var Facebook = function(_super) {
      genericComponentOverrideContext.__extends(Facebook2, _super);
      function Facebook2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "facebook", name: "Facebook" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                fill: "#1777F2",
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 30 30",
                width: "24px",
                height: "24px"
              },
              {
                children: jsxRuntime.jsx("path", {
                  d: "M15,3C8.373,3,3,8.373,3,15c0,6.016,4.432,10.984,10.206,11.852V18.18h-2.969v-3.154h2.969v-2.099c0-3.475,1.693-5,4.581-5 c1.383,0,2.115,0.103,2.461,0.149v2.753h-1.97c-1.226,0-1.654,1.163-1.654,2.473v1.724h3.593L19.73,18.18h-3.106v8.697 C22.481,26.083,27,21.075,27,15C27,8.373,21.627,3,15,3z"
                })
              }
            )
          );
        };
        return _this;
      }
      Facebook2.init = function(config) {
        if (Facebook2.instance !== void 0) {
          console.warn("Facebook Provider was already initialized");
          return Facebook2.instance;
        }
        Facebook2.instance = new Facebook2(config);
        return Facebook2.instance;
      };
      Facebook2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Facebook2.instance = void 0;
        return;
      };
      return Facebook2;
    }(Provider);
    var Github = function(_super) {
      genericComponentOverrideContext.__extends(Github2, _super);
      function Github2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "github", name: "GitHub" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              { xmlns: "http://www.w3.org/2000/svg", width: "18", height: "17.556", viewBox: "0 0 18 17.556" },
              {
                children: jsxRuntime.jsx("path", {
                  fill: "#000",
                  fillRule: "evenodd",
                  d: "M145.319 107.44a9 9 0 0 0-2.844 17.54c.45.082.614-.2.614-.434 0-.214-.008-.78-.012-1.531-2.5.544-3.032-1.206-3.032-1.206a2.384 2.384 0 0 0-1-1.317c-.817-.559.062-.547.062-.547a1.89 1.89 0 0 1 1.378.927 1.916 1.916 0 0 0 2.619.748 1.924 1.924 0 0 1 .571-1.2c-2-.227-4.1-1-4.1-4.448a3.479 3.479 0 0 1 .927-2.415 3.233 3.233 0 0 1 .088-2.382s.755-.242 2.475.923a8.535 8.535 0 0 1 4.506 0c1.718-1.165 2.472-.923 2.472-.923a3.234 3.234 0 0 1 .09 2.382 3.473 3.473 0 0 1 .925 2.415c0 3.458-2.1 4.218-4.11 4.441a2.149 2.149 0 0 1 .611 1.667c0 1.2-.011 2.174-.011 2.469 0 .24.162.52.619.433a9 9 0 0 0-2.851-17.539z",
                  transform: "translate(-136.32 -107.44)"
                })
              }
            )
          );
        };
        return _this;
      }
      Github2.init = function(config) {
        if (Github2.instance !== void 0) {
          console.warn("Github Provider was already initialized");
          return Github2.instance;
        }
        Github2.instance = new Github2(config);
        return Github2.instance;
      };
      Github2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Github2.instance = void 0;
        return;
      };
      return Github2;
    }(Provider);
    var Gitlab = function(_super) {
      genericComponentOverrideContext.__extends(Gitlab2, _super);
      function Gitlab2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "gitlab", name: "Gitlab" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                width: "18",
                height: "18",
                viewBox: "0 0 18 18",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              },
              {
                children: [
                  jsxRuntime.jsx("path", {
                    d: "M17.7004 6.86178L17.6751 6.79711L15.2251 0.403269C15.1753 0.277953 15.087 0.171648 14.973 0.0996044C14.8589 0.0287852 14.7259 -0.00532357 14.5918 0.00188338C14.4577 0.00909034 14.3291 0.057266 14.2232 0.139906C14.1186 0.224918 14.0426 0.340113 14.0058 0.469813L12.3516 5.5309H5.65312L3.99889 0.469813C3.96302 0.339406 3.88693 0.223634 3.78145 0.138968C3.67562 0.0563286 3.54698 0.0081529 3.41289 0.000945942C3.27881 -0.00626101 3.14574 0.0278478 3.03166 0.0986669C2.91791 0.171001 2.82972 0.277214 2.77954 0.402332L0.324918 6.79336L0.30055 6.85803C-0.0521303 7.77953 -0.0956629 8.79071 0.176516 9.73911C0.448694 10.6875 1.02183 11.5217 1.8095 12.1159L1.81794 12.1225L1.84043 12.1384L5.57251 14.9333L7.41888 16.3307L8.54356 17.1798C8.67512 17.2797 8.83575 17.3338 9.00093 17.3338C9.16611 17.3338 9.32675 17.2797 9.45831 17.1798L10.583 16.3307L12.4293 14.9333L16.1839 12.1216L16.1933 12.1141C16.9792 11.5197 17.551 10.6864 17.8228 9.73926C18.0945 8.79214 18.0516 7.7824 17.7004 6.86178Z",
                    fill: "#E24329"
                  }),
                  jsxRuntime.jsx("path", {
                    d: "M17.7004 6.86154L17.6751 6.79688C16.4813 7.04191 15.3564 7.54756 14.3807 8.27771L9 12.3463C10.8323 13.7324 12.4275 14.9368 12.4275 14.9368L16.1821 12.1251L16.1914 12.1176C16.9785 11.5233 17.5511 10.6894 17.8233 9.74145C18.0954 8.79352 18.0523 7.78284 17.7004 6.86154Z",
                    fill: "#FC6D26"
                  }),
                  jsxRuntime.jsx("path", {
                    d: "M5.57251 14.9362L7.41887 16.3337L8.54356 17.1828C8.67511 17.2827 8.83575 17.3367 9.00093 17.3367C9.16611 17.3367 9.32674 17.2827 9.4583 17.1828L10.583 16.3337L12.4293 14.9362C12.4293 14.9362 10.8323 13.7281 8.99999 12.3457C7.16769 13.7281 5.57251 14.9362 5.57251 14.9362Z",
                    fill: "#FCA326"
                  }),
                  jsxRuntime.jsx("path", {
                    d: "M3.61837 8.27755C2.64345 7.5459 1.51877 7.03893 0.324918 6.79297L0.30055 6.85764C-0.0521303 7.77914 -0.0956629 8.79031 0.176516 9.73871C0.448694 10.6871 1.02183 11.5213 1.8095 12.1155L1.81794 12.1221L1.84043 12.138L5.57251 14.9329C5.57251 14.9329 7.16582 13.7285 9 12.3424L3.61837 8.27755Z",
                    fill: "#FC6D26"
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      Gitlab2.init = function(config) {
        if (Gitlab2.instance !== void 0) {
          console.warn("Gitlab Provider was already initialized");
          return Gitlab2.instance;
        }
        Gitlab2.instance = new Gitlab2(config);
        return Gitlab2.instance;
      };
      Gitlab2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Gitlab2.instance = void 0;
        return;
      };
      return Gitlab2;
    }(Provider);
    var Google = function(_super) {
      genericComponentOverrideContext.__extends(Google2, _super);
      function Google2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "google", name: "Google" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 48 48", width: "18px", height: "18px" },
              {
                children: [
                  jsxRuntime.jsx("path", {
                    fill: "#FFC107",
                    d: "M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#FF3D00",
                    d: "M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#4CAF50",
                    d: "M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#1976D2",
                    d: "M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      Google2.init = function(config) {
        if (Google2.instance !== void 0) {
          console.warn("Google Provider was already initialized");
          return Google2.instance;
        }
        Google2.instance = new Google2(config);
        return Google2.instance;
      };
      Google2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Google2.instance = void 0;
        return;
      };
      return Google2;
    }(Provider);
    var GoogleWorkspaces = function(_super) {
      genericComponentOverrideContext.__extends(GoogleWorkspaces2, _super);
      function GoogleWorkspaces2(config) {
        var _this = _super.call(
          this,
          genericComponentOverrideContext.__assign({ id: "google-workspaces", name: "Google Workspaces" }, config)
        ) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 48 48", width: "18px", height: "18px" },
              {
                children: [
                  jsxRuntime.jsx("path", {
                    fill: "#FFC107",
                    d: "M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#FF3D00",
                    d: "M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#4CAF50",
                    d: "M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#1976D2",
                    d: "M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      GoogleWorkspaces2.init = function(config) {
        if (GoogleWorkspaces2.instance !== void 0) {
          console.warn("GoogleWorkspaces Provider was already initialized");
          return GoogleWorkspaces2.instance;
        }
        GoogleWorkspaces2.instance = new GoogleWorkspaces2(config);
        return GoogleWorkspaces2.instance;
      };
      GoogleWorkspaces2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        GoogleWorkspaces2.instance = void 0;
        return;
      };
      return GoogleWorkspaces2;
    }(Provider);
    var LinkedIn = function(_super) {
      genericComponentOverrideContext.__extends(LinkedIn2, _super);
      function LinkedIn2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "linkedin", name: "LinkedIn" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsxs(
            "svg",
            genericComponentOverrideContext.__assign(
              { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 48 48", width: "20", height: "20" },
              {
                children: [
                  jsxRuntime.jsx("path", {
                    fill: "#0288D1",
                    d: "M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5V37z"
                  }),
                  jsxRuntime.jsx("path", {
                    fill: "#FFF",
                    d: "M12 19H17V36H12zM14.485 17h-.028C12.965 17 12 15.888 12 14.499 12 13.08 12.995 12 14.514 12c1.521 0 2.458 1.08 2.486 2.499C17 15.887 16.035 17 14.485 17zM36 36h-5v-9.099c0-2.198-1.225-3.698-3.192-3.698-1.501 0-2.313 1.012-2.707 1.99C24.957 25.543 25 26.511 25 27v9h-5V19h5v2.616C25.721 20.5 26.85 19 29.738 19c3.578 0 6.261 2.25 6.261 7.274L36 36 36 36z"
                  })
                ]
              }
            )
          );
        };
        return _this;
      }
      LinkedIn2.init = function(config) {
        if (LinkedIn2.instance !== void 0) {
          console.warn("LinkedIn Provider was already initialized");
          return LinkedIn2.instance;
        }
        LinkedIn2.instance = new LinkedIn2(config);
        return LinkedIn2.instance;
      };
      LinkedIn2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        LinkedIn2.instance = void 0;
        return;
      };
      return LinkedIn2;
    }(Provider);
    var Okta = function(_super) {
      genericComponentOverrideContext.__extends(Okta2, _super);
      function Okta2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "okta", name: "Okta" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                width: "18",
                height: "18",
                viewBox: "0 0 1593 1594",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              },
              {
                children: jsxRuntime.jsx("path", {
                  fillRule: "evenodd",
                  clipRule: "evenodd",
                  d: "M755.371 0.822553C753.587 1.24555 751.498 2.11455 750.729 2.75355C746.718 6.08155 746.699 5.58056 754.545 104.932C758.689 157.411 762.328 202.485 762.632 205.098L763.184 209.848H744.726C726.381 209.848 726.25 209.864 723.226 212.408C721.414 213.933 719.977 216.259 719.674 218.158C719.394 219.913 723.341 265.223 728.444 318.848L737.723 416.348L740.669 416.149C742.289 416.04 749.69 415.253 757.115 414.4C772.989 412.578 813.813 412.311 830.965 413.918C837.208 414.503 842.472 414.824 842.664 414.632C842.856 414.44 850.523 322.801 859.702 210.989L876.391 7.69355L874.409 5.02055C870.729 0.055553 869.505 -0.0424466 812.115 0.00655337C782.69 0.0315534 757.155 0.398553 755.371 0.822553ZM565.615 32.4186C552.965 37.0716 530.015 45.4686 514.615 51.0796C484.148 62.1796 480.115 64.4656 480.115 70.6336C480.115 72.2766 483.995 82.1086 488.736 92.4836C493.478 102.859 512.153 143.662 530.236 183.156C548.32 222.651 563.115 255.305 563.115 255.722C563.115 256.138 560.077 257.532 556.365 258.82C539.094 264.812 529.035 269.124 527.622 271.142C524.052 276.239 524.624 277.664 560.735 353.573C579.777 393.599 598.737 433.548 602.87 442.348C607.003 451.148 610.549 458.536 610.75 458.765C610.951 458.994 618.653 455.547 627.865 451.104C653.08 438.944 674.875 430.862 698.988 424.731C704.143 423.42 708.548 421.865 708.777 421.275C709.006 420.684 698.347 380.634 685.091 332.275C671.834 283.915 655.808 225.448 649.478 202.348C615.597 78.7125 602.973 33.0726 601.964 30.5636C600.329 26.4996 596.44 23.8386 592.23 23.9026C590.242 23.9336 578.265 27.7656 565.615 32.4186ZM1022.17 36.5976C1019.4 39.1596 1017.38 45.9386 992.619 135.803C978 188.853 965.914 232.383 965.761 232.535C965.609 232.688 959.213 230.53 951.549 227.74C931.496 220.44 931.001 220.334 926.683 222.383C924.683 223.332 922.644 224.86 922.152 225.778C921.661 226.696 911.079 266.35 898.637 313.898C886.195 361.445 874.932 404.38 873.608 409.307C872.283 414.235 871.384 418.45 871.608 418.674C871.832 418.899 880.476 421.241 890.815 423.879C916.054 430.32 936.711 437.651 959.49 448.252C964.921 450.78 969.702 452.848 970.113 452.848C970.525 452.848 976.728 440.136 983.898 424.598C991.068 409.06 1019.75 346.848 1047.64 286.348C1075.52 225.848 1107.79 155.873 1119.35 130.848C1130.9 105.823 1140.57 83.7506 1140.84 81.7986C1141.22 78.9866 1140.77 77.5966 1138.68 75.1026C1137.22 73.3706 1135.03 71.6546 1133.82 71.2896C1132.61 70.9236 1120.81 66.6616 1107.61 61.8176C1046.92 39.5476 1030.7 33.8476 1028.02 33.8476C1026.27 33.8476 1023.98 34.9246 1022.17 36.5976ZM329.005 148.532C245.629 218.213 248.776 215.262 250.73 221.938C251.335 224.006 273.753 247.432 321.615 296.014C360.115 335.093 391.75 367.421 391.914 367.854C392.078 368.287 386.17 373.621 378.785 379.708C371.4 385.794 365.078 391.502 364.736 392.393C364.395 393.283 364.115 395.861 364.115 398.121C364.115 402.223 364.199 402.313 416.365 453.74C445.103 482.071 477.192 513.722 487.675 524.077L506.736 542.903L524.175 525.558C542.748 507.086 555.863 495.894 573.615 483.366C579.665 479.097 585.011 475.24 585.494 474.797C585.978 474.353 580.844 466.196 574.085 456.669C544.09 414.391 470.535 310.468 415.313 232.348C382.267 185.598 353.7 145.661 351.831 143.598C348.861 140.319 347.867 139.848 343.915 139.848C339.701 139.848 338.695 140.434 329.005 148.532ZM1266.86 160.603C1265.34 161.563 1248.24 184.66 1228.86 211.931C1209.47 239.202 1183.49 275.757 1171.11 293.165C1158.74 310.572 1148.32 324.71 1147.96 324.581C1147.6 324.453 1142.05 319.848 1135.63 314.348C1120.81 301.641 1118.24 300.194 1113.19 301.708C1109.71 302.75 1107.81 305.149 1089.56 331.595C1041.95 400.595 1030.76 416.804 1013.94 441.099C1004.14 455.261 996.14 467.186 996.17 467.599C996.2 468.011 1000.75 471.244 1006.29 474.783C1026.66 487.806 1045.12 502.629 1064.51 521.544L1077.4 534.123L1112.55 498.735C1131.88 479.272 1170.41 440.398 1198.17 412.348C1225.93 384.298 1274.45 335.297 1305.99 303.457C1338.08 271.062 1363.91 244.196 1364.63 242.456C1366.98 236.843 1365.62 234.388 1355.24 225.499C1332.08 205.669 1278.42 161.08 1276.43 160.016C1273.35 158.37 1270.07 158.572 1266.86 160.603ZM145.518 334.381C142.968 335.672 137.54 344.388 114.831 383.649C99.6567 409.883 86.7447 432.664 86.1367 434.272C84.7277 438.001 85.6147 442.035 88.4167 444.642C90.4437 446.528 119.381 460.718 157.115 478.328C180.061 489.037 240.525 517.654 256.793 525.506L270.97 532.348L262.058 547.348C252.182 563.97 251.204 567.61 255.365 572.24C257.418 574.524 269.859 580.474 324.615 605.355C333.415 609.354 349.165 616.553 359.615 621.353C370.065 626.153 386.49 633.665 396.115 638.048C405.74 642.43 418.937 648.508 425.441 651.556C432.107 654.679 437.635 656.715 438.111 656.222C438.575 655.741 440.65 651.073 442.721 645.848C450.527 626.156 468.233 594.437 482.59 574.427C485.67 570.134 488.286 566.26 488.403 565.819C488.52 565.378 483.89 561.754 478.115 557.765C472.34 553.776 451.64 539.493 432.115 526.025C412.59 512.557 392.34 498.519 387.115 494.829C381.89 491.138 366.59 480.543 353.115 471.283C328.265 454.206 301.206 435.556 277.615 419.246C270.465 414.303 244.815 396.601 220.615 379.909C196.415 363.217 171.6 346.023 165.471 341.7C153.324 333.133 150.227 331.997 145.518 334.381ZM1454.14 360.033C1451.91 360.861 1447.53 363.841 1373.61 414.842C1287.56 474.22 1288.27 473.746 1287.31 472.517C1286.81 471.874 1282.69 464.927 1278.17 457.079C1269.79 442.539 1267.24 439.848 1261.89 439.848C1259.16 439.848 1261.37 438.394 1229.11 461.347C1215.09 471.325 1186.29 491.803 1165.11 506.853C1106.29 548.661 1096.11 555.969 1096.11 556.41C1096.11 556.633 1098.97 560.536 1102.46 565.082C1116.69 583.637 1130.43 606.122 1142.17 630.093L1150.28 646.663L1155.45 644.372C1158.29 643.112 1174.79 635.344 1192.11 627.109C1209.44 618.873 1231.04 608.635 1240.11 604.357C1257.3 596.254 1323.82 564.737 1354.11 550.34C1363.74 545.767 1397.94 529.553 1430.11 514.31C1518.36 472.5 1518.64 472.365 1520.45 469.777C1524.17 464.466 1523.53 463.03 1496.26 415.971C1482.04 391.428 1469.71 369.989 1468.85 368.327C1465.31 361.432 1459.39 358.093 1454.14 360.033ZM31.3707 581.891C26.9977 582.837 25.6537 584.122 23.8157 589.112C21.5067 595.379 3.7927 697.43 4.5147 700.305C4.8527 701.651 6.1477 703.938 7.3937 705.386C9.9457 708.353 9.4697 708.277 47.1147 711.767C58.9397 712.863 95.1647 716.26 127.615 719.314C160.065 722.369 192.015 725.359 198.615 725.96C205.215 726.56 210.808 727.236 211.044 727.462C211.28 727.688 210.257 734.954 208.772 743.61C205.433 763.065 205.403 765.788 208.494 769.122C211.134 771.972 212.318 772.202 232.615 773.807C254.085 775.505 355.259 783.745 375.115 785.413C411.55 788.474 410.718 788.467 411.449 785.736C411.8 784.423 412.098 780.198 412.111 776.348C412.169 758.857 417.544 724.291 424.135 699.017C426.238 690.954 427.793 684.193 427.592 683.992C427.231 683.63 369.058 668.328 324.615 656.903C311.965 653.652 282.49 645.97 259.115 639.834C235.74 633.697 207.39 626.273 196.115 623.335C184.84 620.397 170.44 616.634 164.115 614.973C157.79 613.311 126.515 605.163 94.6147 596.866C62.7147 588.569 36.1647 581.647 35.6147 581.484C35.0647 581.322 33.1547 581.504 31.3707 581.891ZM1546.11 615.815C1538.14 617.903 1517.44 623.289 1500.11 627.783C1482.79 632.277 1446.19 641.82 1418.78 648.988C1391.38 656.157 1368.74 661.812 1368.49 661.555C1368.23 661.298 1366.71 653.613 1365.11 644.477C1363.51 635.34 1361.72 626.985 1361.15 625.908C1359.64 623.097 1356.07 620.848 1353.12 620.848C1350.89 620.848 1319.22 629.338 1256.11 646.849C1218.37 657.324 1164.54 672.094 1162.31 672.591C1160.67 672.954 1160.18 673.576 1160.63 674.726C1160.98 675.618 1163.04 682.415 1165.21 689.831C1171.93 712.75 1176.96 739.931 1179.09 764.738C1179.62 771.002 1180.21 776.278 1180.4 776.463C1180.58 776.647 1184.75 776.373 1189.67 775.854C1194.59 775.334 1206.49 774.203 1216.11 773.34C1225.74 772.477 1237.66 771.337 1242.61 770.807C1247.56 770.277 1259.26 769.175 1268.61 768.359C1277.96 767.542 1297.76 765.739 1312.61 764.352C1327.46 762.965 1351.76 760.703 1366.61 759.324C1381.46 757.946 1398.56 756.353 1404.61 755.783C1410.66 755.214 1424.84 753.889 1436.11 752.838C1480.11 748.74 1523.98 744.648 1554.1 741.832C1587.92 738.671 1589.03 738.398 1591.9 732.558C1593.01 730.282 1592.01 723.182 1584.11 677.148C1579.12 648.108 1574.33 622.397 1573.46 620.013C1571.73 615.25 1567.31 611.801 1563.11 611.936C1561.74 611.981 1554.09 613.726 1546.11 615.815ZM1180.11 811.098C1180.1 829.653 1174.94 865.216 1168.58 890.527C1166.13 900.282 1164.46 908.593 1164.87 908.996C1165.28 909.4 1183.16 914.3 1204.61 919.885C1265.74 935.803 1343.25 956.012 1382.61 966.298C1434.97 979.976 1520.96 1002.4 1540.48 1007.47C1549.76 1009.88 1558.22 1011.85 1559.28 1011.85C1562.6 1011.85 1566.79 1009.06 1567.87 1006.14C1569.38 1002.05 1587.17 899.031 1587.14 894.521C1587.11 889.775 1583.01 885.25 1578.01 884.451C1576.14 884.152 1561.79 882.755 1546.11 881.347C1530.44 879.939 1498.49 876.975 1475.11 874.761C1451.74 872.547 1420.97 869.651 1406.73 868.326C1392.5 867 1380.69 865.761 1380.5 865.572C1380.32 865.382 1381.57 857.364 1383.29 847.752C1386.1 832.106 1386.28 829.975 1385.02 827.402C1381.71 820.637 1382.47 820.776 1324.61 816.341C1313.61 815.498 1288.41 813.469 1268.61 811.832C1248.81 810.194 1226.76 808.379 1219.61 807.797C1212.46 807.215 1201.66 806.315 1195.61 805.797C1178.62 804.342 1180.12 803.83 1180.11 811.098ZM397.115 818.912C392.44 819.344 376.015 820.879 360.615 822.323C345.215 823.767 328.115 825.357 322.615 825.855C276.577 830.032 196.789 837.342 170.544 839.788C140.378 842.599 95.6827 846.715 33.6837 852.39C4.40771 855.07 3.0157 855.448 0.533704 861.387C-0.782296 864.537 -0.220296 868.502 8.7057 919.052C13.9777 948.908 18.9107 974.817 19.6667 976.628C20.5917 978.841 22.2407 980.421 24.6967 981.447C28.2817 982.945 29.1557 982.763 70.9827 971.828C161.789 948.087 220.975 932.848 222.371 932.848C223.461 932.848 224.394 936.188 226.072 946.098C230.012 969.362 230.596 970.862 236.474 972.801C239.529 973.81 242.351 973.262 262.259 967.796C291.917 959.653 347.281 944.37 372.615 937.334C385.633 933.718 407.383 927.797 422.865 923.654C432.227 921.149 432.179 921.238 429.072 912.255C421.718 890.993 414.578 854.193 412.55 827.098L411.857 817.848L408.736 817.987C407.019 818.064 401.79 818.48 397.115 818.912ZM1153.04 939.543C1143.25 965.286 1122.61 1002.6 1106.45 1023.77C1103.72 1027.35 1103.3 1028.45 1104.33 1029.42C1105.04 1030.09 1111.46 1034.64 1118.61 1039.54C1125.76 1044.44 1143.99 1057.02 1159.11 1067.49C1174.24 1077.97 1196.06 1093.04 1207.61 1100.99C1219.16 1108.94 1244.81 1126.63 1264.61 1140.32C1284.41 1154 1316.59 1176.22 1336.11 1189.69C1355.64 1203.16 1376.56 1217.63 1382.61 1221.85C1420.7 1248.42 1436.69 1259.15 1439.29 1259.9C1441.18 1260.44 1443.59 1260.31 1445.92 1259.55C1449.29 1258.44 1450.47 1256.81 1461.18 1238.35C1467.56 1227.35 1480.36 1205.3 1489.63 1189.35C1511.51 1151.7 1511.5 1151.79 1493.61 1143.36C1488.66 1141.03 1472.01 1133.16 1456.61 1125.88C1441.21 1118.6 1420.96 1109.03 1411.61 1104.61C1402.26 1100.2 1381.34 1090.29 1365.11 1082.59C1348.89 1074.9 1332.31 1067.06 1328.28 1065.18C1321.16 1061.87 1320.98 1061.7 1322.37 1059.56C1323.16 1058.34 1327.25 1051.46 1331.46 1044.27C1341.99 1026.29 1341.77 1023.1 1329.61 1017.07C1324.33 1014.45 1310 1007.86 1235.11 973.62C1225.49 969.218 1203.52 959.144 1186.3 951.233C1169.07 943.321 1154.77 936.848 1154.52 936.848C1154.27 936.848 1153.6 938.061 1153.04 939.543ZM391.115 971.447C363.89 984.392 331.715 999.628 319.615 1005.3C307.515 1010.98 287.04 1020.67 274.115 1026.84C261.19 1033.01 233.965 1045.94 213.615 1055.57C193.265 1065.2 164.015 1079.06 148.615 1086.35C133.215 1093.65 110.49 1104.4 98.1147 1110.24C75.6867 1120.82 71.7627 1123.42 70.4827 1128.52C69.6017 1132.03 70.2547 1133.27 100.471 1185.75C127.515 1232.72 129.014 1234.84 135.115 1234.84C136.695 1234.84 145.163 1229.63 158.115 1220.7C169.39 1212.93 186.49 1201.13 196.115 1194.5C205.74 1187.86 220.163 1177.91 228.167 1172.39C236.171 1166.86 252.509 1155.6 264.473 1147.35C276.438 1139.1 290.133 1129.57 294.908 1126.18C299.682 1122.8 303.898 1120.21 304.276 1120.45C304.654 1120.68 308.659 1127.41 313.176 1135.39C317.692 1143.38 322.512 1150.8 323.886 1151.88C325.358 1153.04 327.921 1153.85 330.125 1153.85C333.294 1153.85 336.362 1152.07 350.24 1142.19C359.246 1135.78 379.665 1121.24 395.615 1109.87C411.565 1098.51 440.365 1078.04 459.615 1064.37C478.865 1050.71 494.989 1039.21 495.447 1038.81C495.904 1038.41 492.342 1032.79 487.531 1026.32C473.616 1007.61 462.768 989.878 451.909 968.098C446.356 956.96 441.543 947.863 441.214 947.88C440.884 947.898 418.34 958.503 391.115 971.447ZM1069.61 1066.17C1052.95 1083.09 1034.57 1098.84 1016.98 1111.27L1005.35 1119.49L1015.54 1133.92C1021.14 1141.85 1034.51 1160.72 1045.24 1175.85C1055.97 1190.97 1076.82 1220.45 1091.59 1241.35C1106.35 1262.25 1121.66 1283.85 1125.62 1289.35C1129.57 1294.85 1156.32 1332.65 1185.06 1373.35C1213.8 1414.05 1238.84 1448.81 1240.7 1450.6C1243.35 1453.14 1244.94 1453.85 1248.02 1453.85C1251.64 1453.85 1253.47 1452.58 1270.78 1438.07C1281.14 1429.39 1300.53 1413.14 1313.88 1401.96C1327.23 1390.79 1338.81 1380.69 1339.63 1379.52C1340.45 1378.36 1341.11 1375.66 1341.11 1373.52C1341.11 1369.76 1339.86 1368.37 1297.98 1325.72C1274.26 1301.56 1254.53 1281.6 1254.14 1281.36C1253.75 1281.12 1241.22 1268.37 1226.3 1253.04L1199.17 1225.15L1211.74 1214.78C1218.65 1209.08 1225.17 1203.33 1226.21 1202C1228.36 1199.26 1228.64 1194.38 1226.83 1191.25C1225.67 1189.25 1086.54 1051.57 1085.24 1051.14C1084.9 1051.02 1077.86 1057.79 1069.61 1066.17ZM485.54 1089.1C443.499 1131.55 280.64 1296.23 253.142 1324.09C240.232 1337.17 229.11 1348.88 228.427 1350.11C227.745 1351.34 227.17 1353.67 227.15 1355.29C227.102 1359.31 230.005 1361.98 277.478 1401.6C319.385 1436.57 319.323 1436.53 325.491 1433.72C326.947 1433.06 334.858 1422.9 344.761 1408.97C354.001 1395.98 370.38 1372.97 381.159 1357.85C391.939 1342.72 410.34 1316.85 422.051 1300.35C433.762 1283.85 443.681 1269.98 444.093 1269.53C444.506 1269.09 451.017 1273.92 458.563 1280.29C466.109 1286.65 473.371 1292.12 474.699 1292.46C478.081 1293.31 481.896 1292.16 484.35 1289.56C486.257 1287.54 597.115 1127.06 597.115 1126.32C597.115 1126.14 592.542 1123 586.953 1119.34C566.513 1105.95 545.465 1089.04 527.51 1071.6C520.853 1065.14 515.204 1059.85 514.957 1059.85C514.71 1059.85 501.473 1073.01 485.54 1089.1ZM970.615 1139.54C946.744 1151.7 918.648 1162.43 894.115 1168.75C884.345 1171.26 882.668 1171.98 882.965 1173.53C883.157 1174.53 890.275 1200.77 898.784 1231.85C907.292 1262.92 927.242 1335.82 943.117 1393.85C958.992 1451.87 975.842 1513.45 980.561 1530.69C985.28 1547.92 989.582 1562.85 990.122 1563.86C991.74 1566.88 996.205 1569.85 999.144 1569.85C1000.66 1569.85 1016.24 1564.64 1033.76 1558.28C1051.28 1551.92 1074.84 1543.35 1086.11 1539.25C1108.22 1531.21 1112.11 1528.77 1112.11 1522.97C1112.11 1521.39 1103.37 1500.99 1092.5 1477.23C1081.71 1453.65 1064.23 1415.45 1053.65 1392.35C1029.01 1338.56 1028.73 1337.9 1029.34 1337.28C1029.63 1337 1036.62 1334.35 1044.89 1331.4C1062.38 1325.14 1064.62 1323.87 1066.14 1319.26C1067.47 1315.23 1070.88 1322.91 1026.16 1228.89C1009.28 1193.39 992.347 1157.72 988.539 1149.62C984.731 1141.52 981.165 1134.9 980.615 1134.92C980.065 1134.94 975.565 1137.01 970.615 1139.54ZM616.923 1150.11C614.343 1155.74 605.506 1174.97 597.285 1192.85C589.064 1210.72 574.691 1242 565.345 1262.35C547.547 1301.1 512.746 1376.85 475.088 1458.82C461.702 1487.95 452.637 1508.91 452.361 1511.36C451.982 1514.72 452.374 1516 454.597 1518.64C456.08 1520.41 457.82 1521.85 458.464 1521.85C459.108 1521.85 478.755 1528.86 502.125 1537.42C556.721 1557.44 560.841 1558.85 564.747 1558.85C572.203 1558.85 570.669 1563.28 599.711 1457.85C614.332 1404.77 626.591 1361.06 626.954 1360.71C627.318 1360.36 634.59 1362.7 643.115 1365.91C668.473 1375.44 668.955 1375.2 675.503 1349.85C677.989 1340.22 689.269 1297.05 700.569 1253.91C711.869 1210.77 721.115 1175.12 721.115 1174.68C721.115 1174.24 719.878 1173.62 718.365 1173.3C687.342 1166.68 653.864 1155.31 629.924 1143.25C626.207 1141.38 622.816 1139.85 622.39 1139.86C621.964 1139.86 619.504 1144.47 616.923 1150.11ZM843.115 1178.9C821.669 1182.04 774.426 1182.56 756.715 1179.87C752.921 1179.29 749.712 1178.93 749.584 1179.08C749.457 1179.23 745.664 1224.35 741.156 1279.35C736.648 1334.35 729.22 1424.92 724.65 1480.63C718.962 1549.95 716.603 1583.08 717.175 1585.63C717.634 1587.67 719.184 1590.36 720.618 1591.6L723.227 1593.85H781.248H839.269L842.192 1590.92C844.994 1588.12 845.474 1586.76 845.223 1582.35C845.16 1581.25 841.735 1537.82 837.612 1485.85C833.488 1433.87 830.114 1389.91 830.115 1388.16V1384.97L848.699 1384.66L867.283 1384.35L870.199 1381.08C872.214 1378.82 873.115 1376.76 873.115 1374.4C873.115 1372.52 869.065 1328.15 864.115 1275.79C859.165 1223.44 855.115 1179.98 855.115 1179.23C855.115 1177.69 851.995 1177.6 843.115 1178.9Z",
                  fill: "black"
                })
              }
            )
          );
        };
        return _this;
      }
      Okta2.init = function(config) {
        if (Okta2.instance !== void 0) {
          console.warn("Okta Provider was already initialized");
          return Okta2.instance;
        }
        Okta2.instance = new Okta2(config);
        return Okta2.instance;
      };
      Okta2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Okta2.instance = void 0;
        return;
      };
      return Okta2;
    }(Provider);
    var Twitter = function(_super) {
      genericComponentOverrideContext.__extends(Twitter2, _super);
      function Twitter2(config) {
        var _this = _super.call(this, genericComponentOverrideContext.__assign({ id: "twitter", name: "Twitter" }, config)) || this;
        _this.getLogo = function() {
          return jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                xmlns: "http://www.w3.org/2000/svg",
                width: "20.129",
                height: "16.356",
                viewBox: "0 0 20.129 16.356"
              },
              {
                children: jsxRuntime.jsx("g", {
                  children: jsxRuntime.jsx("g", {
                    children: jsxRuntime.jsx("path", {
                      fill: "#04ABEE",
                      d: "M45.232 35.964a8.242 8.242 0 0 1-2.372.649 4.141 4.141 0 0 0 1.816-2.284 8.268 8.268 0 0 1-2.623 1 4.133 4.133 0 0 0-7.037 3.771 11.724 11.724 0 0 1-8.516-4.317 4.133 4.133 0 0 0 1.282 5.517 4.1 4.1 0 0 1-1.87-.517v.052a4.132 4.132 0 0 0 3.313 4.049 4.147 4.147 0 0 1-1.865.071 4.134 4.134 0 0 0 3.858 2.868 8.338 8.338 0 0 1-6.114 1.71 11.745 11.745 0 0 0 18.08-9.894q0-.268-.012-.534a8.374 8.374 0 0 0 2.061-2.137z",
                      transform: "translate(34.799 -7.41) translate(2.201 4.266) translate(-62.103 -30.883)"
                    })
                  })
                })
              }
            )
          );
        };
        return _this;
      }
      Twitter2.init = function(config) {
        if (Twitter2.instance !== void 0) {
          console.warn("Twitter Provider was already initialized");
          return Twitter2.instance;
        }
        Twitter2.instance = new Twitter2(config);
        return Twitter2.instance;
      };
      Twitter2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Twitter2.instance = void 0;
        return;
      };
      return Twitter2;
    }(Provider);
    var getFunctionOverrides = function(recipeId, onHandleEvent) {
      return function(originalImp) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, originalImp), {
          signInAndUp: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.signInAndUp(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "OK") {
                      onHandleEvent({
                        action: "SUCCESS",
                        isNewUser: response.createdNewUser,
                        user: response.user,
                        userContext: input.userContext
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          setStateAndOtherInfoToStorage: function(input) {
            return originalImp.setStateAndOtherInfoToStorage({
              state: genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, input.state),
                { rid: recipeId, redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL() }
              ),
              userContext: input.userContext
            });
          }
        });
      };
    };
    var Custom = function(_super) {
      genericComponentOverrideContext.__extends(Custom2, _super);
      function Custom2(config) {
        var _this = _super.call(this, config) || this;
        _this.getLogo = function() {
          return void 0;
        };
        return _this;
      }
      Custom2.init = function(config) {
        if (config === void 0 || config.id === void 0 || config.name === void 0) {
          throw new Error("Custom provider config should contain id and name attributes");
        }
        return new Custom2(config);
      };
      return Custom2;
    }(Provider);
    function normaliseThirdPartyConfig(config) {
      if (config === void 0) {
        config = {};
      }
      var signInAndUpFeature = normaliseSignInAndUpFeature(config.signInAndUpFeature);
      var oAuthCallbackScreen = config.oAuthCallbackScreen === void 0 ? {} : { style: config.oAuthCallbackScreen.style };
      var override = genericComponentOverrideContext.__assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, utils.normaliseAuthRecipe(config)),
        { signInAndUpFeature, oAuthCallbackScreen, override }
      );
    }
    function normaliseSignInAndUpFeature(config) {
      if (config === void 0) {
        config = {};
      }
      if (config.providers === void 0) {
        config.providers = [];
      }
      var disableDefaultUI = config.disableDefaultUI === true;
      var style = config.style !== void 0 ? config.style : "";
      var privacyPolicyLink = config.privacyPolicyLink;
      var termsOfServiceLink = config.termsOfServiceLink;
      var providersWithCustom = config.providers.map(function(provider) {
        if (provider instanceof Provider) {
          return provider;
        }
        return Custom.init(provider);
      });
      var providers = Array.from(
        new Set(
          providersWithCustom.map(function(provider) {
            return provider.id;
          })
        )
      ).map(function(id) {
        return providersWithCustom.find(function(provider) {
          return provider.id === id;
        });
      });
      return {
        disableDefaultUI,
        privacyPolicyLink,
        termsOfServiceLink,
        style,
        providers
      };
    }
    function matchRecipeIdUsingState(recipe, userContext) {
      var stateResponse = recipe.webJSRecipe.getStateAndOtherInfoFromStorage({
        userContext
      });
      if (stateResponse === void 0) {
        return false;
      }
      if (stateResponse.rid === recipe.config.recipeId) {
        return true;
      }
      return false;
    }
    function redirectToThirdPartyLogin(input) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        var loginMethods, tenantProviders, providers, provider, response;
        return genericComponentOverrideContext.__generator(this, function(_a2) {
          switch (_a2.label) {
            case 0:
              return [
                4,
                genericComponentOverrideContext.Multitenancy.getInstanceOrThrow().getCurrentDynamicLoginMethods(
                  {
                    userContext: input.userContext
                  }
                )
              ];
            case 1:
              loginMethods = _a2.sent();
              tenantProviders = (loginMethods === null || loginMethods === void 0 ? void 0 : loginMethods.thirdparty.enabled) ? loginMethods.thirdparty.providers : [];
              providers = mergeProviders({
                tenantProviders,
                clientProviders: input.config.signInAndUpFeature.providers
              });
              provider = providers.find(function(p) {
                return p.id === input.thirdPartyId;
              });
              if (provider === void 0) {
                return [2, { status: "ERROR" }];
              }
              return [
                4,
                input.recipeImplementation.getAuthorisationURLWithQueryParamsAndSetState({
                  thirdPartyId: input.thirdPartyId,
                  frontendRedirectURI: provider.getRedirectURL(),
                  redirectURIOnProviderDashboard: provider.getRedirectURIOnProviderDashboard(),
                  userContext: input.userContext
                })
              ];
            case 2:
              response = _a2.sent();
              genericComponentOverrideContext.redirectWithFullPageReload(response);
              return [2, { status: "OK" }];
          }
        });
      });
    }
    var mergeProviders = function(_a2) {
      var _b = _a2.tenantProviders, tenantProviders = _b === void 0 ? [] : _b, _c = _a2.clientProviders, clientProviders = _c === void 0 ? [] : _c;
      var builtInProvidersMap = {
        apple: Apple,
        google: Google,
        "google-workspaces": GoogleWorkspaces,
        github: Github,
        "active-directory": ActiveDirectory,
        bitbucket: Bitbucket,
        "boxy-saml": BoxySAML,
        discord: Discord,
        gitlab: Gitlab,
        linkedin: LinkedIn,
        okta: Okta,
        twitter: Twitter,
        facebook: Facebook
      };
      var usesDynamicLoginMethods = genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods === true;
      if (usesDynamicLoginMethods === false && (clientProviders === null || clientProviders === void 0 ? void 0 : clientProviders.length) === 0) {
        throw new Error("ThirdParty signInAndUpFeature providers array cannot be empty.");
      }
      if (usesDynamicLoginMethods === false || tenantProviders.length === 0) {
        return clientProviders;
      }
      var providers = [];
      var _loop_1 = function(tenantProvider2) {
        var provider = clientProviders.find(function(provider2) {
          var id = tenantProvider2.id;
          return provider2.id === id;
        });
        if (provider === void 0) {
          provider = clientProviders.find(function(provider2) {
            var id = tenantProvider2.id;
            return id.startsWith(provider2.id);
          });
        }
        if (provider !== void 0) {
          providers.push(
            Custom.init(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, provider.config),
                {
                  id: tenantProvider2.id,
                  name: tenantProvider2.name,
                  buttonComponent: provider.getButton(tenantProvider2.name)
                }
              )
            )
          );
        } else {
          var providerID = Object.keys(builtInProvidersMap).find(function(id) {
            return tenantProvider2.id === id || tenantProvider2.id.startsWith(id);
          });
          if (builtInProvidersMap[providerID]) {
            var provider_1 = new builtInProvidersMap[providerID]({
              id: tenantProvider2.id,
              name: tenantProvider2.name
            });
            providers.push(provider_1);
          } else {
            providers.push(Custom.init(tenantProvider2));
          }
        }
      };
      for (var _i = 0, tenantProviders_1 = tenantProviders; _i < tenantProviders_1.length; _i++) {
        var tenantProvider = tenantProviders_1[_i];
        _loop_1(tenantProvider);
      }
      return providers;
    };
    var ThirdParty = function(_super) {
      genericComponentOverrideContext.__extends(ThirdParty2, _super);
      function ThirdParty2(config, webJSRecipe) {
        if (webJSRecipe === void 0) {
          webJSRecipe = ThirdpartyWebJS__default.default;
        }
        var _this = this;
        if (genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods === false && config.signInAndUpFeature.providers.length === 0) {
          throw new Error("ThirdParty signInAndUpFeature providers array cannot be empty.");
        }
        _this = _super.call(this, config) || this;
        _this.webJSRecipe = webJSRecipe;
        _this.recipeID = ThirdParty2.RECIPE_ID;
        _this.getDefaultRedirectionURL = function(context) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              return [2, this.getAuthRecipeDefaultRedirectionURL(context)];
            });
          });
        };
        return _this;
      }
      ThirdParty2.init = function(config) {
        var normalisedConfig = normaliseThirdPartyConfig(config);
        return {
          recipeID: ThirdParty2.RECIPE_ID,
          authReact: function(appInfo) {
            ThirdParty2.instance = new ThirdParty2(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, normalisedConfig),
                { appInfo, recipeId: ThirdParty2.RECIPE_ID }
              )
            );
            return ThirdParty2.instance;
          },
          webJS: ThirdpartyWebJS__default.default.init(
            genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, normalisedConfig),
              {
                override: {
                  functions: function(originalImpl, builder) {
                    var functions = getFunctionOverrides(
                      ThirdParty2.RECIPE_ID,
                      normalisedConfig.onHandleEvent
                    );
                    builder.override(functions);
                    builder.override(normalisedConfig.override.functions);
                    return originalImpl;
                  }
                }
              }
            )
          )
        };
      };
      ThirdParty2.getInstanceOrThrow = function() {
        if (ThirdParty2.instance === void 0) {
          var error = "No instance of ThirdParty found. Make sure to call the ThirdParty.init method.See https://supertokens.io/docs/thirdparty/quick-setup/frontend";
          if (typeof window === "undefined") {
            error = error + genericComponentOverrideContext.SSR_ERROR;
          }
          throw Error(error);
        }
        return ThirdParty2.instance;
      };
      ThirdParty2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        ThirdParty2.instance = void 0;
        return;
      };
      ThirdParty2.RECIPE_ID = "thirdparty";
      return ThirdParty2;
    }(utils.AuthRecipe);
    exports.ActiveDirectory = ActiveDirectory;
    exports.Apple = Apple;
    exports.Bitbucket = Bitbucket;
    exports.BoxySAML = BoxySAML;
    exports.Discord = Discord;
    exports.Facebook = Facebook;
    exports.Github = Github;
    exports.Gitlab = Gitlab;
    exports.Google = Google;
    exports.GoogleWorkspaces = GoogleWorkspaces;
    exports.LinkedIn = LinkedIn;
    exports.Okta = Okta;
    exports.Provider = Provider$1;
    exports.ThirdParty = ThirdParty;
    exports.Twitter = Twitter;
    exports.matchRecipeIdUsingState = matchRecipeIdUsingState;
    exports.mergeProviders = mergeProviders;
    exports.normaliseThirdPartyConfig = normaliseThirdPartyConfig;
    exports.redirectToThirdPartyLogin = redirectToThirdPartyLogin;
    exports.useContext = useContext;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/passwordless/utils.js
var require_utils4 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/passwordless/utils.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.consumeCode = exports.resendCode = exports.createCode = exports.normaliseUserInput = void 0;
    var utils_1 = require_utils();
    var utils_2 = require_utils2();
    var recipe_1 = require_recipe();
    function normaliseUserInput(config) {
      var override = __assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return __assign(__assign({}, (0, utils_2.normaliseAuthRecipe)(config)), { override });
    }
    exports.normaliseUserInput = normaliseUserInput;
    function createCode(input) {
      return __awaiter(this, void 0, void 0, function() {
        var normalisedUserContext, tenantId, createCodeResponse;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              normalisedUserContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
              return [
                4,
                recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({
                  userContext: input.userContext
                })
              ];
            case 1:
              tenantId = _a.sent();
              return [
                4,
                input.recipeImplementation.createCode(
                  __assign(__assign({}, input), { userContext: normalisedUserContext })
                )
              ];
            case 2:
              createCodeResponse = _a.sent();
              return [
                4,
                input.recipeImplementation.setLoginAttemptInfo({
                  attemptInfo: {
                    tenantId,
                    deviceId: createCodeResponse.deviceId,
                    preAuthSessionId: createCodeResponse.preAuthSessionId,
                    flowType: createCodeResponse.flowType
                  },
                  userContext: normalisedUserContext
                })
              ];
            case 3:
              _a.sent();
              return [2, createCodeResponse];
          }
        });
      });
    }
    exports.createCode = createCode;
    function resendCode(input) {
      return __awaiter(this, void 0, void 0, function() {
        var normalisedUserContext, previousAttemptInfo;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              normalisedUserContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
              return [
                4,
                input.recipeImplementation.getLoginAttemptInfo({
                  userContext: normalisedUserContext
                })
              ];
            case 1:
              previousAttemptInfo = _a.sent();
              return [
                2,
                input.recipeImplementation.resendCode(
                  __assign(__assign({}, input), {
                    tenantId: previousAttemptInfo === null || previousAttemptInfo === void 0 ? void 0 : previousAttemptInfo.tenantId,
                    userContext: normalisedUserContext,
                    deviceId: previousAttemptInfo === void 0 ? "" : previousAttemptInfo.deviceId,
                    preAuthSessionId: previousAttemptInfo === void 0 ? "" : previousAttemptInfo.preAuthSessionId
                  })
                )
              ];
          }
        });
      });
    }
    exports.resendCode = resendCode;
    function consumeCode(input) {
      return __awaiter(this, void 0, void 0, function() {
        var normalisedUserContext, additionalParams, attemptInfoFromStorage, linkCode, tenantId, preAuthSessionId;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              normalisedUserContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
              if (!("userInputCode" in input))
                return [3, 2];
              return [
                4,
                input.recipeImplementation.getLoginAttemptInfo({
                  userContext: normalisedUserContext
                })
              ];
            case 1:
              attemptInfoFromStorage = _a.sent();
              additionalParams = {
                userInputCode: input.userInputCode,
                deviceId: attemptInfoFromStorage === void 0 ? "" : attemptInfoFromStorage.deviceId,
                preAuthSessionId: attemptInfoFromStorage === void 0 ? "" : attemptInfoFromStorage.preAuthSessionId,
                tenantId: attemptInfoFromStorage === null || attemptInfoFromStorage === void 0 ? void 0 : attemptInfoFromStorage.tenantId
              };
              return [3, 3];
            case 2:
              linkCode = input.recipeImplementation.getLinkCodeFromURL({
                userContext: input.userContext
              });
              tenantId = input.recipeImplementation.getTenantIdFromURL({
                userContext: input.userContext
              });
              preAuthSessionId = input.recipeImplementation.getPreAuthSessionIdFromURL({
                userContext: input.userContext
              });
              additionalParams = {
                tenantId,
                linkCode,
                preAuthSessionId
              };
              _a.label = 3;
            case 3:
              return [
                2,
                input.recipeImplementation.consumeCode(
                  __assign({ userContext: normalisedUserContext, options: input.options }, additionalParams)
                )
              ];
          }
        });
      });
    }
    exports.consumeCode = consumeCode;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/passwordless/constants.js
var require_constants = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/passwordless/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PASSWORDLESS_LOGIN_ATTEMPT_INFO_STORAGE_KEY = void 0;
    exports.PASSWORDLESS_LOGIN_ATTEMPT_INFO_STORAGE_KEY = "supertokens-passwordless-loginAttemptInfo";
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/passwordless/recipeImplementation.js
var require_recipeImplementation2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/passwordless/recipeImplementation.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRecipeImplementation = void 0;
    var windowHandler_1 = require_windowHandler();
    var querier_1 = require_querier();
    var utils_1 = require_utils();
    var recipe_1 = require_recipe();
    var constants_1 = require_constants();
    function getRecipeImplementation(recipeImplInput) {
      var querier = new querier_1.default(recipeImplInput.recipeId, recipeImplInput.appInfo);
      return {
        createCode: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var bodyObj, _a, jsonBody, fetchResponse, _b, _c;
            return __generator(this, function(_d) {
              switch (_d.label) {
                case 0:
                  if ("email" in input) {
                    bodyObj = {
                      email: input.email
                    };
                  }
                  if ("phoneNumber" in input) {
                    bodyObj = {
                      phoneNumber: input.phoneNumber
                    };
                  }
                  _c = (_b = querier).post;
                  return [
                    4,
                    recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({
                      userContext: input.userContext
                    })
                  ];
                case 1:
                  return [
                    4,
                    _c.apply(_b, [
                      _d.sent(),
                      "/signinup/code",
                      { body: JSON.stringify(bodyObj) },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "PASSWORDLESS_CREATE_CODE",
                        userContext: input.userContext,
                        options: input.options
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "PASSWORDLESS_CREATE_CODE",
                        userContext: input.userContext
                      })
                    ])
                  ];
                case 2:
                  _a = _d.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  return [2, __assign(__assign({}, jsonBody), { fetchResponse })];
              }
            });
          });
        },
        resendCode: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var bodyObj, _a, jsonBody, fetchResponse;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  bodyObj = {
                    deviceId: input.deviceId,
                    preAuthSessionId: input.preAuthSessionId
                  };
                  return [
                    4,
                    querier.post(
                      input.tenantId,
                      "/signinup/code/resend",
                      { body: JSON.stringify(bodyObj) },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "PASSWORDLESS_RESEND_CODE",
                        userContext: input.userContext,
                        options: input.options
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "PASSWORDLESS_RESEND_CODE",
                        userContext: input.userContext
                      })
                    )
                  ];
                case 1:
                  _a = _b.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  return [
                    2,
                    {
                      status: jsonBody.status,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        consumeCode: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var bodyObj, _a, jsonBody, fetchResponse;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  if ("userInputCode" in input) {
                    bodyObj = {
                      userInputCode: input.userInputCode,
                      deviceId: input.deviceId,
                      preAuthSessionId: input.preAuthSessionId
                    };
                  } else {
                    bodyObj = {
                      linkCode: input.linkCode,
                      preAuthSessionId: input.preAuthSessionId
                    };
                  }
                  return [
                    4,
                    querier.post(
                      input.tenantId,
                      "/signinup/code/consume",
                      { body: JSON.stringify(bodyObj) },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "PASSWORDLESS_CONSUME_CODE",
                        userContext: input.userContext,
                        options: input.options
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "PASSWORDLESS_CONSUME_CODE",
                        userContext: input.userContext
                      })
                    )
                  ];
                case 1:
                  _a = _b.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  return [2, __assign(__assign({}, jsonBody), { fetchResponse })];
              }
            });
          });
        },
        getTenantIdFromURL: function() {
          return (0, utils_1.getQueryParams)("tenantId");
        },
        getLinkCodeFromURL: function() {
          return (0, utils_1.getHashFromLocation)();
        },
        getPreAuthSessionIdFromURL: function() {
          var idFromQuery = (0, utils_1.getQueryParams)("preAuthSessionId");
          if (idFromQuery === void 0) {
            return "";
          }
          return idFromQuery;
        },
        doesEmailExist: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var _a, jsonBody, fetchResponse, _b, _c;
            return __generator(this, function(_d) {
              switch (_d.label) {
                case 0:
                  _c = (_b = querier).get;
                  return [
                    4,
                    recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({
                      userContext: input.userContext
                    })
                  ];
                case 1:
                  return [
                    4,
                    _c.apply(_b, [
                      _d.sent(),
                      "/signup/email/exists",
                      {},
                      { email: input.email },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "EMAIL_EXISTS",
                        userContext: input.userContext,
                        options: input.options
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "EMAIL_EXISTS",
                        userContext: input.userContext
                      })
                    ])
                  ];
                case 2:
                  _a = _d.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  return [
                    2,
                    {
                      status: jsonBody.status,
                      doesExist: jsonBody.exists,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        doesPhoneNumberExist: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var _a, jsonBody, fetchResponse, _b, _c;
            return __generator(this, function(_d) {
              switch (_d.label) {
                case 0:
                  _c = (_b = querier).get;
                  return [
                    4,
                    recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({
                      userContext: input.userContext
                    })
                  ];
                case 1:
                  return [
                    4,
                    _c.apply(_b, [
                      _d.sent(),
                      "/signup/phoneNumber/exists",
                      {},
                      { phoneNumber: input.phoneNumber },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "PHONE_NUMBER_EXISTS",
                        userContext: input.userContext,
                        options: input.options
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "PHONE_NUMBER_EXISTS",
                        userContext: input.userContext
                      })
                    ])
                  ];
                case 2:
                  _a = _d.sent(), jsonBody = _a.jsonBody, fetchResponse = _a.fetchResponse;
                  return [
                    2,
                    {
                      status: jsonBody.status,
                      doesExist: jsonBody.exists,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        getLoginAttemptInfo: function() {
          return __awaiter(this, void 0, void 0, function() {
            var storedInfo;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.getItem(
                      constants_1.PASSWORDLESS_LOGIN_ATTEMPT_INFO_STORAGE_KEY
                    )
                  ];
                case 1:
                  storedInfo = _a.sent();
                  if (storedInfo === null) {
                    return [2, void 0];
                  }
                  try {
                    return [2, JSON.parse(storedInfo)];
                  } catch (ex) {
                    return [2, void 0];
                  }
                  return [2];
              }
            });
          });
        },
        setLoginAttemptInfo: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.setItem(
                      constants_1.PASSWORDLESS_LOGIN_ATTEMPT_INFO_STORAGE_KEY,
                      JSON.stringify(
                        __assign(
                          {
                            version: 1
                          },
                          input.attemptInfo
                        )
                      )
                    )
                  ];
                case 1:
                  _a.sent();
                  return [2];
              }
            });
          });
        },
        clearLoginAttemptInfo: function() {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.removeItem(
                constants_1.PASSWORDLESS_LOGIN_ATTEMPT_INFO_STORAGE_KEY
              );
              return [2];
            });
          });
        }
      };
    }
    exports.default = getRecipeImplementation;
    exports.getRecipeImplementation = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/passwordless/recipe.js
var require_recipe3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/passwordless/recipe.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Recipe = void 0;
    var supertokens_js_override_1 = require_build();
    var utils_1 = require_utils();
    var authRecipe_1 = require_authRecipe();
    var utils_2 = require_utils4();
    var recipeImplementation_1 = require_recipeImplementation2();
    var Recipe = function(_super) {
      __extends(Recipe2, _super);
      function Recipe2(config) {
        var _this = _super.call(this, (0, utils_2.normaliseUserInput)(config)) || this;
        var builder = new supertokens_js_override_1.default(
          (0, recipeImplementation_1.default)({
            recipeId: _this.config.recipeId,
            appInfo: _this.config.appInfo,
            clientType: _this.config.clientType,
            preAPIHook: _this.config.preAPIHook,
            postAPIHook: _this.config.postAPIHook
          })
        );
        _this.recipeImplementation = builder.override(_this.config.override.functions).build();
        return _this;
      }
      Recipe2.init = function(config) {
        return function(appInfo, clientType) {
          Recipe2.instance = new Recipe2(
            __assign(__assign({}, config), { recipeId: Recipe2.RECIPE_ID, appInfo, clientType })
          );
          return Recipe2.instance;
        };
      };
      Recipe2.getInstanceOrThrow = function() {
        if (Recipe2.instance === void 0) {
          var error = "No instance of Passwordless found. Make sure to call the Passwordless.init method.";
          error = (0, utils_1.checkForSSRErrorAndAppendIfNeeded)(error);
          throw Error(error);
        }
        return Recipe2.instance;
      };
      Recipe2.reset = function() {
        if (!(0, utils_1.isTest)()) {
          return;
        }
        Recipe2.instance = void 0;
        return;
      };
      Recipe2.RECIPE_ID = "passwordless";
      return Recipe2;
    }(authRecipe_1.default);
    exports.Recipe = Recipe;
    exports.default = Recipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/utils.js
var require_utils5 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/utils.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseUserInput = void 0;
    var utils_1 = require_utils2();
    function normaliseUserInput(config) {
      var override = __assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return __assign(__assign({}, (0, utils_1.normaliseAuthRecipe)(config)), { override });
    }
    exports.normaliseUserInput = normaliseUserInput;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipeImplementation/thirdparty.js
var require_thirdparty3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipeImplementation/thirdparty.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function getRecipeImplementation(originalImplementation) {
      return {
        getAuthorisationURLFromBackend: originalImplementation.getAuthorisationURLFromBackend.bind(originalImplementation),
        getStateAndOtherInfoFromStorage: originalImplementation.getThirdPartyStateAndOtherInfoFromStorage.bind(originalImplementation),
        getAuthorisationURLWithQueryParamsAndSetState: originalImplementation.getThirdPartyAuthorisationURLWithQueryParamsAndSetState.bind(originalImplementation),
        setStateAndOtherInfoToStorage: originalImplementation.setThirdPartyStateAndOtherInfoToStorage.bind(originalImplementation),
        generateStateToSendToOAuthProvider: originalImplementation.generateThirdPartyStateToSendToOAuthProvider.bind(originalImplementation),
        getAuthErrorFromURL: originalImplementation.getThirdPartyAuthErrorFromURL.bind(originalImplementation),
        getAuthStateFromURL: originalImplementation.getThirdPartyAuthStateFromURL.bind(originalImplementation),
        verifyAndGetStateOrThrowError: originalImplementation.verifyAndGetThirdPartyStateOrThrowError.bind(originalImplementation),
        signInAndUp: originalImplementation.thirdPartySignInAndUp.bind(originalImplementation)
      };
    }
    exports.default = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipeImplementation/passwordless.js
var require_passwordless = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipeImplementation/passwordless.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function getRecipeImplementation(originalImplementation) {
      return {
        clearLoginAttemptInfo: originalImplementation.clearPasswordlessLoginAttemptInfo.bind(originalImplementation),
        consumeCode: originalImplementation.consumePasswordlessCode.bind(originalImplementation),
        createCode: originalImplementation.createPasswordlessCode.bind(originalImplementation),
        doesEmailExist: originalImplementation.doesPasswordlessUserEmailExist.bind(originalImplementation),
        doesPhoneNumberExist: originalImplementation.doesPasswordlessUserPhoneNumberExist.bind(originalImplementation),
        getLoginAttemptInfo: originalImplementation.getPasswordlessLoginAttemptInfo.bind(originalImplementation),
        resendCode: originalImplementation.resendPasswordlessCode.bind(originalImplementation),
        setLoginAttemptInfo: originalImplementation.setPasswordlessLoginAttemptInfo.bind(originalImplementation),
        getLinkCodeFromURL: originalImplementation.getPasswordlessLinkCodeFromURL.bind(originalImplementation),
        getPreAuthSessionIdFromURL: originalImplementation.getPasswordlessPreAuthSessionIdFromURL.bind(originalImplementation),
        getTenantIdFromURL: originalImplementation.getTenantIdFromURL.bind(originalImplementation)
      };
    }
    exports.default = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipeImplementation/index.js
var require_recipeImplementation3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipeImplementation/index.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRecipeImplementation = void 0;
    var recipeImplementation_1 = require_recipeImplementation();
    var recipeImplementation_2 = require_recipeImplementation2();
    var thirdparty_1 = require_thirdparty3();
    var passwordless_1 = require_passwordless();
    function getRecipeImplementation(recipeImplInput) {
      var thirdPartyImpl = (0, recipeImplementation_1.default)(recipeImplInput);
      var passwordlessImpl = (0, recipeImplementation_2.default)(recipeImplInput);
      return {
        getAuthorisationURLFromBackend: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2,
                thirdPartyImpl.getAuthorisationURLFromBackend.bind((0, thirdparty_1.default)(this))(input)
              ];
            });
          });
        },
        thirdPartySignInAndUp: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, thirdPartyImpl.signInAndUp.bind((0, thirdparty_1.default)(this))(input)];
            });
          });
        },
        getThirdPartyStateAndOtherInfoFromStorage: function(input) {
          return thirdPartyImpl.getStateAndOtherInfoFromStorage.bind((0, thirdparty_1.default)(this))(input);
        },
        setThirdPartyStateAndOtherInfoToStorage: function(input) {
          return thirdPartyImpl.setStateAndOtherInfoToStorage.bind((0, thirdparty_1.default)(this))(input);
        },
        getThirdPartyAuthorisationURLWithQueryParamsAndSetState: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2,
                thirdPartyImpl.getAuthorisationURLWithQueryParamsAndSetState.bind(
                  (0, thirdparty_1.default)(this)
                )(input)
              ];
            });
          });
        },
        generateThirdPartyStateToSendToOAuthProvider: function(input) {
          return thirdPartyImpl.generateStateToSendToOAuthProvider.bind((0, thirdparty_1.default)(this))(input);
        },
        verifyAndGetThirdPartyStateOrThrowError: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2,
                thirdPartyImpl.verifyAndGetStateOrThrowError.bind((0, thirdparty_1.default)(this))(input)
              ];
            });
          });
        },
        getThirdPartyAuthErrorFromURL: function(input) {
          return thirdPartyImpl.getAuthErrorFromURL.bind((0, thirdparty_1.default)(this))(input);
        },
        getThirdPartyAuthStateFromURL: function(input) {
          return thirdPartyImpl.getAuthStateFromURL.bind((0, thirdparty_1.default)(this))(input);
        },
        createPasswordlessCode: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, passwordlessImpl.createCode.bind((0, passwordless_1.default)(this))(input)];
            });
          });
        },
        resendPasswordlessCode: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, passwordlessImpl.resendCode.bind((0, passwordless_1.default)(this))(input)];
            });
          });
        },
        consumePasswordlessCode: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, passwordlessImpl.consumeCode.bind((0, passwordless_1.default)(this))(input)];
            });
          });
        },
        getPasswordlessLinkCodeFromURL: function(input) {
          return passwordlessImpl.getLinkCodeFromURL.bind((0, passwordless_1.default)(this))(input);
        },
        getPasswordlessPreAuthSessionIdFromURL: function(input) {
          return passwordlessImpl.getPreAuthSessionIdFromURL.bind((0, passwordless_1.default)(this))(input);
        },
        getTenantIdFromURL: function(input) {
          return passwordlessImpl.getTenantIdFromURL.bind((0, passwordless_1.default)(this))(input);
        },
        doesPasswordlessUserEmailExist: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2,
                passwordlessImpl.doesEmailExist.bind((0, passwordless_1.default)(this))(input)
              ];
            });
          });
        },
        doesPasswordlessUserPhoneNumberExist: function(input) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2,
                passwordlessImpl.doesPhoneNumberExist.bind((0, passwordless_1.default)(this))(input)
              ];
            });
          });
        },
        getPasswordlessLoginAttemptInfo: function(input) {
          return passwordlessImpl.getLoginAttemptInfo.bind((0, passwordless_1.default)(this))(input);
        },
        setPasswordlessLoginAttemptInfo: function(input) {
          return passwordlessImpl.setLoginAttemptInfo.bind((0, passwordless_1.default)(this))(input);
        },
        clearPasswordlessLoginAttemptInfo: function(input) {
          return passwordlessImpl.clearLoginAttemptInfo.bind((0, passwordless_1.default)(this))(input);
        }
      };
    }
    exports.default = getRecipeImplementation;
    exports.getRecipeImplementation = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipe.js
var require_recipe4 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/recipe.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Recipe = void 0;
    var recipe_1 = require_recipe2();
    var recipe_2 = require_recipe3();
    var utils_1 = require_utils5();
    var supertokens_js_override_1 = require_build();
    var recipeImplementation_1 = require_recipeImplementation3();
    var utils_2 = require_utils();
    var thirdparty_1 = require_thirdparty3();
    var passwordless_1 = require_passwordless();
    var authRecipe_1 = require_authRecipe();
    var Recipe = function(_super) {
      __extends(Recipe2, _super);
      function Recipe2(config, recipes) {
        var _this = _super.call(this, (0, utils_1.normaliseUserInput)(config)) || this;
        var builder = new supertokens_js_override_1.default(
          (0, recipeImplementation_1.default)({
            recipeId: _this.config.recipeId,
            appInfo: _this.config.appInfo,
            clientType: _this.config.clientType,
            preAPIHook: _this.config.preAPIHook,
            postAPIHook: _this.config.postAPIHook
          })
        );
        var _recipeImplementation = builder.override(_this.config.override.functions).build();
        _this.recipeImplementation = _recipeImplementation;
        _this.thirdPartyRecipe = recipes.thirdParty === void 0 ? new recipe_1.default({
          recipeId: _this.config.recipeId,
          appInfo: _this.config.appInfo,
          clientType: _this.config.clientType,
          preAPIHook: config.preAPIHook,
          postAPIHook: config.postAPIHook,
          override: {
            functions: function() {
              return (0, thirdparty_1.default)(_recipeImplementation);
            }
          }
        }) : recipes.thirdParty;
        _this.passwordlessRecipe = recipes.passwordless === void 0 ? new recipe_2.default({
          recipeId: _this.config.recipeId,
          appInfo: _this.config.appInfo,
          clientType: _this.config.clientType,
          preAPIHook: config.preAPIHook,
          postAPIHook: config.postAPIHook,
          override: {
            functions: function() {
              return (0, passwordless_1.default)(_recipeImplementation);
            }
          }
        }) : recipes.passwordless;
        return _this;
      }
      Recipe2.getInstanceOrThrow = function() {
        if (Recipe2.instance === void 0) {
          var error = "No instance of ThirdPartyPasswordless found. Make sure to call the ThirdPartyPasswordless.init method.";
          error = (0, utils_2.checkForSSRErrorAndAppendIfNeeded)(error);
          throw Error(error);
        }
        return Recipe2.instance;
      };
      Recipe2.init = function(config) {
        return function(appInfo, clientType) {
          Recipe2.instance = new Recipe2(
            __assign(__assign({}, config), {
              recipeId: Recipe2.RECIPE_ID,
              appInfo,
              clientType
            }),
            {
              thirdParty: void 0,
              passwordless: void 0
            }
          );
          return Recipe2.instance;
        };
      };
      Recipe2.reset = function() {
        if (!(0, utils_2.isTest)()) {
          return;
        }
        Recipe2.instance = void 0;
        return;
      };
      Recipe2.RECIPE_ID = "thirdpartypasswordless";
      return Recipe2;
    }(authRecipe_1.default);
    exports.Recipe = Recipe;
    exports.default = Recipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/index.js
var require_thirdpartypasswordless = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/thirdpartypasswordless/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.clearPasswordlessLoginAttemptInfo = exports.setPasswordlessLoginAttemptInfo = exports.getPasswordlessLoginAttemptInfo = exports.getPasswordlessPreAuthSessionIdFromURL = exports.getPasswordlessLinkCodeFromURL = exports.getTenantIdFromURL = exports.signOut = exports.doesPasswordlessUserPhoneNumberExist = exports.doesPasswordlessUserEmailExist = exports.consumePasswordlessCode = exports.resendPasswordlessCode = exports.createPasswordlessCode = exports.thirdPartySignInAndUp = exports.getThirdPartyStateAndOtherInfoFromStorage = exports.getThirdPartyAuthorisationURLWithQueryParamsAndSetState = exports.init = void 0;
    var recipe_1 = require_recipe4();
    var utils_1 = require_utils();
    var recipe_2 = require_recipe();
    var PasswordlessUtilsFunctions = require_utils4();
    var RecipeWrapper = function() {
      function RecipeWrapper2() {
      }
      RecipeWrapper2.init = function(config) {
        return recipe_1.default.init(config);
      };
      RecipeWrapper2.signOut = function(input) {
        return recipe_1.default.getInstanceOrThrow().signOut({
          userContext: (0, utils_1.getNormalisedUserContext)(
            input === null || input === void 0 ? void 0 : input.userContext
          )
        });
      };
      RecipeWrapper2.thirdPartySignInAndUp = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.thirdPartySignInAndUp(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.getThirdPartyAuthorisationURLWithQueryParamsAndSetState = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var userContext, tenantId;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                userContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
                return [
                  4,
                  recipe_2.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                ];
              case 1:
                tenantId = _a.sent();
                return [
                  2,
                  recipe_1.default.getInstanceOrThrow().recipeImplementation.getThirdPartyAuthorisationURLWithQueryParamsAndSetState(
                    __assign(__assign({ tenantId }, input), { userContext })
                  )
                ];
            }
          });
        });
      };
      RecipeWrapper2.getThirdPartyStateAndOtherInfoFromStorage = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.getThirdPartyStateAndOtherInfoFromStorage(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.createPasswordlessCode = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var recipe;
          return __generator(this, function(_a) {
            recipe = recipe_1.default.getInstanceOrThrow();
            return [
              2,
              PasswordlessUtilsFunctions.createCode(
                __assign(__assign({}, input), {
                  recipeImplementation: recipe.passwordlessRecipe.recipeImplementation
                })
              )
            ];
          });
        });
      };
      RecipeWrapper2.resendPasswordlessCode = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var recipe;
          return __generator(this, function(_a) {
            recipe = recipe_1.default.getInstanceOrThrow();
            return [
              2,
              PasswordlessUtilsFunctions.resendCode(
                __assign(__assign({}, input), {
                  recipeImplementation: recipe.passwordlessRecipe.recipeImplementation
                })
              )
            ];
          });
        });
      };
      RecipeWrapper2.consumePasswordlessCode = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var recipe;
          return __generator(this, function(_a) {
            recipe = recipe_1.default.getInstanceOrThrow();
            return [
              2,
              PasswordlessUtilsFunctions.consumeCode(
                __assign(__assign({}, input), {
                  recipeImplementation: recipe.passwordlessRecipe.recipeImplementation
                })
              )
            ];
          });
        });
      };
      RecipeWrapper2.getPasswordlessLinkCodeFromURL = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.getPasswordlessLinkCodeFromURL(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.getPasswordlessPreAuthSessionIdFromURL = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.getPasswordlessPreAuthSessionIdFromURL(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.getTenantIdFromURL = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantIdFromURL(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.doesPasswordlessUserEmailExist = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.doesPasswordlessUserEmailExist(
          __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
        );
      };
      RecipeWrapper2.doesPasswordlessUserPhoneNumberExist = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.doesPasswordlessUserPhoneNumberExist(
          __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
        );
      };
      RecipeWrapper2.getPasswordlessLoginAttemptInfo = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.getPasswordlessLoginAttemptInfo(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.setPasswordlessLoginAttemptInfo = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var userContext, tenantId;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                userContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
                return [
                  4,
                  recipe_2.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                ];
              case 1:
                tenantId = _a.sent();
                return [
                  2,
                  recipe_1.default.getInstanceOrThrow().recipeImplementation.setPasswordlessLoginAttemptInfo({
                    attemptInfo: __assign({ tenantId }, input.attemptInfo),
                    userContext
                  })
                ];
            }
          });
        });
      };
      RecipeWrapper2.clearPasswordlessLoginAttemptInfo = function(input) {
        return recipe_1.default.getInstanceOrThrow().recipeImplementation.clearPasswordlessLoginAttemptInfo(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      return RecipeWrapper2;
    }();
    exports.default = RecipeWrapper;
    var init = RecipeWrapper.init;
    exports.init = init;
    var getThirdPartyAuthorisationURLWithQueryParamsAndSetState = RecipeWrapper.getThirdPartyAuthorisationURLWithQueryParamsAndSetState;
    exports.getThirdPartyAuthorisationURLWithQueryParamsAndSetState = getThirdPartyAuthorisationURLWithQueryParamsAndSetState;
    var getThirdPartyStateAndOtherInfoFromStorage = RecipeWrapper.getThirdPartyStateAndOtherInfoFromStorage;
    exports.getThirdPartyStateAndOtherInfoFromStorage = getThirdPartyStateAndOtherInfoFromStorage;
    var thirdPartySignInAndUp = RecipeWrapper.thirdPartySignInAndUp;
    exports.thirdPartySignInAndUp = thirdPartySignInAndUp;
    var createPasswordlessCode = RecipeWrapper.createPasswordlessCode;
    exports.createPasswordlessCode = createPasswordlessCode;
    var resendPasswordlessCode = RecipeWrapper.resendPasswordlessCode;
    exports.resendPasswordlessCode = resendPasswordlessCode;
    var consumePasswordlessCode = RecipeWrapper.consumePasswordlessCode;
    exports.consumePasswordlessCode = consumePasswordlessCode;
    var doesPasswordlessUserEmailExist = RecipeWrapper.doesPasswordlessUserEmailExist;
    exports.doesPasswordlessUserEmailExist = doesPasswordlessUserEmailExist;
    var doesPasswordlessUserPhoneNumberExist = RecipeWrapper.doesPasswordlessUserPhoneNumberExist;
    exports.doesPasswordlessUserPhoneNumberExist = doesPasswordlessUserPhoneNumberExist;
    var getTenantIdFromURL = RecipeWrapper.getTenantIdFromURL;
    exports.getTenantIdFromURL = getTenantIdFromURL;
    var getPasswordlessLinkCodeFromURL = RecipeWrapper.getPasswordlessLinkCodeFromURL;
    exports.getPasswordlessLinkCodeFromURL = getPasswordlessLinkCodeFromURL;
    var getPasswordlessPreAuthSessionIdFromURL = RecipeWrapper.getPasswordlessPreAuthSessionIdFromURL;
    exports.getPasswordlessPreAuthSessionIdFromURL = getPasswordlessPreAuthSessionIdFromURL;
    var getPasswordlessLoginAttemptInfo = RecipeWrapper.getPasswordlessLoginAttemptInfo;
    exports.getPasswordlessLoginAttemptInfo = getPasswordlessLoginAttemptInfo;
    var setPasswordlessLoginAttemptInfo = RecipeWrapper.setPasswordlessLoginAttemptInfo;
    exports.setPasswordlessLoginAttemptInfo = setPasswordlessLoginAttemptInfo;
    var clearPasswordlessLoginAttemptInfo = RecipeWrapper.clearPasswordlessLoginAttemptInfo;
    exports.clearPasswordlessLoginAttemptInfo = clearPasswordlessLoginAttemptInfo;
    var signOut = RecipeWrapper.signOut;
    exports.signOut = signOut;
  }
});

// node_modules/supertokens-web-js/recipe/thirdpartypasswordless/index.js
var require_thirdpartypasswordless2 = __commonJS({
  "node_modules/supertokens-web-js/recipe/thirdpartypasswordless/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_thirdpartypasswordless());
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/passwordless/index.js
var require_passwordless2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/passwordless/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.clearLoginAttemptInfo = exports.setLoginAttemptInfo = exports.getLoginAttemptInfo = exports.getTenantIdFromURL = exports.getPreAuthSessionIdFromURL = exports.getLinkCodeFromURL = exports.signOut = exports.doesPhoneNumberExist = exports.doesEmailExist = exports.consumeCode = exports.resendCode = exports.createCode = exports.init = void 0;
    var utils_1 = require_utils();
    var recipe_1 = require_recipe();
    var recipe_2 = require_recipe3();
    var UtilFunctions = require_utils4();
    var RecipeWrapper = function() {
      function RecipeWrapper2() {
      }
      RecipeWrapper2.init = function(config) {
        return recipe_2.default.init(config);
      };
      RecipeWrapper2.createCode = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var recipe;
          return __generator(this, function(_a) {
            recipe = recipe_2.default.getInstanceOrThrow();
            return [
              2,
              UtilFunctions.createCode(
                __assign(__assign({}, input), { recipeImplementation: recipe.recipeImplementation })
              )
            ];
          });
        });
      };
      RecipeWrapper2.resendCode = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var recipe;
          return __generator(this, function(_a) {
            recipe = recipe_2.default.getInstanceOrThrow();
            return [
              2,
              UtilFunctions.resendCode(
                __assign(__assign({}, input), { recipeImplementation: recipe.recipeImplementation })
              )
            ];
          });
        });
      };
      RecipeWrapper2.consumeCode = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var recipe;
          return __generator(this, function(_a) {
            recipe = recipe_2.default.getInstanceOrThrow();
            return [
              2,
              UtilFunctions.consumeCode(
                __assign(__assign({}, input), { recipeImplementation: recipe.recipeImplementation })
              )
            ];
          });
        });
      };
      RecipeWrapper2.getLinkCodeFromURL = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.getLinkCodeFromURL(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.getPreAuthSessionIdFromURL = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.getPreAuthSessionIdFromURL(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.getTenantIdFromURL = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.getTenantIdFromURL(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.doesEmailExist = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.doesEmailExist(
          __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
        );
      };
      RecipeWrapper2.doesPhoneNumberExist = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.doesPhoneNumberExist(
          __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
        );
      };
      RecipeWrapper2.getLoginAttemptInfo = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.getLoginAttemptInfo(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.setLoginAttemptInfo = function(input) {
        return __awaiter(this, void 0, void 0, function() {
          var userContext, tenantId;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                userContext = (0, utils_1.getNormalisedUserContext)(input.userContext);
                return [
                  4,
                  recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                ];
              case 1:
                tenantId = _a.sent();
                return [
                  2,
                  recipe_2.default.getInstanceOrThrow().recipeImplementation.setLoginAttemptInfo({
                    attemptInfo: __assign({ tenantId }, input.attemptInfo),
                    userContext
                  })
                ];
            }
          });
        });
      };
      RecipeWrapper2.clearLoginAttemptInfo = function(input) {
        return recipe_2.default.getInstanceOrThrow().recipeImplementation.clearLoginAttemptInfo(
          __assign(__assign({}, input), {
            userContext: (0, utils_1.getNormalisedUserContext)(
              input === null || input === void 0 ? void 0 : input.userContext
            )
          })
        );
      };
      RecipeWrapper2.signOut = function(input) {
        return recipe_2.default.getInstanceOrThrow().signOut({
          userContext: (0, utils_1.getNormalisedUserContext)(
            input === null || input === void 0 ? void 0 : input.userContext
          )
        });
      };
      return RecipeWrapper2;
    }();
    exports.default = RecipeWrapper;
    var init = RecipeWrapper.init;
    exports.init = init;
    var createCode = RecipeWrapper.createCode;
    exports.createCode = createCode;
    var resendCode = RecipeWrapper.resendCode;
    exports.resendCode = resendCode;
    var consumeCode = RecipeWrapper.consumeCode;
    exports.consumeCode = consumeCode;
    var doesEmailExist = RecipeWrapper.doesEmailExist;
    exports.doesEmailExist = doesEmailExist;
    var doesPhoneNumberExist = RecipeWrapper.doesPhoneNumberExist;
    exports.doesPhoneNumberExist = doesPhoneNumberExist;
    var signOut = RecipeWrapper.signOut;
    exports.signOut = signOut;
    var getLinkCodeFromURL = RecipeWrapper.getLinkCodeFromURL;
    exports.getLinkCodeFromURL = getLinkCodeFromURL;
    var getPreAuthSessionIdFromURL = RecipeWrapper.getPreAuthSessionIdFromURL;
    exports.getPreAuthSessionIdFromURL = getPreAuthSessionIdFromURL;
    var getTenantIdFromURL = RecipeWrapper.getTenantIdFromURL;
    exports.getTenantIdFromURL = getTenantIdFromURL;
    var getLoginAttemptInfo = RecipeWrapper.getLoginAttemptInfo;
    exports.getLoginAttemptInfo = getLoginAttemptInfo;
    var setLoginAttemptInfo = RecipeWrapper.setLoginAttemptInfo;
    exports.setLoginAttemptInfo = setLoginAttemptInfo;
    var clearLoginAttemptInfo = RecipeWrapper.clearLoginAttemptInfo;
    exports.clearLoginAttemptInfo = clearLoginAttemptInfo;
  }
});

// node_modules/supertokens-web-js/recipe/passwordless/index.js
var require_passwordless3 = __commonJS({
  "node_modules/supertokens-web-js/recipe/passwordless/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_passwordless2());
  }
});

// node_modules/supertokens-auth-react/lib/build/utils.js
var require_utils6 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/utils.js"() {
    "use strict";
    (function() {
      var aa = this || self;
      function k(a, b) {
        a = a.split(".");
        var c = aa;
        a[0] in c || "undefined" == typeof c.execScript || c.execScript("var " + a[0]);
        for (var d; a.length && (d = a.shift()); )
          a.length || void 0 === b ? c[d] && c[d] !== Object.prototype[d] ? c = c[d] : c = c[d] = {} : c[d] = b;
      }
      function m(a, b) {
        function c() {
        }
        c.prototype = b.prototype;
        a.$ = b.prototype;
        a.prototype = new c();
        a.prototype.constructor = a;
        a.fa = function(d, e, g) {
          for (var f = Array(arguments.length - 2), h = 2; h < arguments.length; h++)
            f[h - 2] = arguments[h];
          return b.prototype[e].apply(d, f);
        };
      }
      function ba(a) {
        var b = [], c = 0, d;
        for (d in a)
          b[c++] = a[d];
        return b;
      }
      function ca(a, b) {
        a.sort(b || da);
      }
      function da(a, b) {
        return a > b ? 1 : a < b ? -1 : 0;
      }
      function ea(a, b) {
        this.g = a;
        this.m = !!b.o;
        this.i = b.h;
        this.v = b.type;
        this.u = false;
        switch (this.i) {
          case fa:
          case ha:
          case ia:
          case ja:
          case ka:
          case la:
          case ma:
            this.u = true;
        }
        this.l = b.defaultValue;
      }
      var ma = 1, la = 2, fa = 3, ha = 4, ia = 6, ja = 16, ka = 18;
      function na(a, b) {
        this.i = a;
        this.g = {};
        for (a = 0; a < b.length; a++) {
          var c = b[a];
          this.g[c.g] = c;
        }
      }
      function oa(a) {
        a = ba(a.g);
        ca(a, function(b, c) {
          return b.g - c.g;
        });
        return a;
      }
      function n() {
        this.g = {};
        this.l = this.j().g;
        this.i = this.m = null;
      }
      n.prototype.has = function(a) {
        return null != this.g[a.g];
      };
      n.prototype.get = function(a, b) {
        return p(this, a.g, b);
      };
      n.prototype.set = function(a, b) {
        q(this, a.g, b);
      };
      n.prototype.add = function(a, b) {
        r(this, a.g, b);
      };
      function t(a, b) {
        for (var c = oa(a.j()), d = 0; d < c.length; d++) {
          var e = c[d], g = e.g;
          if (null != b.g[g]) {
            a.i && delete a.i[e.g];
            var f = 11 == e.i || 10 == e.i;
            if (e.m) {
              e = u(b, g);
              for (var h = 0; h < e.length; h++)
                r(a, g, f ? e[h].clone() : e[h]);
            } else
              e = v(b, g), f ? (f = v(a, g)) ? t(f, e) : q(a, g, e.clone()) : q(a, g, e);
          }
        }
      }
      n.prototype.clone = function() {
        var a = new this.constructor();
        a != this && (a.g = {}, a.i && (a.i = {}), t(a, this));
        return a;
      };
      function v(a, b) {
        var c = a.g[b];
        if (null == c)
          return null;
        if (a.m) {
          if (!(b in a.i)) {
            var d = a.m, e = a.l[b];
            if (null != c)
              if (e.m) {
                for (var g = [], f = 0; f < c.length; f++)
                  g[f] = d.i(e, c[f]);
                c = g;
              } else
                c = d.i(e, c);
            return a.i[b] = c;
          }
          return a.i[b];
        }
        return c;
      }
      function p(a, b, c) {
        var d = v(a, b);
        return a.l[b].m ? d[c || 0] : d;
      }
      function w(a, b) {
        if (null != a.g[b])
          a = p(a, b, void 0);
        else
          a: {
            a = a.l[b];
            if (void 0 === a.l)
              if (b = a.v, b === Boolean)
                a.l = false;
              else if (b === Number)
                a.l = 0;
              else if (b === String)
                a.l = a.u ? "0" : "";
              else {
                a = new b();
                break a;
              }
            a = a.l;
          }
        return a;
      }
      function u(a, b) {
        return v(a, b) || [];
      }
      function x(a, b) {
        return a.l[b].m ? null != a.g[b] ? a.g[b].length : 0 : null != a.g[b] ? 1 : 0;
      }
      function q(a, b, c) {
        a.g[b] = c;
        a.i && (a.i[b] = c);
      }
      function r(a, b, c) {
        a.g[b] || (a.g[b] = []);
        a.g[b].push(c);
        a.i && delete a.i[b];
      }
      function y(a, b) {
        var c = [], d;
        for (d in b)
          0 != d && c.push(new ea(d, b[d]));
        return new na(a, c);
      }
      function A() {
      }
      A.prototype.g = function(a) {
        new a.i();
        throw Error("Unimplemented");
      };
      A.prototype.i = function(a, b) {
        if (11 == a.i || 10 == a.i)
          return b instanceof n ? b : this.g(a.v.prototype.j(), b);
        if (14 == a.i)
          return "string" === typeof b && B.test(b) && (a = Number(b), 0 < a) ? a : b;
        if (!a.u)
          return b;
        a = a.v;
        if (a === String) {
          if ("number" === typeof b)
            return String(b);
        } else if (a === Number && "string" === typeof b && ("Infinity" === b || "-Infinity" === b || "NaN" === b || B.test(b)))
          return Number(b);
        return b;
      };
      var B = /^-?[0-9]+$/;
      function C() {
      }
      m(C, A);
      C.prototype.g = function(a, b) {
        a = new a.i();
        a.m = this;
        a.g = b;
        a.i = {};
        return a;
      };
      function D() {
      }
      m(D, C);
      D.prototype.i = function(a, b) {
        return 8 == a.i ? !!b : A.prototype.i.apply(this, arguments);
      };
      D.prototype.g = function(a, b) {
        return D.$.g.call(this, a, b);
      };
      function E(a, b) {
        null != a && this.g.apply(this, arguments);
      }
      E.prototype.i = "";
      E.prototype.set = function(a) {
        this.i = "" + a;
      };
      E.prototype.g = function(a, b, c) {
        this.i += String(a);
        if (null != b)
          for (var d = 1; d < arguments.length; d++)
            this.i += arguments[d];
        return this;
      };
      E.prototype.toString = function() {
        return this.i;
      };
      function F() {
        n.call(this);
      }
      m(F, n);
      var pa = null;
      function G() {
        n.call(this);
      }
      m(G, n);
      var qa = null;
      function H() {
        n.call(this);
      }
      m(H, n);
      var ra = null;
      F.prototype.j = function() {
        var a = pa;
        a || (pa = a = y(F, {
          0: { name: "NumberFormat", s: "i18n.phonenumbers.NumberFormat" },
          1: { name: "pattern", required: true, h: 9, type: String },
          2: { name: "format", required: true, h: 9, type: String },
          3: { name: "leading_digits_pattern", o: true, h: 9, type: String },
          4: { name: "national_prefix_formatting_rule", h: 9, type: String },
          6: { name: "national_prefix_optional_when_formatting", h: 8, defaultValue: false, type: Boolean },
          5: { name: "domestic_carrier_code_formatting_rule", h: 9, type: String }
        }));
        return a;
      };
      F.j = F.prototype.j;
      G.prototype.j = function() {
        var a = qa;
        a || (qa = a = y(G, {
          0: { name: "PhoneNumberDesc", s: "i18n.phonenumbers.PhoneNumberDesc" },
          2: { name: "national_number_pattern", h: 9, type: String },
          9: { name: "possible_length", o: true, h: 5, type: Number },
          10: { name: "possible_length_local_only", o: true, h: 5, type: Number },
          6: { name: "example_number", h: 9, type: String }
        }));
        return a;
      };
      G.j = G.prototype.j;
      H.prototype.j = function() {
        var a = ra;
        a || (ra = a = y(H, {
          0: { name: "PhoneMetadata", s: "i18n.phonenumbers.PhoneMetadata" },
          1: { name: "general_desc", h: 11, type: G },
          2: { name: "fixed_line", h: 11, type: G },
          3: { name: "mobile", h: 11, type: G },
          4: { name: "toll_free", h: 11, type: G },
          5: { name: "premium_rate", h: 11, type: G },
          6: { name: "shared_cost", h: 11, type: G },
          7: { name: "personal_number", h: 11, type: G },
          8: { name: "voip", h: 11, type: G },
          21: { name: "pager", h: 11, type: G },
          25: { name: "uan", h: 11, type: G },
          27: { name: "emergency", h: 11, type: G },
          28: { name: "voicemail", h: 11, type: G },
          29: { name: "short_code", h: 11, type: G },
          30: { name: "standard_rate", h: 11, type: G },
          31: { name: "carrier_specific", h: 11, type: G },
          33: { name: "sms_services", h: 11, type: G },
          24: { name: "no_international_dialling", h: 11, type: G },
          9: { name: "id", required: true, h: 9, type: String },
          10: { name: "country_code", h: 5, type: Number },
          11: { name: "international_prefix", h: 9, type: String },
          17: { name: "preferred_international_prefix", h: 9, type: String },
          12: { name: "national_prefix", h: 9, type: String },
          13: { name: "preferred_extn_prefix", h: 9, type: String },
          15: { name: "national_prefix_for_parsing", h: 9, type: String },
          16: { name: "national_prefix_transform_rule", h: 9, type: String },
          18: { name: "same_mobile_and_fixed_line_pattern", h: 8, defaultValue: false, type: Boolean },
          19: { name: "number_format", o: true, h: 11, type: F },
          20: { name: "intl_number_format", o: true, h: 11, type: F },
          22: { name: "main_country_for_code", h: 8, defaultValue: false, type: Boolean },
          23: { name: "leading_digits", h: 9, type: String }
        }));
        return a;
      };
      H.j = H.prototype.j;
      function I() {
        n.call(this);
      }
      m(I, n);
      var sa = null, ta = { ea: 0, da: 1, ca: 5, ba: 10, aa: 20 };
      I.prototype.j = function() {
        var a = sa;
        a || (sa = a = y(I, {
          0: { name: "PhoneNumber", s: "i18n.phonenumbers.PhoneNumber" },
          1: { name: "country_code", required: true, h: 5, type: Number },
          2: { name: "national_number", required: true, h: 4, type: Number },
          3: { name: "extension", h: 9, type: String },
          4: { name: "italian_leading_zero", h: 8, type: Boolean },
          8: { name: "number_of_leading_zeros", h: 5, defaultValue: 1, type: Number },
          5: { name: "raw_input", h: 9, type: String },
          6: { name: "country_code_source", h: 14, defaultValue: 0, type: ta },
          7: { name: "preferred_domestic_carrier_code", h: 9, type: String }
        }));
        return a;
      };
      I.ctor = I;
      I.ctor.j = I.prototype.j;
      var J = {
        1: "US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI".split(" "),
        7: ["RU", "KZ"],
        20: ["EG"],
        27: ["ZA"],
        30: ["GR"],
        31: ["NL"],
        32: ["BE"],
        33: ["FR"],
        34: ["ES"],
        36: ["HU"],
        39: ["IT", "VA"],
        40: ["RO"],
        41: ["CH"],
        43: ["AT"],
        44: ["GB", "GG", "IM", "JE"],
        45: ["DK"],
        46: ["SE"],
        47: ["NO", "SJ"],
        48: ["PL"],
        49: ["DE"],
        51: ["PE"],
        52: ["MX"],
        53: ["CU"],
        54: ["AR"],
        55: ["BR"],
        56: ["CL"],
        57: ["CO"],
        58: ["VE"],
        60: ["MY"],
        61: ["AU", "CC", "CX"],
        62: ["ID"],
        63: ["PH"],
        64: ["NZ"],
        65: ["SG"],
        66: ["TH"],
        81: ["JP"],
        82: ["KR"],
        84: ["VN"],
        86: ["CN"],
        90: ["TR"],
        91: ["IN"],
        92: ["PK"],
        93: ["AF"],
        94: ["LK"],
        95: ["MM"],
        98: ["IR"],
        211: ["SS"],
        212: ["MA", "EH"],
        213: ["DZ"],
        216: ["TN"],
        218: ["LY"],
        220: ["GM"],
        221: ["SN"],
        222: ["MR"],
        223: ["ML"],
        224: ["GN"],
        225: ["CI"],
        226: ["BF"],
        227: ["NE"],
        228: ["TG"],
        229: ["BJ"],
        230: ["MU"],
        231: ["LR"],
        232: ["SL"],
        233: ["GH"],
        234: ["NG"],
        235: ["TD"],
        236: ["CF"],
        237: ["CM"],
        238: ["CV"],
        239: ["ST"],
        240: ["GQ"],
        241: ["GA"],
        242: ["CG"],
        243: ["CD"],
        244: ["AO"],
        245: ["GW"],
        246: ["IO"],
        247: ["AC"],
        248: ["SC"],
        249: ["SD"],
        250: ["RW"],
        251: ["ET"],
        252: ["SO"],
        253: ["DJ"],
        254: ["KE"],
        255: ["TZ"],
        256: ["UG"],
        257: ["BI"],
        258: ["MZ"],
        260: ["ZM"],
        261: ["MG"],
        262: ["RE", "YT"],
        263: ["ZW"],
        264: ["NA"],
        265: ["MW"],
        266: ["LS"],
        267: ["BW"],
        268: ["SZ"],
        269: ["KM"],
        290: ["SH", "TA"],
        291: ["ER"],
        297: ["AW"],
        298: ["FO"],
        299: ["GL"],
        350: ["GI"],
        351: ["PT"],
        352: ["LU"],
        353: ["IE"],
        354: ["IS"],
        355: ["AL"],
        356: ["MT"],
        357: ["CY"],
        358: ["FI", "AX"],
        359: ["BG"],
        370: ["LT"],
        371: ["LV"],
        372: ["EE"],
        373: ["MD"],
        374: ["AM"],
        375: ["BY"],
        376: ["AD"],
        377: ["MC"],
        378: ["SM"],
        380: ["UA"],
        381: ["RS"],
        382: ["ME"],
        383: ["XK"],
        385: ["HR"],
        386: ["SI"],
        387: ["BA"],
        389: ["MK"],
        420: ["CZ"],
        421: ["SK"],
        423: ["LI"],
        500: ["FK"],
        501: ["BZ"],
        502: ["GT"],
        503: ["SV"],
        504: ["HN"],
        505: ["NI"],
        506: ["CR"],
        507: ["PA"],
        508: ["PM"],
        509: ["HT"],
        590: ["GP", "BL", "MF"],
        591: ["BO"],
        592: ["GY"],
        593: ["EC"],
        594: ["GF"],
        595: ["PY"],
        596: ["MQ"],
        597: ["SR"],
        598: ["UY"],
        599: ["CW", "BQ"],
        670: ["TL"],
        672: ["NF"],
        673: ["BN"],
        674: ["NR"],
        675: ["PG"],
        676: ["TO"],
        677: ["SB"],
        678: ["VU"],
        679: ["FJ"],
        680: ["PW"],
        681: ["WF"],
        682: ["CK"],
        683: ["NU"],
        685: ["WS"],
        686: ["KI"],
        687: ["NC"],
        688: ["TV"],
        689: ["PF"],
        690: ["TK"],
        691: ["FM"],
        692: ["MH"],
        800: ["001"],
        808: ["001"],
        850: ["KP"],
        852: ["HK"],
        853: ["MO"],
        855: ["KH"],
        856: ["LA"],
        870: ["001"],
        878: ["001"],
        880: ["BD"],
        881: ["001"],
        882: ["001"],
        883: ["001"],
        886: ["TW"],
        888: ["001"],
        960: ["MV"],
        961: ["LB"],
        962: ["JO"],
        963: ["SY"],
        964: ["IQ"],
        965: ["KW"],
        966: ["SA"],
        967: ["YE"],
        968: ["OM"],
        970: ["PS"],
        971: ["AE"],
        972: ["IL"],
        973: ["BH"],
        974: ["QA"],
        975: ["BT"],
        976: ["MN"],
        977: ["NP"],
        979: ["001"],
        992: ["TJ"],
        993: ["TM"],
        994: ["AZ"],
        995: ["GE"],
        996: ["KG"],
        998: ["UZ"]
      }, va = {
        AC: [
          ,
          [, , "(?:[01589]\\d|[46])\\d{4}", , , , , , , [5, 6]],
          [, , "6[2-467]\\d{3}", , , , "62889", , , [5]],
          [, , "4\\d{4}", , , , "40123", , , [5]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AC",
          247,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "(?:0[1-9]|[1589]\\d)\\d{4}", , , , "542011", , , [6]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AD: [
          ,
          [, , "(?:1|6\\d)\\d{7}|[135-9]\\d{5}", , , , , , , [6, 8, 9]],
          [, , "[78]\\d{5}", , , , "712345", , , [6]],
          [, , "690\\d{6}|[356]\\d{5}", , , , "312345", , , [6, 9]],
          [, , "180[02]\\d{4}", , , , "18001234", , , [8]],
          [, , "[19]\\d{5}", , , , "912345", , , [6]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AD",
          376,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})", "$1 $2", ["[135-9]"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["1"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "1800\\d{4}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AE: [
          ,
          [, , "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}", , , , , , , [5, 6, 7, 8, 9, 10, 11, 12]],
          [, , "[2-4679][2-8]\\d{6}", , , , "22345678", , , [8], [7]],
          [, , "5[024-68]\\d{7}", , , , "501234567", , , [9]],
          [, , "400\\d{6}|800\\d{2,9}", , , , "800123456"],
          [, , "900[02]\\d{5}", , , , "900234567", , , [9]],
          [, , "700[05]\\d{5}", , , , "700012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AE",
          971,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2,9})", "$1 $2", ["60|8"]],
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[236]|[479][2-8]"], "0$1"],
            [, "(\\d{3})(\\d)(\\d{5})", "$1 $2 $3", ["[479]"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "600[25]\\d{5}", , , , "600212345", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AF: [
          ,
          [, , "[2-7]\\d{8}", , , , , , , [9], [7]],
          [, , "(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}", , , , "234567890", , , , [7]],
          [, , "7\\d{8}", , , , "701234567", , , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AF",
          93,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[1-9]"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]
          ],
          [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AG: [
          ,
          [, , "(?:268|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [, , "268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}", , , , "2684601234", , , , [7]],
          [, , "268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}", , , , "2684641234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , "26848[01]\\d{4}", , , , "2684801234", , , , [7]],
          "AG",
          1,
          "011",
          "1",
          ,
          ,
          "([457]\\d{6})$|1",
          "268$1",
          ,
          ,
          ,
          ,
          [, , "26840[69]\\d{4}", , , , "2684061234", , , , [7]],
          ,
          "268",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AI: [
          ,
          [, , "(?:264|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [, , "264(?:292|4(?:6[12]|9[78]))\\d{4}", , , , "2644612345", , , , [7]],
          [, , "264(?:235|4(?:69|76)|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}", , , , "2642351234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "AI",
          1,
          "011",
          "1",
          ,
          ,
          "([2457]\\d{6})$|1",
          "264$1",
          ,
          ,
          ,
          ,
          [, , "264724\\d{4}", , , , "2647241234", , , , [7]],
          ,
          "264",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AL: [
          ,
          [, , "(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}", , , , , , , [6, 7, 8, 9], [5]],
          [
            ,
            ,
            "4505[0-2]\\d{3}|(?:[2358][16-9]\\d[2-9]|4410)\\d{4}|(?:[2358][2-5][2-9]|4(?:[2-57-9][2-9]|6\\d))\\d{5}",
            ,
            ,
            ,
            "22345678",
            ,
            ,
            [8],
            [5, 6, 7]
          ],
          [, , "6(?:[78][2-9]|9\\d)\\d{6}", , , , "672123456", , , [9]],
          [, , "800\\d{4}", , , , "8001234", , , [7]],
          [, , "900[1-9]\\d\\d", , , , "900123", , , [6]],
          [, , "808[1-9]\\d\\d", , , , "808123", , , [6]],
          [, , "700[2-9]\\d{4}", , , , "70021234", , , [8]],
          [, , , , , , , , , [-1]],
          "AL",
          355,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3,4})", "$1 $2", ["80|9"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["4[2-6]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2358][2-5]|4"], "0$1"],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["[23578]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AM: [
          ,
          [, , "(?:[1-489]\\d|55|60|77)\\d{6}", , , , , , , [8], [5, 6]],
          [
            ,
            ,
            "(?:(?:1[0-25]|47)\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\d{5}",
            ,
            ,
            ,
            "10123456",
            ,
            ,
            ,
            [5, 6]
          ],
          [, , "(?:33|4[1349]|55|77|88|9[13-9])\\d{6}", , , , "77123456"],
          [, , "800\\d{5}", , , , "80012345"],
          [, , "90[016]\\d{5}", , , , "90012345"],
          [, , "80[1-4]\\d{5}", , , , "80112345"],
          [, , , , , , , , , [-1]],
          [, , "60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\d|9[01])\\d{4}", , , , "60271234"],
          "AM",
          374,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]0"], "0 $1"],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["2|3[12]"], "(0$1)"],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["1|47"], "(0$1)"],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["[3-9]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AO: [
          ,
          [, , "[29]\\d{8}", , , , , , , [9]],
          [, , "2\\d(?:[0134][25-9]|[25-9]\\d)\\d{5}", , , , "222123456"],
          [, , "9[1-59]\\d{7}", , , , "923123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AO",
          244,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[29]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AR: [
          ,
          [, , "(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}", , , , , , , [10, 11], [6, 7, 8]],
          [
            ,
            ,
            "3888[013-9]\\d{5}|3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\d{5}|(?:29(?:54|66)|3(?:7(?:55|77)|865))[2-8]\\d{5}|(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|(?:2(?:284|3(?:02|23)|657|920)|3(?:4(?:8[27]|92)|541|878))[2-7]\\d{5}|(?:2(?:(?:26|62)2|320|477|9(?:42|83))|3(?:329|4(?:[47]6|62|89)|564))[2-6]\\d{5}|(?:(?:11[1-8]|670)\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-7]|[235][4-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|[17][2-6]|3[4-6]|[58][3-6])))\\d{6}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])))[3-6]\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}",
            ,
            ,
            ,
            "1123456789",
            ,
            ,
            [10],
            [6, 7, 8]
          ],
          [
            ,
            ,
            "93(?:7(?:1[15]|81)[46]|8(?:(?:21|4[16]|69|9[12])[46]|88[013-9]))\\d{5}|9(?:29(?:54|66)|3(?:7(?:55|77)|865))[2-8]\\d{5}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|9(?:2(?:284|3(?:02|23)|657|920)|3(?:4(?:8[27]|92)|541|878))[2-7]\\d{5}|9(?:2(?:(?:26|62)2|320|477|9(?:42|83))|3(?:329|4(?:[47]6|62|89)|564))[2-6]\\d{5}|(?:675\\d|9(?:11[1-8]\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-7]|[235][4-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|[17][2-6]|3[4-6]|[58][3-6]))))\\d{6}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|9(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])))[3-6]\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}",
            ,
            ,
            ,
            "91123456789",
            ,
            ,
            ,
            [6, 7, 8]
          ],
          [, , "800\\d{7,8}", , , , "8001234567"],
          [, , "60[04579]\\d{7}", , , , "6001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AR",
          54,
          "00",
          "0",
          ,
          ,
          "0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?",
          "9$1",
          ,
          ,
          [
            [, "(\\d{3})", "$1", ["0|1(?:0[0-35-7]|1[02-5]|2[015]|3[47]|4[478])|911"]],
            [, "(\\d{2})(\\d{4})", "$1-$2", ["[1-9]"]],
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[2-9]"]],
            [, "(\\d{4})(\\d{4})", "$1-$2", ["[1-8]"]],
            [
              ,
              "(\\d{4})(\\d{2})(\\d{4})",
              "$1 $2-$3",
              [
                "2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])",
                "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)",
                "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]",
                "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"
              ],
              "0$1",
              ,
              1
            ],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1", , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", , 1],
            [
              ,
              "(\\d)(\\d{4})(\\d{2})(\\d{4})",
              "$2 15-$3-$4",
              [
                "9(?:2[2-469]|3[3-578])",
                "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))",
                "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)",
                "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]",
                "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"
              ],
              "0$1"
            ],
            [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 15-$3-$4", ["91"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{5})", "$1-$2-$3", ["8"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 15-$3-$4", ["9"], "0$1"]
          ],
          [
            [
              ,
              "(\\d{4})(\\d{2})(\\d{4})",
              "$1 $2-$3",
              [
                "2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])",
                "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)",
                "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]",
                "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"
              ],
              "0$1",
              ,
              1
            ],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1", , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", , 1],
            [
              ,
              "(\\d)(\\d{4})(\\d{2})(\\d{4})",
              "$1 $2 $3-$4",
              [
                "9(?:2[2-469]|3[3-578])",
                "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))",
                "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)",
                "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]",
                "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"
              ]
            ],
            [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3-$4", ["91"]],
            [, "(\\d{3})(\\d{3})(\\d{5})", "$1-$2-$3", ["8"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3-$4", ["9"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "810\\d{7}", , , , , , , [10]],
          [, , "810\\d{7}", , , , "8101234567", , , [10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AS: [
          ,
          [, , "(?:[58]\\d\\d|684|900)\\d{7}", , , , , , , [10], [7]],
          [, , "6846(?:22|33|44|55|77|88|9[19])\\d{4}", , , , "6846221234", , , , [7]],
          [, , "684(?:2(?:48|5[2468]|7[26])|7(?:3[13]|70|82))\\d{4}", , , , "6847331234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "AS",
          1,
          "011",
          "1",
          ,
          ,
          "([267]\\d{6})$|1",
          "684$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "684",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AT: [
          ,
          [
            ,
            ,
            "1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",
            ,
            ,
            ,
            ,
            ,
            ,
            [4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
            [3]
          ],
          [
            ,
            ,
            "1(?:11\\d|[2-9]\\d{3,11})|(?:316|463|(?:51|66|73)2)\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-8]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{4,10}",
            ,
            ,
            ,
            "1234567890",
            ,
            ,
            ,
            [3]
          ],
          [, , "6(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d{4,10}", , , , "664123456", , , [7, 8, 9, 10, 11, 12, 13]],
          [, , "800\\d{6,10}", , , , "800123456", , , [9, 10, 11, 12, 13]],
          [, , "(?:8[69][2-68]|9(?:0[01]|3[019]))\\d{6,10}", , , , "900123456", , , [9, 10, 11, 12, 13]],
          [, , "8(?:10|2[018])\\d{6,10}|828\\d{5}", , , , "810123456", , , [8, 9, 10, 11, 12, 13]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "5(?:0[1-9]|17|[79]\\d)\\d{2,10}|7[28]0\\d{6,10}",
            ,
            ,
            ,
            "780123456",
            ,
            ,
            [5, 6, 7, 8, 9, 10, 11, 12, 13]
          ],
          "AT",
          43,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})", "$1", ["14"]],
            [, "(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"],
            [, "(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"],
            [, "(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"],
            [, "(\\d{6})", "$1", ["[18]"]],
            [, "(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"],
            [, "(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]
          ],
          [
            [, "(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"],
            [, "(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"],
            [, "(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"],
            [, "(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"],
            [, "(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AU: [
          ,
          [
            ,
            ,
            "1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 7, 8, 9, 10, 12]
          ],
          [
            ,
            ,
            "(?:(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\d|2[0-8]))\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}",
            ,
            ,
            ,
            "212345678",
            ,
            ,
            [9],
            [8]
          ],
          [
            ,
            ,
            "4(?:79[01]|83[0-389]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-27-9])\\d{6}",
            ,
            ,
            ,
            "412345678",
            ,
            ,
            [9]
          ],
          [, , "180(?:0\\d{3}|2)\\d{3}", , , , "1800123456", , , [7, 10]],
          [, , "190[0-26]\\d{6}", , , , "1900123456", , , [10]],
          [, , "13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", , , , "1300123456", , , [6, 8, 10, 12]],
          [, , , , , , , , , [-1]],
          [, , "14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", , , , "147101234", , , [9]],
          "AU",
          61,
          "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011",
          "0",
          ,
          ,
          "(183[12])|0",
          ,
          "0011",
          ,
          [
            [, "(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["13"]],
            [, "(\\d{3})(\\d{3})", "$1 $2", ["19"]],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["180", "1802"]],
            [, "(\\d{4})(\\d{3,4})", "$1 $2", ["19"]],
            [, "(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|4"], "0$1"],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)", "$CC ($1)"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]],
            [, "(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["130"]]
          ],
          [
            [, "(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|4"], "0$1"],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)", "$CC ($1)"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]
          ],
          [, , "163\\d{2,6}", , , , "1631234", , , [5, 6, 7, 8, 9]],
          1,
          ,
          [, , "1(?:3(?:00\\d{5}|45[0-4])|802)\\d{3}|1[38]00\\d{6}|13\\d{4}", , , , , , , [6, 7, 8, 10, 12]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AW: [
          ,
          [, , "(?:[25-79]\\d\\d|800)\\d{4}", , , , , , , [7]],
          [, , "5(?:2\\d|8[1-9])\\d{4}", , , , "5212345"],
          [
            ,
            ,
            "(?:290|5[69]\\d|6(?:[03]0|22|4[0-2]|[69]\\d)|7(?:[34]\\d|7[07])|9(?:6[45]|9[4-8]))\\d{4}",
            ,
            ,
            ,
            "5601234"
          ],
          [, , "800\\d{4}", , , , "8001234"],
          [, , "900\\d{4}", , , , "9001234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:28\\d|501)\\d{4}", , , , "5011234"],
          "AW",
          297,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[25-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AX: [
          ,
          [
            ,
            ,
            "2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 7, 8, 9, 10, 11, 12]
          ],
          [, , "18[1-8]\\d{3,6}", , , , "181234567", , , [6, 7, 8, 9]],
          [, , "4946\\d{2,6}|(?:4[0-8]|50)\\d{4,8}", , , , "412345678", , , [6, 7, 8, 9, 10]],
          [, , "800\\d{4,6}", , , , "800123456", , , [7, 8, 9]],
          [, , "[67]00\\d{5,6}", , , , "600123456", , , [8, 9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AX",
          358,
          "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))",
          "0",
          ,
          ,
          "0",
          ,
          "00",
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "18",
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}",
            ,
            ,
            ,
            "10112345"
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        AZ: [
          ,
          [, , "365\\d{6}|(?:[124579]\\d|60|88)\\d{7}", , , , , , , [9], [7]],
          [
            ,
            ,
            "(?:2[12]428|3655[02])\\d{4}|(?:2(?:22[0-79]|63[0-28])|3654)\\d{5}|(?:(?:1[28]|46)\\d|2(?:[014-6]2|[23]3))\\d{6}",
            ,
            ,
            ,
            "123123456",
            ,
            ,
            ,
            [7]
          ],
          [, , "36554\\d{4}|(?:[16]0|4[04]|5[015]|7[07]|99)\\d{7}", , , , "401234567"],
          [, , "88\\d{7}", , , , "881234567"],
          [, , "900200\\d{3}", , , , "900200123"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "AZ",
          994,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[1-9]"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              ["1[28]|2|365|46", "1[28]|2|365[45]|46", "1[28]|2|365(?:4|5[02])|46"],
              "(0$1)"
            ],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]
          ],
          [
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              ["1[28]|2|365|46", "1[28]|2|365[45]|46", "1[28]|2|365(?:4|5[02])|46"],
              "(0$1)"
            ],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BA: [
          ,
          [, , "6\\d{8}|(?:[35689]\\d|49|70)\\d{6}", , , , , , , [8, 9], [6]],
          [
            ,
            ,
            "(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\d{5}",
            ,
            ,
            ,
            "30212345",
            ,
            ,
            [8],
            [6]
          ],
          [, , "6040\\d{5}|6(?:03|[1-356]|44|7\\d)\\d{6}", , , , "61123456"],
          [, , "8[08]\\d{6}", , , , "80123456", , , [8]],
          [, , "9[0246]\\d{6}", , , , "90123456", , , [8]],
          [, , "8[12]\\d{6}", , , , "82123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BA",
          387,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})", "$1-$2", ["[2-9]"]],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]
          ],
          [
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "703[235]0\\d{3}|70(?:2[0-5]|3[0146]|[56]0)\\d{4}", , , , "70341234", , , [8]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BB: [
          ,
          [, , "(?:246|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "246521[0369]\\d{3}|246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7[35]7|9(?:1[89]|63))\\d{4}",
            ,
            ,
            ,
            "2464123456",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "246(?:(?:2(?:[3568]\\d|4[0-57-9])|3(?:5[2-9]|6[0-6])|4(?:46|5\\d)|69[5-7]|8(?:[2-5]\\d|83))\\d|52(?:1[147]|20))\\d{3}",
            ,
            ,
            ,
            "2462501234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "(?:246976|900[2-9]\\d\\d)\\d{4}", , , , "9002123456", , , , [7]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , "24631\\d{5}", , , , "2463101234", , , , [7]],
          "BB",
          1,
          "011",
          "1",
          ,
          ,
          "([2-9]\\d{6})$|1",
          "246$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "246",
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "246(?:292|367|4(?:1[7-9]|3[01]|4[47-9]|67)|7(?:1[2-9]|2\\d|3[016]|53))\\d{4}",
            ,
            ,
            ,
            "2464301234",
            ,
            ,
            ,
            [7]
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BD: [
          ,
          [
            ,
            ,
            "[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10]
          ],
          [
            ,
            ,
            "(?:4(?:31\\d\\d|423)|5222)\\d{3}(?:\\d{2})?|8332[6-9]\\d\\d|(?:3(?:03[56]|224)|4(?:22[25]|653))\\d{3,4}|(?:3(?:42[47]|529|823)|4(?:027|525|65(?:28|8))|562|6257|7(?:1(?:5[3-5]|6[12]|7[156]|89)|22[589]56|32|42675|52(?:[25689](?:56|8)|[347]8)|71(?:6[1267]|75|89)|92374)|82(?:2[59]|32)56|9(?:03[23]56|23(?:256|373)|31|5(?:1|2[4589]56)))\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0136-9]|7[0-7]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|181|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|7(?:22[57-9]|42[56]|82[35])8|8(?:0[124-9]|2(?:181|2[02-4679]8)|4[12]|[5-7]2)|9(?:[04]2|2(?:2|328)|81))\\d{4}|(?:2(?:222|[45]\\d)\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\d|[257]1|332|4(?:2[246]|5[25])|6(?:2[35]|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[35-79]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\d|[3-589]1|6[12]|72[24])|8(?:217|3[12]|[5-7]1)|9[24]1)\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\d{5}|[59]1\\d{5}",
            ,
            ,
            ,
            "27111234"
          ],
          [, , "(?:1[13-9]\\d|644)\\d{7}|(?:3[78]|44|66)[02-9]\\d{7}", , , , "1812345678", , , [10]],
          [, , "80[03]\\d{7}", , , , "8001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "96(?:0[469]|1[0-47]|3[389]|6[69]|7[78])\\d{6}", , , , "9604123456", , , [10]],
          "BD",
          880,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{4,6})", "$1-$2", ["31[5-8]|[459]1"], "0$1"],
            [
              ,
              "(\\d{3})(\\d{3,7})",
              "$1-$2",
              [
                "3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"
              ],
              "0$1"
            ],
            [, "(\\d{4})(\\d{3,6})", "$1-$2", ["[13-9]|22"], "0$1"],
            [, "(\\d)(\\d{7,8})", "$1-$2", ["2"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BE: [
          ,
          [, , "4\\d{8}|[1-9]\\d{7}", , , , , , , [8, 9]],
          [
            ,
            ,
            "80[2-8]\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\d{6}",
            ,
            ,
            ,
            "12345678",
            ,
            ,
            [8]
          ],
          [, , "4[5-9]\\d{7}", , , , "470123456", , , [9]],
          [, , "800[1-9]\\d{4}", , , , "80012345", , , [8]],
          [
            ,
            ,
            "(?:70(?:2[0-57]|3[04-7]|44|6[569]|7[0579])|90(?:0[0-8]|1[36]|2[0-3568]|3[0-689]|[47][2-68]|5[1-68]|6[0-378]|9[34679]))\\d{4}",
            ,
            ,
            ,
            "90012345",
            ,
            ,
            [8]
          ],
          [, , "7879\\d{4}", , , , "78791234", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BE",
          32,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:80|9)0"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[239]|4[23]"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[15-8]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "78(?:0[57]|1[014-8]|2[25]|3[15-8]|48|[56]0|7[06-8]|9\\d)\\d{4}", , , , "78102345", , , [8]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BF: [
          ,
          [, , "[025-7]\\d{7}", , , , , , , [8]],
          [
            ,
            ,
            "2(?:0(?:49|5[23]|6[5-7]|9[016-9])|4(?:4[569]|5[4-6]|6[5-7]|7[0179])|5(?:[34]\\d|50|6[5-7]))\\d{4}",
            ,
            ,
            ,
            "20491234"
          ],
          [, , "(?:0[1-35-7]|5[1-8]|[67]\\d)\\d{6}", , , , "70123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BF",
          226,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[025-7]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BG: [
          ,
          [, , "00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}", , , , , , , [6, 7, 8, 9, 12], [4, 5]],
          [
            ,
            ,
            "2\\d{5,7}|(?:43[1-6]|70[1-9])\\d{4,5}|(?:[36]\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\d{5,6}",
            ,
            ,
            ,
            "2123456",
            ,
            ,
            [6, 7, 8],
            [4, 5]
          ],
          [, , "(?:43[07-9]|99[69]\\d)\\d{5}|(?:8[7-9]|98)\\d{7}", , , , "43012345", , , [8, 9]],
          [, , "(?:00800\\d\\d|800)\\d{5}", , , , "80012345", , , [8, 12]],
          [, , "90\\d{6}", , , , "90123456", , , [8]],
          [, , "700\\d{5}", , , , "70012345", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BG",
          359,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{6})", "$1", ["1"]],
            [, "(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]
          ],
          [
            [, "(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BH: [
          ,
          [, , "[136-9]\\d{7}", , , , , , , [8]],
          [
            ,
            ,
            "(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|7[7-9]|88)|9[69][69])|7(?:1(?:11|78)|7\\d\\d))\\d{4}",
            ,
            ,
            ,
            "17001234"
          ],
          [
            ,
            ,
            "(?:3(?:[1-79]\\d|8[0-47-9])\\d|6(?:3(?:00|33|6[16])|6(?:3[03-9]|[69]\\d|7[0-6])))\\d{4}",
            ,
            ,
            ,
            "36001234"
          ],
          [, , "80\\d{6}", , , , "80123456"],
          [, , "(?:87|9[014578])\\d{6}", , , , "90123456"],
          [, , "84\\d{6}", , , , "84123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BH",
          973,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{4})(\\d{4})", "$1 $2", ["[13679]|8[047]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BI: [
          ,
          [, , "(?:[267]\\d|31)\\d{6}", , , , , , , [8]],
          [, , "(?:22|31)\\d{6}", , , , "22201234"],
          [, , "(?:29|[67][125-9])\\d{6}", , , , "79561234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BI",
          257,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2367]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BJ: [
          ,
          [, , "[24-689]\\d{7}", , , , , , , [8]],
          [, , "2(?:02|1[037]|2[45]|3[68]|4\\d)\\d{5}", , , , "20211234"],
          [, , "(?:4[0-2]|[56]\\d|9[013-9])\\d{6}", , , , "90011234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "857[58]\\d{4}", , , , "85751234"],
          "BJ",
          229,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-689]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "81\\d{6}", , , , "81123456"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BL: [
          ,
          [, , "(?:590|(?:69|80)\\d|976)\\d{6}", , , , , , , [9]],
          [, , "590(?:2[7-9]|5[12]|87)\\d{4}", , , , "590271234"],
          [, , "69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}", , , , "690001234"],
          [, , "80[0-5]\\d{6}", , , , "800012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "976[01]\\d{5}", , , , "976012345"],
          "BL",
          590,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BM: [
          ,
          [, , "(?:441|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [, , "441(?:[46]\\d\\d|5(?:4\\d|60|89))\\d{4}", , , , "4414123456", , , , [7]],
          [, , "441(?:[2378]\\d|5[0-39]|92)\\d{5}", , , , "4413701234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "BM",
          1,
          "011",
          "1",
          ,
          ,
          "([2-9]\\d{6})$|1",
          "441$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "441",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BN: [
          ,
          [, , "[2-578]\\d{6}", , , , , , , [7]],
          [, , "22[0-7]\\d{4}|(?:2[013-9]|[34]\\d|5[0-25-9])\\d{5}", , , , "2345678"],
          [, , "(?:22[89]|[78]\\d\\d)\\d{4}", , , , "7123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "5[34]\\d{5}", , , , "5345678"],
          "BN",
          673,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-578]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BO: [
          ,
          [, , "(?:[2-467]\\d\\d|8001)\\d{5}", , , , , , , [8, 9], [7]],
          [
            ,
            ,
            "(?:2(?:2\\d\\d|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d\\d|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\d\\d|6(?:11|[24689]\\d|72)))\\d{4}",
            ,
            ,
            ,
            "22123456",
            ,
            ,
            [8],
            [7]
          ],
          [, , "[67]\\d{7}", , , , "71234567", , , [8]],
          [, , "8001[07]\\d{4}", , , , "800171234", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BO",
          591,
          "00(?:1\\d)?",
          "0",
          ,
          ,
          "0(1\\d)?",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{7})", "$1 $2", ["[23]|4[46]"], , "0$CC $1"],
            [, "(\\d{8})", "$1", ["[67]"], , "0$CC $1"],
            [, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["8"], , "0$CC $1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "8001[07]\\d{4}", , , , , , , [9]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BQ: [
          ,
          [, , "(?:[34]1|7\\d)\\d{5}", , , , , , , [7]],
          [, , "(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\d)\\d{3}", , , , "7151234"],
          [, , "(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}", , , , "3181234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BQ",
          599,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "[347]",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BR: [
          ,
          [
            ,
            ,
            "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [8, 9, 10, 11]
          ],
          [
            ,
            ,
            "(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\d{7}",
            ,
            ,
            ,
            "1123456789",
            ,
            ,
            [10],
            [8]
          ],
          [
            ,
            ,
            "(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\d)\\d{7}",
            ,
            ,
            ,
            "11961234567",
            ,
            ,
            [10, 11],
            [8, 9]
          ],
          [, , "800\\d{6,7}", , , , "800123456", , , [9, 10]],
          [, , "300\\d{6}|[59]00\\d{6,7}", , , , "300123456", , , [9, 10]],
          [, , "(?:30[03]\\d{3}|4(?:0(?:0\\d|20)|370))\\d{4}|300\\d{5}", , , , "40041234", , , [8, 10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BR",
          55,
          "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)",
          "0",
          ,
          ,
          "(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?",
          "$2",
          ,
          ,
          [
            [
              ,
              "(\\d{3,6})",
              "$1",
              ["1(?:1[25-8]|2[357-9]|3[02-68]|4[12568]|5|6[0-8]|8[015]|9[0-47-9])|321|610"]
            ],
            [, "(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]],
            [, "(\\d{4})(\\d{4})", "$1-$2", ["[2-57]", "[2357]|4(?:[0-24-9]|3(?:[0-689]|7[1-9]))"]],
            [, "(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"],
            [, "(\\d{5})(\\d{4})", "$1-$2", ["9"]],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2-$3",
              ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],
              "($1)",
              "0 $CC ($1)"
            ],
            [, "(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)", "0 $CC ($1)"]
          ],
          [
            [, "(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]],
            [, "(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2-$3",
              ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],
              "($1)",
              "0 $CC ($1)"
            ],
            [, "(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)", "0 $CC ($1)"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "30(?:0\\d{5,7}|3\\d{7})|40(?:0\\d|20)\\d{4}|800\\d{6,7}", , , , , , , [8, 9, 10]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BS: [
          ,
          [, , "(?:242|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-5]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}",
            ,
            ,
            ,
            "2423456789",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\d|[89]9))\\d{4}",
            ,
            ,
            ,
            "2423591234",
            ,
            ,
            ,
            [7]
          ],
          [, , "242300\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456", , , , [7]],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "BS",
          1,
          "011",
          "1",
          ,
          ,
          "([3-8]\\d{6})$|1",
          "242$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "242",
          [, , , , , , , , , [-1]],
          [, , "242225\\d{4}", , , , "2422250123"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BT: [
          ,
          [, , "[17]\\d{7}|[2-8]\\d{6}", , , , , , , [7, 8], [6]],
          [, , "(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}", , , , "2345678", , , [7], [6]],
          [, , "(?:1[67]|77)\\d{6}", , , , "17123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BT",
          975,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})", "$1 $2", ["[2-7]"]],
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]
          ],
          [
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BW: [
          ,
          [, , "(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}", , , , , , , [7, 8, 10]],
          [
            ,
            ,
            "(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\d|7[013])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[03489]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\d{4}",
            ,
            ,
            ,
            "2401234",
            ,
            ,
            [7]
          ],
          [, , "(?:321|7(?:[1-7]\\d|8[0-4]))\\d{5}", , , , "71123456", , , [8]],
          [, , "(?:0800|800\\d)\\d{6}", , , , "0800012345", , , [10]],
          [, , "90\\d{5}", , , , "9012345", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "79(?:1(?:[01]\\d|2[0-7])|2[0-7]\\d)\\d{3}", , , , "79101234", , , [8]],
          "BW",
          267,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{5})", "$1 $2", ["90"]],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[24-6]|3[15-79]"]],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37]"]],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["0"]],
            [, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BY: [
          ,
          [
            ,
            ,
            "(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 11],
            [5]
          ],
          [
            ,
            ,
            "(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d\\d)|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}",
            ,
            ,
            ,
            "152450911",
            ,
            ,
            [9],
            [5, 6, 7]
          ],
          [, , "(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\d)\\d{6}", , , , "294911911", , , [9]],
          [, , "800\\d{3,7}|8(?:0[13]|20\\d)\\d{7}", , , , "8011234567"],
          [, , "(?:810|902)\\d{7}", , , , "9021234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "249\\d{6}", , , , "249123456", , , [9]],
          "BY",
          375,
          "810",
          "8",
          ,
          ,
          "0|80?",
          ,
          "8~10",
          ,
          [
            [, "(\\d{3})(\\d{3})", "$1 $2", ["800"], "8 $1"],
            [, "(\\d{3})(\\d{2})(\\d{2,4})", "$1 $2 $3", ["800"], "8 $1"],
            [
              ,
              "(\\d{4})(\\d{2})(\\d{3})",
              "$1 $2-$3",
              [
                "1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])",
                "1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"
              ],
              "8 0$1"
            ],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["1(?:[56]|7[467])|2[1-3]"], "8 0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-4]"], "8 0$1"],
            [, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[89]"], "8 $1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "800\\d{3,7}|(?:8(?:0[13]|10|20\\d)|902)\\d{7}"],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        BZ: [
          ,
          [, , "(?:0800\\d|[2-8])\\d{6}", , , , , , , [7, 11]],
          [
            ,
            ,
            "(?:2(?:[02]\\d|36|[68]0)|[3-58](?:[02]\\d|[68]0)|7(?:[02]\\d|32|[68]0))\\d{4}",
            ,
            ,
            ,
            "2221234",
            ,
            ,
            [7]
          ],
          [, , "6[0-35-7]\\d{5}", , , , "6221234", , , [7]],
          [, , "0800\\d{7}", , , , "08001234123", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "BZ",
          501,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]],
            [, "(\\d)(\\d{3})(\\d{4})(\\d{3})", "$1-$2-$3-$4", ["0"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CA: [
          ,
          [, , "(?:[2-8]\\d|90)\\d{8}|3\\d{6}", , , , , , , [7, 10]],
          [
            ,
            ,
            "(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",
            ,
            ,
            ,
            "5062345678",
            ,
            ,
            [10],
            [7]
          ],
          [
            ,
            ,
            "(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",
            ,
            ,
            ,
            "5062345678",
            ,
            ,
            [10],
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456", , , [10]],
          [, , "900[2-9]\\d{6}", , , , "9002123456", , , [10]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678",
            ,
            ,
            [10]
          ],
          [, , "600[2-9]\\d{6}", , , , "6002012345", , , [10]],
          "CA",
          1,
          "011",
          "1",
          ,
          ,
          "1",
          ,
          ,
          1,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "310\\d{4}", , , , "3101234", , , [7]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CC: [
          ,
          [
            ,
            ,
            "1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 12]
          ],
          [
            ,
            ,
            "8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",
            ,
            ,
            ,
            "891621234",
            ,
            ,
            [9],
            [8]
          ],
          [
            ,
            ,
            "4(?:79[01]|83[0-389]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-27-9])\\d{6}",
            ,
            ,
            ,
            "412345678",
            ,
            ,
            [9]
          ],
          [, , "180(?:0\\d{3}|2)\\d{3}", , , , "1800123456", , , [7, 10]],
          [, , "190[0-26]\\d{6}", , , , "1900123456", , , [10]],
          [, , "13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", , , , "1300123456", , , [6, 8, 10, 12]],
          [, , , , , , , , , [-1]],
          [, , "14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", , , , "147101234", , , [9]],
          "CC",
          61,
          "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011",
          "0",
          ,
          ,
          "([59]\\d{7})$|0",
          "8$1",
          "0011",
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CD: [
          ,
          [, , "[189]\\d{8}|[1-68]\\d{6}", , , , , , , [7, 9]],
          [, , "12\\d{7}|[1-6]\\d{6}", , , , "1234567"],
          [, , "88\\d{5}|(?:8[0-59]|9[017-9])\\d{7}", , , , "991234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CD",
          243,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
            [, "(\\d{2})(\\d{5})", "$1 $2", ["[1-6]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CF: [
          ,
          [, , "(?:[27]\\d{3}|8776)\\d{4}", , , , , , , [8]],
          [, , "2[12]\\d{6}", , , , "21612345"],
          [, , "7[024-7]\\d{6}", , , , "70012345"],
          [, , , , , , , , , [-1]],
          [, , "8776\\d{4}", , , , "87761234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CF",
          236,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[278]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CG: [
          ,
          [, , "222\\d{6}|(?:0\\d|80)\\d{7}", , , , , , , [9]],
          [, , "222[1-589]\\d{5}", , , , "222123456"],
          [, , "026(?:1[0-5]|6[6-9])\\d{4}|0(?:[14-6]\\d\\d|2(?:40|5[5-8]|6[07-9]))\\d{5}", , , , "061234567"],
          [, , , , , , , , , [-1]],
          [, , "80(?:0\\d\\d|120)\\d{4}", , , , "800123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CG",
          242,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CH: [
          ,
          [, , "8\\d{11}|[2-9]\\d{8}", , , , , , , [9, 12]],
          [, , "(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}", , , , "212345678", , , [9]],
          [, , "7[35-9]\\d{7}", , , , "781234567", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "90[016]\\d{6}", , , , "900123456", , , [9]],
          [, , "84[0248]\\d{6}", , , , "840123456", , , [9]],
          [, , "878\\d{6}", , , , "878123456", , , [9]],
          [, , , , , , , , , [-1]],
          "CH",
          41,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8[047]|90"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-79]|81"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["8"], "0$1"]
          ],
          ,
          [, , "74[0248]\\d{6}", , , , "740123456", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "5[18]\\d{7}", , , , "581234567", , , [9]],
          ,
          ,
          [, , "860\\d{9}", , , , "860123456789", , , [12]]
        ],
        CI: [
          ,
          [, , "[02]\\d{9}", , , , , , , [10]],
          [
            ,
            ,
            "2(?:[15]\\d{3}|7(?:2(?:0[23]|1[2357]|2[245]|3[45]|4[3-5])|3(?:06|1[69]|[2-6]7)))\\d{5}",
            ,
            ,
            ,
            "2123456789"
          ],
          [, , "0[157]\\d{8}", , , , "0123456789"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CI",
          225,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d)(\\d{5})", "$1 $2 $3 $4", ["2"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3 $4", ["0"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CK: [
          ,
          [, , "[2-578]\\d{4}", , , , , , , [5]],
          [, , "(?:2\\d|3[13-7]|4[1-5])\\d{3}", , , , "21234"],
          [, , "[578]\\d{4}", , , , "71234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CK",
          682,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{3})", "$1 $2", ["[2-578]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CL: [
          ,
          [, , "12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}", , , , , , , [9, 10, 11]],
          [
            ,
            ,
            "2(?:1982[0-6]|3314[05-9])\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\d\\d|3(?:[0346]\\d|1[0-35-9]|2[1-9]|5[0-24-9]|7[0-3])|600)|646[59])|80[1-9]\\d\\d|9(?:3(?:[0-57-9]\\d\\d|6(?:0[02-9]|[1-9]\\d))|6(?:[0-8]\\d\\d|9(?:[02-79]\\d|1[05-9]))|7[1-9]\\d\\d|9(?:[03-9]\\d\\d|1(?:[0235-9]\\d|4[0-24-9])|2(?:[0-79]\\d|8[0-46-9]))))\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\d{7}",
            ,
            ,
            ,
            "221234567",
            ,
            ,
            [9]
          ],
          [
            ,
            ,
            "2(?:1982[0-6]|3314[05-9])\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\d\\d|3(?:[0346]\\d|1[0-35-9]|2[1-9]|5[0-24-9]|7[0-3])|600)|646[59])|80[1-9]\\d\\d|9(?:3(?:[0-57-9]\\d\\d|6(?:0[02-9]|[1-9]\\d))|6(?:[0-8]\\d\\d|9(?:[02-79]\\d|1[05-9]))|7[1-9]\\d\\d|9(?:[03-9]\\d\\d|1(?:[0235-9]\\d|4[0-24-9])|2(?:[0-79]\\d|8[0-46-9]))))\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\d{7}",
            ,
            ,
            ,
            "221234567",
            ,
            ,
            [9]
          ],
          [, , "(?:123|8)00\\d{6}", , , , "800123456", , , [9, 11]],
          [, , , , , , , , , [-1]],
          [, , "600\\d{7,8}", , , , "6001234567", , , [10, 11]],
          [, , , , , , , , , [-1]],
          [, , "44\\d{7}", , , , "441234567", , , [9]],
          "CL",
          56,
          "(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0",
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [
            [, "(\\d{4})", "$1", ["1(?:[03-589]|21)|[29]0|78"]],
            [, "(\\d{5})(\\d{4})", "$1 $2", ["219", "2196"], "($1)"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[1-36]"], "($1)"],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{4})",
              "$1 $2 $3",
              ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],
              "($1)"
            ],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
            [, "(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]
          ],
          [
            [, "(\\d{5})(\\d{4})", "$1 $2", ["219", "2196"], "($1)"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[1-36]"], "($1)"],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{4})",
              "$1 $2 $3",
              ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"],
              "($1)"
            ],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
            [, "(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "600\\d{7,8}", , , , , , , [10, 11]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CM: [
          ,
          [, , "[26]\\d{8}|88\\d{6,7}", , , , , , , [8, 9]],
          [, , "2(?:22|33)\\d{6}", , , , "222123456", , , [9]],
          [, , "(?:24[23]|6[25-9]\\d)\\d{6}", , , , "671234567", , , [9]],
          [, , "88\\d{6,7}", , , , "88012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CM",
          237,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["88"]],
            [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]|88"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CN: [
          ,
          [
            ,
            ,
            "1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}",
            ,
            ,
            ,
            ,
            ,
            ,
            [7, 8, 9, 10, 11, 12],
            [5, 6]
          ],
          [
            ,
            ,
            "(?:10(?:[02-79]\\d\\d|[18](?:0[1-9]|[1-9]\\d))|21(?:[18](?:0[1-9]|[1-9]\\d)|[2-79]\\d\\d))\\d{5}|(?:43[35]|754)\\d{7,8}|8(?:078\\d{7}|51\\d{7,8})|(?:10|(?:2|85)1|43[35]|754)(?:100\\d\\d|95\\d{3,4})|(?:2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\d{7}|1(?:0(?:0\\d\\d(?:\\d{3})?|[1-9]\\d{5})|[1-9]\\d{6})|9(?:[0-46-9]\\d{6}|5\\d{3}(?:\\d(?:\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[02-8]\\d{6}|1(?:0(?:0\\d\\d(?:\\d{2})?|[1-9]\\d{4})|[1-9]\\d{5})|9(?:[0-46-9]\\d{5}|5\\d{3,5}))",
            ,
            ,
            ,
            "1012345678",
            ,
            ,
            [7, 8, 9, 10, 11],
            [5, 6]
          ],
          [
            ,
            ,
            "1740[0-5]\\d{6}|1(?:[38]\\d|4[57]|[59][0-35-9]|6[25-7]|7[0-35-8])\\d{8}",
            ,
            ,
            ,
            "13123456789",
            ,
            ,
            [11]
          ],
          [, , "(?:(?:10|21)8|8)00\\d{7}", , , , "8001234567", , , [10, 12]],
          [, , "16[08]\\d{5}", , , , "16812345", , , [8]],
          [
            ,
            ,
            "10(?:10\\d{4}|96\\d{3,4})|400\\d{7}|950\\d{7,8}|(?:2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}",
            ,
            ,
            ,
            "4001234567",
            ,
            ,
            [7, 8, 9, 10, 11],
            [5, 6]
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CN",
          86,
          "00|1(?:[12]\\d|79)\\d\\d00",
          "0",
          ,
          ,
          "(1(?:[12]\\d|79)\\d\\d)|0",
          ,
          "00",
          ,
          [
            [, "(\\d{5,6})", "$1", ["10|96"]],
            [
              ,
              "(\\d{2})(\\d{5,6})",
              "$1 $2",
              [
                "(?:10|2[0-57-9])[19]",
                "(?:10|2[0-57-9])(?:10|9[56])",
                "10(?:10|9[56])|2[0-57-9](?:100|9[56])"
              ],
              "0$1",
              "$CC $1"
            ],
            [
              ,
              "(\\d{3})(\\d{4})",
              "$1 $2",
              [
                "[1-9]",
                "1[1-9]|26|[3-9]|(?:10|2[0-57-9])(?:[0-8]|9[0-47-9])",
                "1(?:0(?:[0-8]|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[02-8]|1(?:0[1-9]|[1-9])|9[0-47-9])|6)|[3-9]"
              ]
            ],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["16[08]"]],
            [
              ,
              "(\\d{3})(\\d{5,6})",
              "$1 $2",
              [
                "3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]",
                "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]",
                "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])",
                "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"
              ],
              "0$1",
              "$CC $1"
            ],
            [
              ,
              "(\\d{4})(\\d{4})",
              "$1 $2",
              [
                "[1-9]",
                "1(?:0(?:[02-8]|1[1-9]|9[0-47-9])|[1-9])|2(?:[0-57-9](?:[0-8]|9[0-47-9])|6)|[3-9]",
                "1(?:0(?:[02-8]|1[1-9]|9[0-47-9])|[1-9])|26|3(?:[0268]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|8[1-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23][0-8])|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:33|85[23]9)[0-46-9]|(?:2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[0-8]|9[0-47-9])",
                "1(?:0[02-8]|[1-9])|2(?:[0-57-9][0-8]|6)|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23](?:[02-8]|1[1-9]|9[0-46-9]))|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:10|2[0-57-9])9[0-47-9]|(?:101|58|85[23]10)[1-9]|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[02-8]|1(?:0[1-9]|[1-9])|9[0-47-9])"
              ]
            ],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2 $3",
              [
                "10|2(?:[02-57-9]|1[1-9])",
                "10|2(?:[02-57-9]|1[1-9])",
                "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"
              ],
              "0$1",
              "$CC $1",
              1
            ],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{4})",
              "$1 $2 $3",
              [
                "3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"
              ],
              "0$1",
              "$CC $1",
              1
            ],
            [, "(\\d{3})(\\d{7,8})", "$1 $2", ["9"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", "$CC $1", 1],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", "$CC $1", 1],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"], , "$CC $1"],
            [, "(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1", , 1]
          ],
          [
            [
              ,
              "(\\d{2})(\\d{5,6})",
              "$1 $2",
              [
                "(?:10|2[0-57-9])[19]",
                "(?:10|2[0-57-9])(?:10|9[56])",
                "10(?:10|9[56])|2[0-57-9](?:100|9[56])"
              ],
              "0$1",
              "$CC $1"
            ],
            [
              ,
              "(\\d{3})(\\d{5,6})",
              "$1 $2",
              [
                "3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]",
                "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]",
                "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])",
                "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"
              ],
              "0$1",
              "$CC $1"
            ],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2 $3",
              [
                "10|2(?:[02-57-9]|1[1-9])",
                "10|2(?:[02-57-9]|1[1-9])",
                "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"
              ],
              "0$1",
              "$CC $1",
              1
            ],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{4})",
              "$1 $2 $3",
              [
                "3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"
              ],
              "0$1",
              "$CC $1",
              1
            ],
            [, "(\\d{3})(\\d{7,8})", "$1 $2", ["9"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", "$CC $1", 1],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", "$CC $1", 1],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"], , "$CC $1"],
            [, "(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1", , 1]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "(?:(?:10|21)8|[48])00\\d{7}|950\\d{7,8}", , , , , , , [10, 11, 12]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CO: [
          ,
          [, , "(?:60\\d\\d|9101)\\d{6}|(?:1\\d|3)\\d{9}", , , , , , , [10, 11], [7]],
          [
            ,
            ,
            "601055(?:[0-4]\\d|50)\\d\\d|6010(?:[0-4]\\d|5[0-4])\\d{4}|60[124-8][2-9]\\d{6}",
            ,
            ,
            ,
            "6012345678",
            ,
            ,
            [10],
            [7]
          ],
          [
            ,
            ,
            "3333(?:0(?:0\\d|1[0-5])|[4-9]\\d\\d)\\d{3}|(?:3(?:24[1-9]|3(?:00|3[0-24-9]))|9101)\\d{6}|3(?:0[0-5]|1\\d|2[0-3]|5[01]|70)\\d{7}",
            ,
            ,
            ,
            "3211234567",
            ,
            ,
            [10]
          ],
          [, , "1800\\d{7}", , , , "18001234567", , , [11]],
          [, , "19(?:0[01]|4[78])\\d{7}", , , , "19001234567", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CO",
          57,
          "00(?:4(?:[14]4|56)|[579])",
          "0",
          ,
          ,
          "0(4(?:[14]4|56)|[579])?",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{7})", "$1 $2", ["6"], "($1)", "0$CC $1"],
            [, "(\\d{3})(\\d{7})", "$1 $2", ["3[0-357]|91"], , "0$CC $1"],
            [, "(\\d)(\\d{3})(\\d{7})", "$1-$2-$3", ["1"], "0$1"]
          ],
          [
            [, "(\\d{3})(\\d{7})", "$1 $2", ["6"], "($1)", "0$CC $1"],
            [, "(\\d{3})(\\d{7})", "$1 $2", ["3[0-357]|91"], , "0$CC $1"],
            [, "(\\d)(\\d{3})(\\d{7})", "$1 $2 $3", ["1"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CR: [
          ,
          [, , "(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}", , , , , , , [8, 10]],
          [, , "210[7-9]\\d{4}|2(?:[024-7]\\d|1[1-9])\\d{5}", , , , "22123456", , , [8]],
          [, , "(?:3005\\d|6500[01])\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\d{6}", , , , "83123456", , , [8]],
          [, , "800\\d{7}", , , , "8001234567", , , [10]],
          [, , "90[059]\\d{7}", , , , "9001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:210[0-6]|4\\d{3}|5100)\\d{4}", , , , "40001234", , , [8]],
          "CR",
          506,
          "00",
          ,
          ,
          ,
          "(19(?:0[0-2468]|1[09]|20|66|77|99))",
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[3-9]"], , "$CC $1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[89]"], , "$CC $1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CU: [
          ,
          [, , "[27]\\d{6,7}|[34]\\d{5,7}|(?:5|8\\d\\d)\\d{7}", , , , , , , [6, 7, 8, 10], [4, 5]],
          [
            ,
            ,
            "(?:3[23]|48)\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\d)\\d{6}|(?:2[1-4]|4[1257]|7\\d)\\d{5,6}",
            ,
            ,
            ,
            "71234567",
            ,
            ,
            ,
            [4, 5]
          ],
          [, , "5\\d{7}", , , , "51234567", , , [8]],
          [, , "800\\d{7}", , , , "8001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , "807\\d{7}", , , , "8071234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CU",
          53,
          "119",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{4,6})", "$1 $2", ["2[1-4]|[34]"], "(0$1)"],
            [, "(\\d)(\\d{6,7})", "$1 $2", ["7"], "(0$1)"],
            [, "(\\d)(\\d{7})", "$1 $2", ["5"], "0$1"],
            [, "(\\d{3})(\\d{7})", "$1 $2", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CV: [
          ,
          [, , "(?:[2-59]\\d\\d|800)\\d{4}", , , , , , , [7]],
          [, , "2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}", , , , "2211234"],
          [, , "(?:36|5[1-389]|9\\d)\\d{5}", , , , "9911234"],
          [, , "800\\d{4}", , , , "8001234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:3[3-5]|4[356])\\d{5}", , , , "3401234"],
          "CV",
          238,
          "0",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2-589]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CW: [
          ,
          [, , "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}", , , , , , , [7, 8]],
          [
            ,
            ,
            "9(?:4(?:3[0-5]|4[14]|6\\d)|50\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\d|7[01]|8[57-9]))\\d{4}",
            ,
            ,
            ,
            "94351234"
          ],
          [, , "953[01]\\d{4}|9(?:5[12467]|6[5-9])\\d{5}", , , , "95181234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "60[0-2]\\d{4}", , , , "6001234", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "CW",
          599,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[3467]"]],
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["9[4-8]"]]
          ],
          ,
          [, , "955\\d{5}", , , , "95581234", , , [8]],
          1,
          "[69]",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CX: [
          ,
          [
            ,
            ,
            "1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 12]
          ],
          [
            ,
            ,
            "8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",
            ,
            ,
            ,
            "891641234",
            ,
            ,
            [9],
            [8]
          ],
          [
            ,
            ,
            "4(?:79[01]|83[0-389]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-27-9])\\d{6}",
            ,
            ,
            ,
            "412345678",
            ,
            ,
            [9]
          ],
          [, , "180(?:0\\d{3}|2)\\d{3}", , , , "1800123456", , , [7, 10]],
          [, , "190[0-26]\\d{6}", , , , "1900123456", , , [10]],
          [, , "13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", , , , "1300123456", , , [6, 8, 10, 12]],
          [, , , , , , , , , [-1]],
          [, , "14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", , , , "147101234", , , [9]],
          "CX",
          61,
          "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011",
          "0",
          ,
          ,
          "([59]\\d{7})$|0",
          "8$1",
          "0011",
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CY: [
          ,
          [, , "(?:[279]\\d|[58]0)\\d{6}", , , , , , , [8]],
          [, , "2[2-6]\\d{6}", , , , "22345678"],
          [, , "9(?:10|[4-79]\\d)\\d{5}", , , , "96123456"],
          [, , "800\\d{5}", , , , "80001234"],
          [, , "90[09]\\d{5}", , , , "90012345"],
          [, , "80[1-9]\\d{5}", , , , "80112345"],
          [, , "700\\d{5}", , , , "70012345"],
          [, , , , , , , , , [-1]],
          "CY",
          357,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{6})", "$1 $2", ["[257-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "(?:50|77)\\d{6}", , , , "77123456"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        CZ: [
          ,
          [, , "(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}", , , , , , , [9, 10, 11, 12]],
          [, , "(?:2\\d|3[1257-9]|4[16-9]|5[13-9])\\d{7}", , , , "212345678", , , [9]],
          [, , "(?:60[1-8]|7(?:0[2-5]|[2379]\\d))\\d{6}", , , , "601123456", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "9(?:0[05689]|76)\\d{6}", , , , "900123456", , , [9]],
          [, , "8[134]\\d{7}", , , , "811234567", , , [9]],
          [, , "70[01]\\d{6}", , , , "700123456", , , [9]],
          [, , "9[17]0\\d{6}", , , , "910123456", , , [9]],
          "CZ",
          420,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]|9[015-7]"]],
            [, "(\\d{2})(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["96"]],
            [, "(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]],
            [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "9(?:5\\d|7[2-4])\\d{6}", , , , "972123456", , , [9]],
          ,
          ,
          [, , "9(?:3\\d{9}|6\\d{7,10})", , , , "93123456789"]
        ],
        DE: [
          ,
          [
            ,
            ,
            "[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",
            ,
            ,
            ,
            ,
            ,
            ,
            [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
            [2, 3]
          ],
          [
            ,
            ,
            "32\\d{9,11}|49[1-6]\\d{10}|322\\d{6}|49[0-7]\\d{3,9}|(?:[34]0|[68]9)\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\d|[589][0-7]|6[0-8]|7[0-467]))\\d{3,12}",
            ,
            ,
            ,
            "30123456",
            ,
            ,
            [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
            [2, 3, 4]
          ],
          [, , "15[0-25-9]\\d{8}|1(?:6[023]|7\\d)\\d{7,8}", , , , "15123456789", , , [10, 11]],
          [, , "800\\d{7,12}", , , , "8001234567890", , , [10, 11, 12, 13, 14, 15]],
          [, , "(?:137[7-9]|900(?:[135]|9\\d))\\d{6}", , , , "9001234567", , , [10, 11]],
          [, , "180\\d{5,11}|13(?:7[1-6]\\d\\d|8)\\d{4}", , , , "18012345", , , [7, 8, 9, 10, 11, 12, 13, 14]],
          [, , "700\\d{8}", , , , "70012345678", , , [11]],
          [, , , , , , , , , [-1]],
          "DE",
          49,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3,13})", "$1 $2", ["3[02]|40|[68]9"], "0$1"],
            [
              ,
              "(\\d{3})(\\d{3,12})",
              "$1 $2",
              [
                "2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1",
                "2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"
              ],
              "0$1"
            ],
            [
              ,
              "(\\d{4})(\\d{2,11})",
              "$1 $2",
              [
                "[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]",
                "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"
              ],
              "0$1"
            ],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["138"], "0$1"],
            [, "(\\d{5})(\\d{2,10})", "$1 $2", ["3"], "0$1"],
            [, "(\\d{3})(\\d{5,11})", "$1 $2", ["181"], "0$1"],
            [, "(\\d{3})(\\d)(\\d{4,10})", "$1 $2 $3", ["1(?:3|80)|9"], "0$1"],
            [, "(\\d{3})(\\d{7,8})", "$1 $2", ["1[67]"], "0$1"],
            [, "(\\d{3})(\\d{7,12})", "$1 $2", ["8"], "0$1"],
            [, "(\\d{5})(\\d{6})", "$1 $2", ["185", "1850", "18500"], "0$1"],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
            [, "(\\d{4})(\\d{7})", "$1 $2", ["18[68]"], "0$1"],
            [, "(\\d{5})(\\d{6})", "$1 $2", ["15[0568]"], "0$1"],
            [, "(\\d{4})(\\d{7})", "$1 $2", ["15[1279]"], "0$1"],
            [, "(\\d{3})(\\d{8})", "$1 $2", ["18"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{7,8})", "$1 $2 $3", ["1(?:6[023]|7)"], "0$1"],
            [, "(\\d{4})(\\d{2})(\\d{7})", "$1 $2 $3", ["15[279]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{8})", "$1 $2 $3", ["15"], "0$1"]
          ],
          ,
          [, , "16(?:4\\d{1,10}|[89]\\d{1,11})", , , , "16412345", , , [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "18(?:1\\d{5,11}|[2-9]\\d{8})", , , , "18500123456", , , [8, 9, 10, 11, 12, 13, 14]],
          ,
          ,
          [
            ,
            ,
            "1(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\d{7,8}|15(?:(?:[03-68]00|113)\\d|2\\d55|7\\d99|9\\d33)\\d{7}",
            ,
            ,
            ,
            "177991234567",
            ,
            ,
            [12, 13]
          ]
        ],
        DJ: [
          ,
          [, , "(?:2\\d|77)\\d{6}", , , , , , , [8]],
          [, , "2(?:1[2-5]|7[45])\\d{5}", , , , "21360003"],
          [, , "77\\d{6}", , , , "77831001"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "DJ",
          253,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[27]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        DK: [
          ,
          [, , "[2-9]\\d{7}", , , , , , , [8]],
          [, , "(?:[2-7]\\d|8[126-9]|9[1-46-9])\\d{6}", , , , "32123456"],
          [, , "(?:[2-7]\\d|8[126-9]|9[1-46-9])\\d{6}", , , , "32123456"],
          [, , "80\\d{6}", , , , "80123456"],
          [, , "90\\d{6}", , , , "90123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "DK",
          45,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        DM: [
          ,
          [, , "(?:[58]\\d\\d|767|900)\\d{7}", , , , , , , [10], [7]],
          [, , "767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4])\\d{4}", , , , "7674201234", , , , [7]],
          [, , "767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-8]|70[1-6])\\d{4}", , , , "7672251234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "DM",
          1,
          "011",
          "1",
          ,
          ,
          "([2-7]\\d{6})$|1",
          "767$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "767",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        DO: [
          ,
          [, , "(?:[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "8(?:[04]9[2-9]\\d\\d|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d\\d|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\d{4}",
            ,
            ,
            ,
            "8092345678",
            ,
            ,
            ,
            [7]
          ],
          [, , "8[024]9[2-9]\\d{6}", , , , "8092345678", , , , [7]],
          [, , "8(?:00(?:14|[2-9]\\d)|(?:33|44|55|66|77|88)[2-9]\\d)\\d{5}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "DO",
          1,
          "011",
          "1",
          ,
          ,
          "1",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "8001|8[024]9",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        DZ: [
          ,
          [, , "(?:[1-4]|[5-79]\\d|80)\\d{7}", , , , , , , [8, 9]],
          [, , "9619\\d{5}|(?:1\\d|2[013-79]|3[0-8]|4[013-689])\\d{6}", , , , "12345678"],
          [, , "(?:5(?:4[0-29]|5\\d|6[0-2])|6(?:[569]\\d|7[0-6])|7[7-9]\\d)\\d{6}", , , , "551234567", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "80[3-689]1\\d{5}", , , , "808123456", , , [9]],
          [, , "80[12]1\\d{5}", , , , "801123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , "98[23]\\d{6}", , , , "983123456", , , [9]],
          "DZ",
          213,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-4]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-8]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        EC: [
          ,
          [, , "1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}", , , , , , , [8, 9, 10, 11], [7]],
          [, , "[2-7][2-7]\\d{6}", , , , "22123456", , , [8], [7]],
          [, , "964[0-2]\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\d)\\d{6}", , , , "991234567", , , [9]],
          [, , "1800\\d{7}|1[78]00\\d{6}", , , , "18001234567", , , [10, 11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "[2-7]890\\d{4}", , , , "28901234", , , [8]],
          "EC",
          593,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[2-7]"]],
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2-$3", ["[2-7]"], "(0$1)"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]
          ],
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-7]"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        EE: [
          ,
          [, , "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}", , , , , , , [7, 8, 10]],
          [, , "(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}", , , , "3212345", , , [7]],
          [
            ,
            ,
            "(?:5\\d{5}|8(?:1(?:0(?:000|[3-9]\\d\\d)|(?:1(?:0[236]|1\\d)|(?:2[0-59]|[3-79]\\d)\\d)\\d)|2(?:0(?:000|(?:19|[2-7]\\d)\\d)|(?:(?:[124-6]\\d|3[5-9])\\d|7(?:[3679]\\d|8[13-9])|8(?:[2-6]\\d|7[01]))\\d)|[349]\\d{4}))\\d\\d|5(?:(?:[02]\\d|5[0-478])\\d|1(?:[0-8]\\d|95)|6(?:4[0-4]|5[1-589]))\\d{3}",
            ,
            ,
            ,
            "51234567",
            ,
            ,
            [7, 8]
          ],
          [, , "800(?:(?:0\\d\\d|1)\\d|[2-9])\\d{3}", , , , "80012345"],
          [, , "(?:40\\d\\d|900)\\d{4}", , , , "9001234", , , [7, 8]],
          [, , , , , , , , , [-1]],
          [, , "70[0-2]\\d{5}", , , , "70012345", , , [8]],
          [, , , , , , , , , [-1]],
          "EE",
          372,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [
              ,
              "(\\d{3})(\\d{4})",
              "$1 $2",
              [
                "[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88",
                "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"
              ]
            ],
            [, "(\\d{4})(\\d{3,4})", "$1 $2", ["[45]|8(?:00|[1-49])", "[45]|8(?:00[1-9]|[1-49])"]],
            [, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["7"]],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "800[2-9]\\d{3}", , , , , , , [7]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        EG: [
          ,
          [, , "[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}", , , , , , , [8, 9, 10], [6, 7]],
          [
            ,
            ,
            "13[23]\\d{6}|(?:15|57)\\d{6,7}|(?:2[2-4]|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\d{7}",
            ,
            ,
            ,
            "234567890",
            ,
            ,
            [8, 9],
            [6, 7]
          ],
          [, , "1[0-25]\\d{8}", , , , "1001234567", , , [10]],
          [, , "800\\d{7}", , , , "8001234567", , , [10]],
          [, , "900\\d{7}", , , , "9001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "EG",
          20,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{7,8})", "$1 $2", ["[23]"], "0$1"],
            [, "(\\d{2})(\\d{6,7})", "$1 $2", ["1[35]|[4-6]|8[2468]|9[235-7]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[189]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        EH: [
          ,
          [, , "[5-8]\\d{8}", , , , , , , [9]],
          [, , "528[89]\\d{5}", , , , "528812345"],
          [, , "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}", , , , "650123456"],
          [, , "80\\d{7}", , , , "801234567"],
          [, , "89\\d{7}", , , , "891234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "592(?:4[0-2]|93)\\d{4}", , , , "592401234"],
          "EH",
          212,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "528[89]",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ER: [
          ,
          [, , "[178]\\d{6}", , , , , , , [7], [6]],
          [, , "(?:1(?:1[12568]|[24]0|55|6[146])|8\\d\\d)\\d{4}", , , , "8370362", , , , [6]],
          [, , "(?:17[1-3]|7\\d\\d)\\d{4}", , , , "7123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "ER",
          291,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[178]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ES: [
          ,
          [, , "[5-9]\\d{8}", , , , , , , [9]],
          [
            ,
            ,
            "96906(?:0[0-8]|1[1-9]|[2-9]\\d)\\d\\d|9(?:69(?:0[0-57-9]|[1-9]\\d)|73(?:[0-8]\\d|9[1-9]))\\d{4}|(?:8(?:[1356]\\d|[28][0-8]|[47][1-9])|9(?:[135]\\d|[268][0-8]|4[1-9]|7[124-9]))\\d{6}",
            ,
            ,
            ,
            "810123456"
          ],
          [, , "(?:590[16]00\\d|9(?:6906(?:09|10)|7390\\d\\d))\\d\\d|(?:6\\d|7[1-48])\\d{7}", , , , "612345678"],
          [, , "[89]00\\d{6}", , , , "800123456"],
          [, , "80[367]\\d{6}", , , , "803123456"],
          [, , "90[12]\\d{6}", , , , "901123456"],
          [, , "70\\d{7}", , , , "701234567"],
          [, , , , , , , , , [-1]],
          "ES",
          34,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})", "$1", ["905"]],
            [, "(\\d{6})", "$1", ["[79]9"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]
          ],
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "51\\d{7}", , , , "511234567"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ET: [
          ,
          [, , "(?:11|[2-579]\\d)\\d{7}", , , , , , , [9], [7]],
          [
            ,
            ,
            "11667[01]\\d{3}|(?:11(?:1(?:1[124]|2[2-7]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:1[578]|2[69]|39|4[5-7]|5[0-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}",
            ,
            ,
            ,
            "111112345",
            ,
            ,
            ,
            [7]
          ],
          [, , "7001\\d{5}|(?:7(?:0[1-9]|1[01]|77|86|99)|9\\d\\d)\\d{6}", , , , "911234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "ET",
          251,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-579]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        FI: [
          ,
          [
            ,
            ,
            "[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 7, 8, 9, 10, 11, 12]
          ],
          [, , "(?:1[3-79][1-8]|[235689][1-8]\\d)\\d{2,6}", , , , "131234567", , , [5, 6, 7, 8, 9]],
          [, , "4946\\d{2,6}|(?:4[0-8]|50)\\d{4,8}", , , , "412345678", , , [6, 7, 8, 9, 10]],
          [, , "800\\d{4,6}", , , , "800123456", , , [7, 8, 9]],
          [, , "[67]00\\d{5,6}", , , , "600123456", , , [8, 9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "FI",
          358,
          "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))",
          "0",
          ,
          ,
          "0",
          ,
          "00",
          ,
          [
            [, "(\\d{5})", "$1", ["75[12]"], "0$1"],
            [, "(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"],
            [, "(\\d{6})", "$1", ["11"]],
            [, "(\\d{3})(\\d{3,7})", "$1 $2", ["[12]00|[368]|70[07-9]"], "0$1"],
            [, "(\\d{2})(\\d{4,8})", "$1 $2", ["[1245]|7[135]"], "0$1"],
            [, "(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"]
          ],
          [
            [, "(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"],
            [, "(\\d{3})(\\d{3,7})", "$1 $2", ["[12]00|[368]|70[07-9]"], "0$1"],
            [, "(\\d{2})(\\d{4,8})", "$1 $2", ["[1245]|7[135]"], "0$1"],
            [, "(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          1,
          "1[03-79]|[2-9]",
          [
            ,
            ,
            "20(?:2[023]|9[89])\\d{1,6}|(?:60[12]\\d|7099)\\d{4,5}|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:[1-3]00|7(?:0[1-5]\\d\\d|5[03-9]))\\d{3,7}"
          ],
          [
            ,
            ,
            "20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}",
            ,
            ,
            ,
            "10112345"
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        FJ: [
          ,
          [, , "45\\d{5}|(?:0800\\d|[235-9])\\d{6}", , , , , , , [7, 11]],
          [, , "603\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\d{5}", , , , "3212345", , , [7]],
          [, , "(?:[279]\\d|45|5[01568]|8[034679])\\d{5}", , , , "7012345", , , [7]],
          [, , "0800\\d{7}", , , , "08001234567", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "FJ",
          679,
          "0(?:0|52)",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[235-9]|45"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        FK: [
          ,
          [, , "[2-7]\\d{4}", , , , , , , [5]],
          [, , "[2-47]\\d{4}", , , , "31234"],
          [, , "[56]\\d{4}", , , , "51234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "FK",
          500,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        FM: [
          ,
          [, , "(?:[39]\\d\\d|820)\\d{4}", , , , , , , [7]],
          [
            ,
            ,
            "31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\d)\\d)\\d{3}",
            ,
            ,
            ,
            "3201234"
          ],
          [
            ,
            ,
            "31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\d)\\d)\\d{3}",
            ,
            ,
            ,
            "3501234"
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "FM",
          691,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[389]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        FO: [
          ,
          [, , "[2-9]\\d{5}", , , , , , , [6]],
          [, , "(?:20|[34]\\d|8[19])\\d{4}", , , , "201234"],
          [, , "(?:[27][1-9]|5\\d|9[16])\\d{4}", , , , "211234"],
          [, , "80[257-9]\\d{3}", , , , "802123"],
          [, , "90(?:[13-5][15-7]|2[125-7]|9\\d)\\d\\d", , , , "901123"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:6[0-36]|88)\\d{4}", , , , "601234"],
          "FO",
          298,
          "00",
          ,
          ,
          ,
          "(10(?:01|[12]0|88))",
          ,
          ,
          ,
          [[, "(\\d{6})", "$1", ["[2-9]"], , "$CC $1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        FR: [
          ,
          [, , "[1-9]\\d{8}", , , , , , , [9]],
          [, , "(?:[1-35]\\d|4[1-9])\\d{7}", , , , "123456789"],
          [, , "(?:6(?:[0-24-8]\\d|3[0-8]|9[589])|7[3-9]\\d)\\d{6}", , , , "612345678"],
          [, , "80[0-5]\\d{6}", , , , "801234567"],
          [
            ,
            ,
            "836(?:0[0-36-9]|[1-9]\\d)\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\d|8[0-35-9])\\d{6}",
            ,
            ,
            ,
            "891123456"
          ],
          [, , "8(?:1[01]|2[0156]|4[02]|84)\\d{6}", , , , "884012345"],
          [, , , , , , , , , [-1]],
          [, , "9\\d{8}", , , , "912345678"],
          "FR",
          33,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})", "$1", ["10"]],
            [, "(\\d{3})(\\d{3})", "$1 $2", ["1"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"],
            [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]
          ],
          [
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"],
            [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "80[6-9]\\d{6}", , , , "806123456"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GA: [
          ,
          [, , "(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}", , , , , , , [7, 8]],
          [, , "[01]1\\d{6}", , , , "01441234", , , [8]],
          [, , "(?:(?:0[2-7]|7[467])\\d|6(?:0[0-4]|10|[256]\\d))\\d{5}|[2-7]\\d{6}", , , , "06031234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GA",
          241,
          "00",
          ,
          ,
          ,
          "0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})",
          "$1",
          ,
          ,
          [
            [, "(\\d)(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["11|[67]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GB: [
          ,
          [, , "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}", , , , , , , [7, 9, 10], [4, 5, 6, 8]],
          [
            ,
            ,
            "(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0235])|4(?:[0-5]\\d\\d|69[7-9]|70[0-579])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d\\d|1(?:[0-7]\\d\\d|8(?:[02]\\d|1[0-246-9])))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",
            ,
            ,
            ,
            "1212345678",
            ,
            ,
            [9, 10],
            [4, 5, 6, 7, 8]
          ],
          [
            ,
            ,
            "7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",
            ,
            ,
            ,
            "7400123456",
            ,
            ,
            [10]
          ],
          [, , "80[08]\\d{7}|800\\d{6}|8001111", , , , "8001234567"],
          [, , "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d", , , , "9012345678", , , [7, 10]],
          [, , , , , , , , , [-1]],
          [, , "70\\d{8}", , , , "7012345678", , , [10]],
          [, , "56\\d{8}", , , , "5612345678", , , [10]],
          "GB",
          44,
          "00",
          "0",
          " x",
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["800", "8001", "80011", "800111", "8001111"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["845", "8454", "84546", "845464"], "0$1"],
            [, "(\\d{3})(\\d{6})", "$1 $2", ["800"], "0$1"],
            [
              ,
              "(\\d{5})(\\d{4,5})",
              "$1 $2",
              [
                "1(?:38|5[23]|69|76|94)",
                "1(?:(?:38|69)7|5(?:24|39)|768|946)",
                "1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"
              ],
              "0$1"
            ],
            [, "(\\d{4})(\\d{5,6})", "$1 $2", ["1(?:[2-69][02-9]|[78])"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2 $3",
              ["[25]|7(?:0|6[02-9])", "[25]|7(?:0|6(?:[03-9]|2[356]))"],
              "0$1"
            ],
            [, "(\\d{4})(\\d{6})", "$1 $2", ["7"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1389]"], "0$1"]
          ],
          ,
          [
            ,
            ,
            "76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",
            ,
            ,
            ,
            "7640123456",
            ,
            ,
            [10]
          ],
          1,
          ,
          [, , , , , , , , , [-1]],
          [, , "(?:3[0347]|55)\\d{8}", , , , "5512345678", , , [10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GD: [
          ,
          [, , "(?:473|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}",
            ,
            ,
            ,
            "4732691234",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\d{4}",
            ,
            ,
            ,
            "4734031234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "GD",
          1,
          "011",
          "1",
          ,
          ,
          "([2-9]\\d{6})$|1",
          "473$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "473",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GE: [
          ,
          [, , "(?:[3-57]\\d\\d|800)\\d{6}", , , , , , , [9], [6, 7]],
          [
            ,
            ,
            "(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}",
            ,
            ,
            ,
            "322123456",
            ,
            ,
            ,
            [6, 7]
          ],
          [
            ,
            ,
            "5(?:(?:(?:0555|1(?:[17]77|555))[5-9]|757(?:7[7-9]|8[01]))\\d|22252[0-4])\\d\\d|5(?:00(?:0\\d|5[05])|11(?:00|[124]\\d|3[01])|(?:520|909)0|75(?:00|[57]5)|8(?:0(?:[01]\\d|2[0-4])|58[89]|8(?:55|88)))\\d{4}|(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\d{6}|5(?:0(?:070|505)|1(?:0[01]0|1(?:07|33|51))|2(?:0[02]0|2[25]2)|3(?:0[03]0|3[35]3)|(?:40[04]|900)0|5222)[0-4]\\d{3}",
            ,
            ,
            ,
            "555123456"
          ],
          [, , "800\\d{6}", , , , "800123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "70[67]\\d{6}", , , , "706123456"],
          "GE",
          995,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["32"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[57]"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[348]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "70[67]\\d{6}"],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GF: [
          ,
          [, , "(?:[56]94|80\\d|976)\\d{6}", , , , , , , [9]],
          [, , "594(?:[0239]\\d|1[0-2]|4[03-9]|5[6-9]|6[0-3]|80)\\d{4}", , , , "594101234"],
          [, , "694(?:[0-249]\\d|3[0-8])\\d{4}", , , , "694201234"],
          [, , "80[0-5]\\d{6}", , , , "800012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "976\\d{6}", , , , "976012345"],
          "GF",
          594,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GG: [
          ,
          [, , "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?", , , , , , , [7, 9, 10], [6]],
          [, , "1481[25-9]\\d{5}", , , , "1481256789", , , [10], [6]],
          [, , "7(?:(?:781|839)\\d|911[17])\\d{5}", , , , "7781123456", , , [10]],
          [, , "80[08]\\d{7}|800\\d{6}|8001111", , , , "8001234567"],
          [, , "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d", , , , "9012345678", , , [7, 10]],
          [, , , , , , , , , [-1]],
          [, , "70\\d{8}", , , , "7012345678", , , [10]],
          [, , "56\\d{8}", , , , "5612345678", , , [10]],
          "GG",
          44,
          "00",
          "0",
          ,
          ,
          "([25-9]\\d{5})$|0",
          "1481$1",
          ,
          ,
          ,
          ,
          [
            ,
            ,
            "76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",
            ,
            ,
            ,
            "7640123456",
            ,
            ,
            [10]
          ],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "(?:3[0347]|55)\\d{8}", , , , "5512345678", , , [10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GH: [
          ,
          [, , "(?:[235]\\d{3}|800)\\d{5}", , , , , , , [8, 9], [7]],
          [
            ,
            ,
            "3082[0-5]\\d{4}|3(?:0(?:[237]\\d|8[01])|[167](?:2[0-6]|7\\d|80)|2(?:2[0-5]|7\\d|80)|3(?:2[0-3]|7\\d|80)|4(?:2[013-9]|3[01]|7\\d|80)|5(?:2[0-7]|7\\d|80)|8(?:2[0-2]|7\\d|80)|9(?:[28]0|7\\d))\\d{5}",
            ,
            ,
            ,
            "302345678",
            ,
            ,
            [9],
            [7]
          ],
          [, , "(?:2(?:[0346-9]\\d|5[67])|5(?:[03-7]\\d|9[1-9]))\\d{6}", , , , "231234567", , , [9]],
          [, , "800\\d{5}", , , , "80012345", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GH",
          233,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[237]|8[0-2]"]],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]
          ],
          [
            [, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "800\\d{5}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GI: [
          ,
          [, , "(?:[25]\\d\\d|606)\\d{5}", , , , , , , [8]],
          [, , "2190[0-2]\\d{3}|2(?:0(?:0\\d|20)|16[24-9]|2[2-5]\\d)\\d{4}", , , , "20012345"],
          [, , "525(?:0\\d|1[0-4])\\d{3}|(?:5[146-8]\\d|606)\\d{5}", , , , "57123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GI",
          350,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{5})", "$1 $2", ["2"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GL: [
          ,
          [, , "(?:19|[2-689]\\d|70)\\d{4}", , , , , , , [6]],
          [, , "(?:19|3[1-7]|6[14689]|70|8[14-79]|9\\d)\\d{4}", , , , "321000"],
          [, , "[245]\\d{5}", , , , "221234"],
          [, , "80\\d{4}", , , , "801234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "3[89]\\d{4}", , , , "381234"],
          "GL",
          299,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["19|[2-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GM: [
          ,
          [, , "[2-9]\\d{6}", , , , , , , [7]],
          [
            ,
            ,
            "(?:4(?:[23]\\d\\d|4(?:1[024679]|[6-9]\\d))|5(?:5(?:3\\d|4[0-7])|6[67]\\d|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}",
            ,
            ,
            ,
            "5661234"
          ],
          [, , "(?:[23679]\\d|5[0-389])\\d{5}", , , , "3012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GM",
          220,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GN: [
          ,
          [, , "722\\d{6}|(?:3|6\\d)\\d{7}", , , , , , , [8, 9]],
          [
            ,
            ,
            "3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\d\\d)\\d{4}",
            ,
            ,
            ,
            "30241234",
            ,
            ,
            [8]
          ],
          [, , "6[0-356]\\d{7}", , , , "601123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "722\\d{6}", , , , "722123456", , , [9]],
          "GN",
          224,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["3"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[67]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GP: [
          ,
          [, , "(?:590|(?:69|80)\\d|976)\\d{6}", , , , , , , [9]],
          [
            ,
            ,
            "590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-489]|7[08]|8[0-689]|9\\d)\\d{4}",
            ,
            ,
            ,
            "590201234"
          ],
          [, , "69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}", , , , "690001234"],
          [, , "80[0-5]\\d{6}", , , , "800012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "976[01]\\d{5}", , , , "976012345"],
          "GP",
          590,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          1,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GQ: [
          ,
          [, , "222\\d{6}|(?:3\\d|55|[89]0)\\d{7}", , , , , , , [9]],
          [, , "33[0-24-9]\\d[46]\\d{4}|3(?:33|5\\d)\\d[7-9]\\d{4}", , , , "333091234"],
          [, , "(?:222|55\\d)\\d{6}", , , , "222123456"],
          [, , "80\\d[1-9]\\d{5}", , , , "800123456"],
          [, , "90\\d[1-9]\\d{5}", , , , "900123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GQ",
          240,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235]"]],
            [, "(\\d{3})(\\d{6})", "$1 $2", ["[89]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GR: [
          ,
          [, , "5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}", , , , , , , [10, 11, 12]],
          [
            ,
            ,
            "2(?:1\\d\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}",
            ,
            ,
            ,
            "2123456789",
            ,
            ,
            [10]
          ],
          [, , "68[57-9]\\d{7}|(?:69|94)\\d{8}", , , , "6912345678", , , [10]],
          [, , "800\\d{7,9}", , , , "8001234567"],
          [, , "90[19]\\d{7}", , , , "9091234567", , , [10]],
          [, , "8(?:0[16]|12|[27]5|50)\\d{7}", , , , "8011234567", , , [10]],
          [, , "70\\d{8}", , , , "7012345678", , , [10]],
          [, , , , , , , , , [-1]],
          "GR",
          30,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["21|7"]],
            [, "(\\d{4})(\\d{6})", "$1 $2", ["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2689]"]],
            [, "(\\d{3})(\\d{3,4})(\\d{5})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "5005000\\d{3}", , , , "5005000123", , , [10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GT: [
          ,
          [, , "(?:1\\d{3}|[2-7])\\d{7}", , , , , , , [8, 11]],
          [, , "[267][2-9]\\d{6}", , , , "22456789", , , [8]],
          [, , "[3-5]\\d{7}", , , , "51234567", , , [8]],
          [, , "18[01]\\d{8}", , , , "18001112222", , , [11]],
          [, , "19\\d{9}", , , , "19001112222", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GT",
          502,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GU: [
          ,
          [, , "(?:[58]\\d\\d|671|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-46-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}",
            ,
            ,
            ,
            "6713001234",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[02-46-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}",
            ,
            ,
            ,
            "6713001234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "GU",
          1,
          "011",
          "1",
          ,
          ,
          "([3-9]\\d{6})$|1",
          "671$1",
          ,
          1,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "671",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GW: [
          ,
          [, , "[49]\\d{8}|4\\d{6}", , , , , , , [7, 9]],
          [, , "443\\d{6}", , , , "443201234", , , [9]],
          [, , "9(?:5\\d|6[569]|77)\\d{6}", , , , "955012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "40\\d{5}", , , , "4012345", , , [7]],
          "GW",
          245,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["40"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        GY: [
          ,
          [, , "9008\\d{3}|(?:[2-467]\\d\\d|862)\\d{4}", , , , , , , [7]],
          [
            ,
            ,
            "(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-24-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|77[1-57])\\d{4}",
            ,
            ,
            ,
            "2201234"
          ],
          [, , "(?:6\\d\\d|70[0-35-7])\\d{4}", , , , "6091234"],
          [, , "(?:289|862)\\d{4}", , , , "2891234"],
          [, , "9008\\d{3}", , , , "9008123"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "GY",
          592,
          "001",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-46-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        HK: [
          ,
          [, , "8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}", , , , , , , [5, 6, 7, 8, 9, 11]],
          [
            ,
            ,
            "(?:2(?:[13-9]\\d|2[013-9])\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\d|8(?:[45][0-8]|6[01]|9\\d))|58(?:0[1-8]|1[2-9]))\\d{4}",
            ,
            ,
            ,
            "21234567",
            ,
            ,
            [8]
          ],
          [
            ,
            ,
            "(?:4(?:44[5-9]|6(?:0[0-7]|1[0-6]|4[0-57-9]|6[0-4]|7[0-8]))|573[0-6]|6(?:26[013-8]|66[0-3])|70(?:7[1-5]|8[0-4])|848[015-9]|9(?:29[013-9]|59[0-4]))\\d{4}|(?:4(?:4[01]|6[2358])|5(?:[1-59][0-46-9]|6[0-4689]|7[0-246-9])|6(?:0[1-9]|[13-59]\\d|[268][0-57-9]|7[0-79])|84[09]|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\d))\\d{5}",
            ,
            ,
            ,
            "51234567",
            ,
            ,
            [8]
          ],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "900(?:[0-24-9]\\d{7}|3\\d{1,4})", , , , "90012345678", , , [5, 6, 7, 8, 11]],
          [, , , , , , , , , [-1]],
          [, , "8(?:1[0-4679]\\d|2(?:[0-36]\\d|7[0-4])|3(?:[034]\\d|2[09]|70))\\d{4}", , , , "81123456", , , [8]],
          [, , , , , , , , , [-1]],
          "HK",
          852,
          "00(?:30|5[09]|[126-9]?)",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{2,5})", "$1 $2", ["900", "9003"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
            [, "(\\d{3})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
          ],
          ,
          [
            ,
            ,
            "7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[0136])|2(?:[02389]\\d|1[18]|7[27-9])|3(?:[0-38]\\d|7[0-369]|9[2357-9])|47\\d|5(?:[178]\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\d)|7(?:[27]\\d|8[7-9])|8(?:[23689]\\d|7[1-9])|9(?:[025]\\d|6[0-246-8]|7[0-36-9]|8[238]))\\d{4}",
            ,
            ,
            ,
            "71123456",
            ,
            ,
            [8]
          ],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "30(?:0[1-9]|[15-7]\\d|2[047]|89)\\d{4}", , , , "30161234", , , [8]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        HN: [
          ,
          [, , "8\\d{10}|[237-9]\\d{7}", , , , , , , [8, 11]],
          [
            ,
            ,
            "2(?:2(?:0[0-59]|1[1-9]|[23]\\d|4[02-6]|5[57]|6[245]|7[0135689]|8[01346-9]|9[0-2])|4(?:0[578]|2[3-59]|3[13-9]|4[0-68]|5[1-3589])|5(?:0[2357-9]|1[1-356]|4[03-5]|5\\d|6[014-69]|7[04]|80)|6(?:[056]\\d|17|2[067]|3[047]|4[0-378]|[78][0-8]|9[01])|7(?:0[5-79]|6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\d{4}",
            ,
            ,
            ,
            "22123456",
            ,
            ,
            [8]
          ],
          [, , "[37-9]\\d{7}", , , , "91234567", , , [8]],
          [, , "8002\\d{7}", , , , "80021234567", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "HN",
          504,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]]
          ],
          [[, "(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "8002\\d{7}", , , , , , , [11]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        HR: [
          ,
          [, , "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}", , , , , , , [6, 7, 8, 9]],
          [, , "1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}", , , , "12345678", , , [8, 9], [6, 7]],
          [
            ,
            ,
            "98\\d{6,7}|975(?:1\\d|77|9[67])\\d{4}|9(?:0[1-9]|[1259]\\d|7[0679])\\d{6}",
            ,
            ,
            ,
            "921234567",
            ,
            ,
            [8, 9]
          ],
          [, , "80[01]\\d{4,6}", , , , "800123456", , , [7, 8, 9]],
          [, , "6[01459]\\d{6}|6[01]\\d{4,5}", , , , "611234", , , [6, 7, 8]],
          [, , , , , , , , , [-1]],
          [, , "7[45]\\d{6}", , , , "74123456", , , [8]],
          [, , , , , , , , , [-1]],
          "HR",
          385,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["6[01]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["8"], "0$1"],
            [, "(\\d)(\\d{4})(\\d{3})", "$1 $2 $3", ["1"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[67]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-5]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "62\\d{6,7}|72\\d{6}", , , , "62123456", , , [8, 9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        HT: [
          ,
          [, , "(?:[2-489]\\d|55)\\d{6}", , , , , , , [8]],
          [, , "2(?:2\\d|5[1-5]|81|9[149])\\d{5}", , , , "22453300"],
          [, , "(?:[34]\\d|55)\\d{6}", , , , "34101234"],
          [, , "8\\d{7}", , , , "80012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "9(?:[67][0-4]|8[0-3589]|9\\d)\\d{5}", , , , "98901234"],
          "HT",
          509,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[2-589]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        HU: [
          ,
          [, , "[235-7]\\d{8}|[1-9]\\d{7}", , , , , , , [8, 9], [6, 7]],
          [
            ,
            ,
            "(?:1\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\d{6}",
            ,
            ,
            ,
            "12345678",
            ,
            ,
            [8],
            [6, 7]
          ],
          [, , "(?:[257]0|3[01])\\d{7}", , , , "201234567", , , [9]],
          [, , "(?:[48]0\\d|680[29])\\d{5}", , , , "80123456"],
          [, , "9[01]\\d{6}", , , , "90123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "21\\d{7}", , , , "211234567", , , [9]],
          "HU",
          36,
          "00",
          "06",
          ,
          ,
          "06",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "(06 $1)"],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{3})",
              "$1 $2 $3",
              ["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],
              "(06 $1)"
            ],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "06 $1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "(?:[48]0\\d|680[29])\\d{5}"],
          [, , "38\\d{7}", , , , "381234567", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ID: [
          ,
          [
            ,
            ,
            "(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [7, 8, 9, 10, 11, 12, 13],
            [5, 6]
          ],
          [
            ,
            ,
            "2[124]\\d{7,8}|619\\d{8}|2(?:1(?:14|500)|2\\d{3})\\d{3}|61\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}",
            ,
            ,
            ,
            "218350123",
            ,
            ,
            [7, 8, 9, 10, 11],
            [5, 6]
          ],
          [, , "8[1-35-9]\\d{7,10}", , , , "812345678", , , [9, 10, 11, 12]],
          [
            ,
            ,
            "00[17]803\\d{7}|(?:177\\d|800)\\d{5,7}|001803\\d{6}",
            ,
            ,
            ,
            "8001234567",
            ,
            ,
            [8, 9, 10, 11, 12, 13]
          ],
          [, , "809\\d{7}", , , , "8091234567", , , [10]],
          [, , "804\\d{7}", , , , "8041234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "ID",
          62,
          "00[89]",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]],
            [, "(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"],
            [, "(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"],
            [, "(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"],
            [, "(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"],
            [, "(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"],
            [, "(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"],
            [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["001"]],
            [, "(\\d{2})(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]]
          ],
          [
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]],
            [, "(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"],
            [, "(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"],
            [, "(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"],
            [, "(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"],
            [, "(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"],
            [, "(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"],
            [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "001803\\d{6,7}|(?:007803\\d|8071)\\d{6}", , , , , , , [10, 12, 13]],
          [, , "(?:1500|8071\\d{3})\\d{3}", , , , "8071123456", , , [7, 10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        IE: [
          ,
          [, , "(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}", , , , , , , [7, 8, 9, 10], [5, 6]],
          [
            ,
            ,
            "(?:1\\d|21)\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\d|7)|5(?:0[45]|1\\d|8)|6(?:1\\d|[237-9])|9(?:1\\d|[35-9]))\\d{5}|(?:23|4(?:[1-469]|8\\d)|5[23679]|6[4-6]|7[14]|9[04])\\d{7}",
            ,
            ,
            ,
            "2212345",
            ,
            ,
            ,
            [5, 6]
          ],
          [, , "8(?:22|[35-9]\\d)\\d{6}", , , , "850123456", , , [9]],
          [, , "1800\\d{6}", , , , "1800123456", , , [10]],
          [, , "15(?:1[2-8]|[2-8]0|9[089])\\d{6}", , , , "1520123456", , , [10]],
          [, , "18[59]0\\d{6}", , , , "1850123456", , , [10]],
          [, , "700\\d{6}", , , , "700123456", , , [9]],
          [, , "76\\d{7}", , , , "761234567", , , [9]],
          "IE",
          353,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{5})", "$1 $2", ["2[24-9]|47|58|6[237-9]|9[35-9]"], "(0$1)"],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["[45]0"], "(0$1)"],
            [, "(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"], "(0$1)"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2569]|4[1-69]|7[14]"], "(0$1)"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["81"], "(0$1)"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[78]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["4"], "(0$1)"],
            [, "(\\d{2})(\\d)(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "18[59]0\\d{6}", , , , , , , [10]],
          [, , "818\\d{6}", , , , "818123456", , , [9]],
          ,
          ,
          [
            ,
            ,
            "88210[1-9]\\d{4}|8(?:[35-79]5\\d\\d|8(?:[013-9]\\d\\d|2(?:[01][1-9]|[2-9]\\d)))\\d{5}",
            ,
            ,
            ,
            "8551234567",
            ,
            ,
            [10]
          ]
        ],
        IL: [
          ,
          [, , "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}", , , , , , , [7, 8, 9, 10, 11, 12]],
          [, , "153\\d{8,9}|29[1-9]\\d{5}|(?:2[0-8]|[3489]\\d)\\d{6}", , , , "21234567", , , [8, 11, 12], [7]],
          [
            ,
            ,
            "5(?:(?:[02368]\\d|[19][2-9]|4[1-9])\\d|5(?:01|1[79]|2[2-9]|3[0-3]|4[34]|5[015689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\d{5}",
            ,
            ,
            ,
            "502345678",
            ,
            ,
            [9]
          ],
          [, , "1(?:255|80[019]\\d{3})\\d{3}", , , , "1800123456", , , [7, 10]],
          [, , "1212\\d{4}|1(?:200|9(?:0[0-2]|19))\\d{6}", , , , "1919123456", , , [8, 10]],
          [, , "1700\\d{6}", , , , "1700123456", , , [10]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "7(?:380|8(?:33|55|77|81))\\d{5}|7(?:18|2[23]|3[237]|47|6[258]|7\\d|82|9[2-9])\\d{6}",
            ,
            ,
            ,
            "771234567",
            ,
            ,
            [9]
          ],
          "IL",
          972,
          "0(?:0|1[2-9])",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{3})", "$1-$2", ["125"]],
            [, "(\\d{4})(\\d{2})(\\d{2})", "$1-$2-$3", ["121"]],
            [, "(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-489]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1-$2-$3", ["12"]],
            [, "(\\d{4})(\\d{6})", "$1-$2", ["159"]],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3-$4", ["1[7-9]"]],
            [, "(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})", "$1-$2 $3-$4", ["15"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "1700\\d{6}", , , , , , , [10]],
          [, , "1599\\d{6}", , , , "1599123456", , , [10]],
          ,
          ,
          [, , "151\\d{8,9}", , , , "15112340000", , , [11, 12]]
        ],
        IM: [
          ,
          [, , "1624\\d{6}|(?:[3578]\\d|90)\\d{8}", , , , , , , [10], [6]],
          [, , "1624(?:230|[5-8]\\d\\d)\\d{3}", , , , "1624756789", , , , [6]],
          [, , "76245[06]\\d{4}|7(?:4576|[59]24\\d|624[0-4689])\\d{5}", , , , "7924123456"],
          [, , "808162\\d{4}", , , , "8081624567"],
          [, , "8(?:440[49]06|72299\\d)\\d{3}|(?:8(?:45|70)|90[0167])624\\d{4}", , , , "9016247890"],
          [, , , , , , , , , [-1]],
          [, , "70\\d{8}", , , , "7012345678"],
          [, , "56\\d{8}", , , , "5612345678"],
          "IM",
          44,
          "00",
          "0",
          ,
          ,
          "([25-8]\\d{5})$|0",
          "1624$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "74576|(?:16|7[56])24",
          [, , , , , , , , , [-1]],
          [, , "3440[49]06\\d{3}|(?:3(?:08162|3\\d{4}|45624|7(?:0624|2299))|55\\d{4})\\d{4}", , , , "5512345678"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        IN: [
          ,
          [, , "(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}", , , , , , , [8, 9, 10, 11, 12, 13], [6, 7]],
          [
            ,
            ,
            "2717(?:[2-7]\\d|95)\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\d|4(?:20[24]|72[2-8])|552[1-7])\\d{6}|(?:11|33|4[04]|80)[2-7]\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\d)\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\d[2-7]\\d{5}",
            ,
            ,
            ,
            "7410410123",
            ,
            ,
            [10],
            [6, 7, 8]
          ],
          [
            ,
            ,
            "(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\d|7[02-8])\\d{5}|(?:6(?:[09]\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\d\\d)\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\d|7(?:[235689]\\d|4[0189]))|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]|881))[0189]\\d{5}",
            ,
            ,
            ,
            "8123456789",
            ,
            ,
            [10]
          ],
          [, , "000800\\d{7}|1(?:600\\d{6}|80(?:0\\d{4,9}|3\\d{9}))", , , , "1800123456"],
          [, , "186[12]\\d{9}", , , , "1861123456789", , , [13]],
          [, , "1860\\d{7}", , , , "18603451234", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "IN",
          91,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{7})", "$1", ["575"]],
            [
              ,
              "(\\d{8})",
              "$1",
              [
                "5(?:0|2[23]|3[03]|[67]1|88)",
                "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)",
                "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"
              ],
              ,
              ,
              1
            ],
            [, "(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"], , , 1],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2 $3",
              [
                "11|2[02]|33|4[04]|79[1-7]|80[2-46]",
                "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])",
                "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"
              ],
              "0$1",
              ,
              1
            ],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{4})",
              "$1 $2 $3",
              [
                "1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]",
                "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]",
                "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"
              ],
              "0$1",
              ,
              1
            ],
            [
              ,
              "(\\d{4})(\\d{3})(\\d{3})",
              "$1 $2 $3",
              [
                "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807",
                "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]",
                "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"
              ],
              "0$1",
              ,
              1
            ],
            [, "(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", , 1],
            [, "(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]],
            [, "(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"], , , 1]
          ],
          [
            [
              ,
              "(\\d{8})",
              "$1",
              [
                "5(?:0|2[23]|3[03]|[67]1|88)",
                "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)",
                "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"
              ],
              ,
              ,
              1
            ],
            [, "(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"], , , 1],
            [
              ,
              "(\\d{2})(\\d{4})(\\d{4})",
              "$1 $2 $3",
              [
                "11|2[02]|33|4[04]|79[1-7]|80[2-46]",
                "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])",
                "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"
              ],
              "0$1",
              ,
              1
            ],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{4})",
              "$1 $2 $3",
              [
                "1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]",
                "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]",
                "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"
              ],
              "0$1",
              ,
              1
            ],
            [
              ,
              "(\\d{4})(\\d{3})(\\d{3})",
              "$1 $2 $3",
              [
                "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807",
                "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]",
                "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"
              ],
              "0$1",
              ,
              1
            ],
            [, "(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", , 1],
            [, "(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], , , 1],
            [, "(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"], , , 1]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "1(?:600\\d{6}|800\\d{4,9})|(?:000800|18(?:03\\d\\d|6(?:0|[12]\\d\\d)))\\d{7}"],
          [, , "140\\d{7}", , , , "1409305260", , , [10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        IO: [
          ,
          [, , "3\\d{6}", , , , , , , [7]],
          [, , "37\\d{5}", , , , "3709100"],
          [, , "38\\d{5}", , , , "3801234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "IO",
          246,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["3"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        IQ: [
          ,
          [, , "(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}", , , , , , , [8, 9, 10], [6, 7]],
          [, , "1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}", , , , "12345678", , , [8, 9], [6, 7]],
          [, , "7[3-9]\\d{8}", , , , "7912345678", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "IQ",
          964,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-6]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        IR: [
          ,
          [, , "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}", , , , , , , [4, 5, 6, 7, 10], [8]],
          [
            ,
            ,
            "(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\d{7}|[16]\\d{3}(?:\\d{4})?|[289]\\d{3}(?:\\d(?:\\d{3})?)?)|94(?:000[09]|2(?:121|[2689]0\\d)|30[0-2]\\d|4(?:111|40\\d))\\d{4}",
            ,
            ,
            ,
            "2123456789",
            ,
            ,
            [6, 7, 10],
            [4, 5, 8]
          ],
          [
            ,
            ,
            "9(?:(?:0(?:[0-35]\\d|4[4-6])|(?:[13]\\d|2[0-3])\\d)\\d|9(?:[0-46]\\d\\d|5[15]0|8(?:1\\d|88)|9(?:0[0-3]|[19]\\d|21|77|8[7-9])))\\d{5}",
            ,
            ,
            ,
            "9123456789",
            ,
            ,
            [10]
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "IR",
          98,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4,5})", "$1", ["96"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{4,5})",
              "$1 $2",
              ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],
              "0$1"
            ],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[1-8]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [
            ,
            ,
            "9(?:4440\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))",
            ,
            ,
            ,
            ,
            ,
            ,
            [4, 5, 10]
          ],
          [
            ,
            ,
            "96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])",
            ,
            ,
            ,
            "9601",
            ,
            ,
            [4, 5]
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        IS: [
          ,
          [, , "(?:38\\d|[4-9])\\d{6}", , , , , , , [7, 9]],
          [
            ,
            ,
            "(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-24589]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\d{4}",
            ,
            ,
            ,
            "4101234",
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "(?:38[589]\\d\\d|6(?:1[1-8]|2[0-6]|3[026-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\d)|7(?:5[057]|[6-9]\\d)|8(?:2[0-59]|[3-69]\\d|8[238]))\\d{4}",
            ,
            ,
            ,
            "6111234"
          ],
          [, , "80[0-8]\\d{4}", , , , "8001234", , , [7]],
          [
            ,
            ,
            "90(?:0\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\d{3}",
            ,
            ,
            ,
            "9001234",
            ,
            ,
            [7]
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "49[0-24-79]\\d{4}", , , , "4921234", , , [7]],
          "IS",
          354,
          "00|1(?:0(?:01|[12]0)|100)",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[4-9]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["3"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "809\\d{4}", , , , "8091234", , , [7]],
          ,
          ,
          [, , "(?:689|8(?:7[18]|80)|95[48])\\d{4}", , , , "6891234", , , [7]]
        ],
        IT: [
          ,
          [
            ,
            ,
            "0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 11, 12]
          ],
          [
            ,
            ,
            "0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}",
            ,
            ,
            ,
            "0212345678",
            ,
            ,
            [6, 7, 8, 9, 10, 11]
          ],
          [, , "3[1-9]\\d{8}|3[2-9]\\d{7}", , , , "3123456789", , , [9, 10]],
          [, , "80(?:0\\d{3}|3)\\d{3}", , , , "800123456", , , [6, 9]],
          [
            ,
            ,
            "(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",
            ,
            ,
            ,
            "899123456",
            ,
            ,
            [6, 8, 9, 10]
          ],
          [, , "84(?:[08]\\d{3}|[17])\\d{3}", , , , "848123456", , , [6, 9]],
          [, , "1(?:78\\d|99)\\d{6}", , , , "1781234567", , , [9, 10]],
          [, , "55\\d{8}", , , , "5512345678", , , [10]],
          "IT",
          39,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4,5})", "$1", ["1(?:0|9[246])", "1(?:0|9(?:2[2-9]|[46]))"]],
            [, "(\\d{6})", "$1", ["1(?:1|92)"]],
            [, "(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]],
            [
              ,
              "(\\d{3})(\\d{3,6})",
              "$1 $2",
              [
                "0[13-57-9][0159]|8(?:03|4[17]|9[2-5])",
                "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"
              ]
            ],
            [, "(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["894"]],
            [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1(?:44|[679])|[378]"]],
            [, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]|14"]],
            [, "(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]],
            [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]
          ],
          [
            [, "(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]],
            [
              ,
              "(\\d{3})(\\d{3,6})",
              "$1 $2",
              [
                "0[13-57-9][0159]|8(?:03|4[17]|9[2-5])",
                "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"
              ]
            ],
            [, "(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["894"]],
            [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1(?:44|[679])|[378]"]],
            [, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]|14"]],
            [, "(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]],
            [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]
          ],
          [, , , , , , , , , [-1]],
          1,
          ,
          [, , "848\\d{6}", , , , , , , [9]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "3[2-8]\\d{9,10}", , , , "33101234501", , , [11, 12]]
        ],
        JE: [
          ,
          [, , "1534\\d{6}|(?:[3578]\\d|90)\\d{8}", , , , , , , [10], [6]],
          [, , "1534[0-24-8]\\d{5}", , , , "1534456789", , , , [6]],
          [, , "7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}", , , , "7797712345"],
          [, , "80(?:07(?:35|81)|8901)\\d{4}", , , , "8007354567"],
          [
            ,
            ,
            "(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}",
            ,
            ,
            ,
            "9018105678"
          ],
          [, , , , , , , , , [-1]],
          [, , "701511\\d{4}", , , , "7015115678"],
          [, , "56\\d{8}", , , , "5612345678"],
          "JE",
          44,
          "00",
          "0",
          ,
          ,
          "([0-24-8]\\d{5})$|0",
          "1534$1",
          ,
          ,
          ,
          ,
          [
            ,
            ,
            "76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",
            ,
            ,
            ,
            "7640123456"
          ],
          ,
          ,
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}",
            ,
            ,
            ,
            "5512345678"
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        JM: [
          ,
          [, , "(?:[58]\\d\\d|658|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "8766060\\d{3}|(?:658(?:2(?:[0-8]\\d|9[0-46-9])|[3-9]\\d\\d)|876(?:52[35]|6(?:0[1-3579]|1[0235-9]|[23]\\d|40|5[06]|6[2-589]|7[025-9]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468])))\\d{4}",
            ,
            ,
            ,
            "8765230123",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "(?:658295|876(?:2(?:0[1-9]|[13-9]\\d|2[013-9])|[348]\\d\\d|5(?:0[1-9]|[1-9]\\d)|6(?:4[89]|6[67])|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\d{4}",
            ,
            ,
            ,
            "8762101234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "JM",
          1,
          "011",
          "1",
          ,
          ,
          "1",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "658|876",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        JO: [
          ,
          [, , "(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}", , , , , , , [8, 9]],
          [
            ,
            ,
            "87(?:000|90[01])\\d{3}|(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[5-7][023])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:20|7[078]|99))\\d{4}",
            ,
            ,
            ,
            "62001234",
            ,
            ,
            [8]
          ],
          [, , "7(?:[78][0-25-9]|9\\d)\\d{6}", , , , "790123456", , , [9]],
          [, , "80\\d{6}", , , , "80012345", , , [8]],
          [, , "9\\d{7}", , , , "90012345", , , [8]],
          [, , "85\\d{6}", , , , "85012345", , , [8]],
          [, , "70\\d{7}", , , , "700123456", , , [9]],
          [, , , , , , , , , [-1]],
          "JO",
          962,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2356]|87"], "(0$1)"],
            [, "(\\d{3})(\\d{5,6})", "$1 $2", ["[89]"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["70"], "0$1"],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
          ],
          ,
          [, , "74(?:66|77)\\d{5}", , , , "746612345", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "8(?:10|8\\d)\\d{5}", , , , "88101234", , , [8]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        JP: [
          ,
          [
            ,
            ,
            "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",
            ,
            ,
            ,
            ,
            ,
            ,
            [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
          ],
          [
            ,
            ,
            "(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\d|4(?:[2-578]\\d|6[02-8]|9[2-59])|5(?:[2-589]\\d|6[1-9]|7[2-8])|7(?:[25-9]\\d|3[4-9]|4[02-9])|8(?:[2679]\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\d|[679][1-9]))\\d{6}",
            ,
            ,
            ,
            "312345678",
            ,
            ,
            [9]
          ],
          [, , "[7-9]0[1-9]\\d{7}", , , , "9012345678", , , [10]],
          [
            ,
            ,
            "00777(?:[01]|5\\d)\\d\\d|(?:00(?:7778|882[1245])|(?:120|800\\d)\\d\\d)\\d{4}|00(?:37|66|78)\\d{6,13}",
            ,
            ,
            ,
            "120123456"
          ],
          [, , "990\\d{6}", , , , "990123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , "60\\d{7}", , , , "601234567", , , [9]],
          [, , "50[1-9]\\d{7}", , , , "5012345678", , , [10]],
          "JP",
          81,
          "010",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{4})", "$1-$2", ["007", "0077", "00777", "00777[01]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"],
            [
              ,
              "(\\d{4})(\\d)(\\d{4})",
              "$1-$2-$3",
              [
                "1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])",
                "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]",
                "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"
              ],
              "0$1"
            ],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"],
            [
              ,
              "(\\d)(\\d{4})(\\d{4})",
              "$1-$2-$3",
              ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],
              "0$1"
            ],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{4})",
              "$1-$2-$3",
              [
                "1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])",
                "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]",
                "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]",
                "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"
              ],
              "0$1"
            ],
            [, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[289][2-9]|5[3-9]|7[2-4679]"], "0$1"],
            [, "(\\d{4})(\\d{2})(\\d{3,4})", "$1-$2-$3", ["007", "0077"]],
            [, "(\\d{4})(\\d{2})(\\d{4})", "$1-$2-$3", ["008"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[257-9]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3,4})", "$1-$2-$3", ["0"]],
            [, "(\\d{4})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["0"]],
            [, "(\\d{4})(\\d{5})(\\d{5,6})", "$1-$2-$3", ["0"]],
            [, "(\\d{4})(\\d{6})(\\d{6,7})", "$1-$2-$3", ["0"]]
          ],
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"],
            [
              ,
              "(\\d{4})(\\d)(\\d{4})",
              "$1-$2-$3",
              [
                "1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])",
                "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]",
                "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"
              ],
              "0$1"
            ],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"],
            [
              ,
              "(\\d)(\\d{4})(\\d{4})",
              "$1-$2-$3",
              ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"],
              "0$1"
            ],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{4})",
              "$1-$2-$3",
              [
                "1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])",
                "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]",
                "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]",
                "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"
              ],
              "0$1"
            ],
            [, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[289][2-9]|5[3-9]|7[2-4679]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[257-9]"], "0$1"]
          ],
          [, , "20\\d{8}", , , , "2012345678", , , [10]],
          ,
          ,
          [, , "00(?:777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)\\d\\d|00(?:37|66|78)\\d{6,13}"],
          [, , "570\\d{6}", , , , "570123456", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KE: [
          ,
          [, , "(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}", , , , , , , [7, 8, 9, 10]],
          [
            ,
            ,
            "(?:4[245]|5[1-79]|6[01457-9])\\d{5,7}|(?:4[136]|5[08]|62)\\d{7}|(?:[24]0|66)\\d{6,7}",
            ,
            ,
            ,
            "202012345",
            ,
            ,
            [7, 8, 9]
          ],
          [, , "(?:1(?:0[0-6]|1[0-5]|2[014]|30)|7\\d\\d)\\d{6}", , , , "712123456", , , [9]],
          [, , "800[2-8]\\d{5,6}", , , , "800223456", , , [9, 10]],
          [, , "900[02-9]\\d{5}", , , , "900223456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "KE",
          254,
          "000",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{5,7})", "$1 $2", ["[24-6]"], "0$1"],
            [, "(\\d{3})(\\d{6})", "$1 $2", ["[17]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KG: [
          ,
          [, , "8\\d{9}|(?:[235-8]\\d|99)\\d{7}", , , , , , , [9, 10], [5, 6]],
          [
            ,
            ,
            "312(?:5[0-79]\\d|9(?:[0-689]\\d|7[0-24-9]))\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}",
            ,
            ,
            ,
            "312123456",
            ,
            ,
            [9],
            [5, 6]
          ],
          [
            ,
            ,
            "312(?:58\\d|973)\\d{3}|(?:2(?:0[0-35]|2\\d)|5[0-24-7]\\d|600|7(?:[07]\\d|55)|88[08]|99[05-9])\\d{6}",
            ,
            ,
            ,
            "700123456",
            ,
            ,
            [9]
          ],
          [, , "800\\d{6,7}", , , , "800123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "KG",
          996,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{5})", "$1 $2", ["3(?:1[346]|[24-79])"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235-79]|88"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d)(\\d{2,3})", "$1 $2 $3 $4", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KH: [
          ,
          [, , "1\\d{9}|[1-9]\\d{7,8}", , , , , , , [8, 9, 10], [6, 7]],
          [
            ,
            ,
            "23(?:4(?:[2-4]|[56]\\d)|[568]\\d\\d)\\d{4}|23[236-9]\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\d)\\d{5}|6\\d{5,6})",
            ,
            ,
            ,
            "23756789",
            ,
            ,
            [8, 9],
            [6, 7]
          ],
          [
            ,
            ,
            "(?:(?:1[28]|3[18]|9[67])\\d|6[016-9]|7(?:[07-9]|[16]\\d)|8(?:[013-79]|8\\d))\\d{6}|(?:1\\d|9[0-57-9])\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\d{5}",
            ,
            ,
            ,
            "91234567",
            ,
            ,
            [8, 9]
          ],
          [, , "1800(?:1\\d|2[019])\\d{4}", , , , "1800123456", , , [10]],
          [, , "1900(?:1\\d|2[09])\\d{4}", , , , "1900123456", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "KH",
          855,
          "00[14-9]",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-9]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KI: [
          ,
          [, , "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}", , , , , , , [5, 8]],
          [
            ,
            ,
            "(?:[24]\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\d\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\d{3}",
            ,
            ,
            ,
            "31234"
          ],
          [, , "(?:63\\d{3}|73(?:0[0-5]\\d|140))\\d{3}|[67]200[01]\\d{3}", , , , "72001234", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "30(?:0[01]\\d\\d|12(?:11|20))\\d\\d", , , , "30010000", , , [8]],
          "KI",
          686,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KM: [
          ,
          [, , "[3478]\\d{6}", , , , , , , [7], [4]],
          [, , "7[4-7]\\d{5}", , , , "7712345", , , , [4]],
          [, , "[34]\\d{6}", , , , "3212345"],
          [, , , , , , , , , [-1]],
          [, , "8\\d{6}", , , , "8001234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "KM",
          269,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[3478]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KN: [
          ,
          [, , "(?:[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [, , "869(?:2(?:29|36)|302|4(?:6[015-9]|70)|56[5-7])\\d{4}", , , , "8692361234", , , , [7]],
          [, , "869(?:48[89]|55[6-8]|66\\d|76[02-7])\\d{4}", , , , "8697652917", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "KN",
          1,
          "011",
          "1",
          ,
          ,
          "([2-7]\\d{6})$|1",
          "869$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "869",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KP: [
          ,
          [, , "85\\d{6}|(?:19\\d|[2-7])\\d{7}", , , , , , , [8, 10], [6, 7]],
          [, , "(?:(?:195|2)\\d|3[19]|4[159]|5[37]|6[17]|7[39]|85)\\d{6}", , , , "21234567", , , , [6, 7]],
          [, , "19[1-3]\\d{7}", , , , "1921234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "KP",
          850,
          "00|99",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "238[02-9]\\d{4}|2(?:[0-24-9]\\d|3[0-79])\\d{5}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KR: [
          ,
          [
            ,
            ,
            "00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 8, 9, 10, 11, 12, 13, 14],
            [3, 4, 7]
          ],
          [
            ,
            ,
            "(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\d{2,3}",
            ,
            ,
            ,
            "22123456",
            ,
            ,
            [5, 6, 8, 9, 10],
            [3, 4, 7]
          ],
          [
            ,
            ,
            "1(?:05(?:[0-8]\\d|9[0-6])|22[13]\\d)\\d{4,5}|1(?:0[1-46-9]|[16-9]\\d|2[013-9])\\d{6,7}",
            ,
            ,
            ,
            "1020000000",
            ,
            ,
            [9, 10]
          ],
          [, , "00(?:308\\d{6,7}|798\\d{7,9})|(?:00368|80)\\d{7}", , , , "801234567", , , [9, 11, 12, 13, 14]],
          [, , "60[2-9]\\d{6}", , , , "602345678", , , [9]],
          [, , , , , , , , , [-1]],
          [, , "50\\d{8,9}", , , , "5012345678", , , [10, 11]],
          [, , "70\\d{8}", , , , "7012345678", , , [10]],
          "KR",
          82,
          "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))",
          "0",
          ,
          ,
          "0(8(?:[1-46-8]|5\\d\\d))?",
          ,
          ,
          ,
          [
            [, "(\\d{5})", "$1", ["1[016-9]1", "1[016-9]11", "1[016-9]114"], "0$1"],
            [, "(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1", "0$CC-$1"],
            [, "(\\d{4})(\\d{4})", "$1-$2", ["1"]],
            [, "(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60|8"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1", "0$CC-$1"],
            [, "(\\d{5})(\\d{3})(\\d{3})", "$1 $2 $3", ["003", "0030"]],
            [, "(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1", "0$CC-$1"],
            [, "(\\d{5})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0"]],
            [, "(\\d{5})(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]]
          ],
          [
            [, "(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1", "0$CC-$1"],
            [, "(\\d{4})(\\d{4})", "$1-$2", ["1"]],
            [, "(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60|8"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1", "0$CC-$1"],
            [, "(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1", "0$CC-$1"]
          ],
          [, , "15\\d{7,8}", , , , "1523456789", , , [9, 10]],
          ,
          ,
          [, , "00(?:3(?:08\\d{6,7}|68\\d{7})|798\\d{7,9})", , , , , , , [11, 12, 13, 14]],
          [
            ,
            ,
            "1(?:5(?:22|33|44|66|77|88|99)|6(?:[07]0|44|6[168]|88)|8(?:00|33|55|77|99))\\d{4}",
            ,
            ,
            ,
            "15441234",
            ,
            ,
            [8]
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KW: [
          ,
          [, , "18\\d{5}|(?:[2569]\\d|41)\\d{6}", , , , , , , [7, 8]],
          [
            ,
            ,
            "2(?:[23]\\d\\d|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7]))\\d{4}",
            ,
            ,
            ,
            "22345678",
            ,
            ,
            [8]
          ],
          [
            ,
            ,
            "(?:41\\d\\d|5(?:(?:[05]\\d|1[0-7]|6[56])\\d|2(?:22|5[25])|7(?:55|77)|88[58])|6(?:(?:0[034679]|5[015-9]|6\\d)\\d|1(?:00|11|66)|222|3[36]3|444|7(?:0[013-9]|[67]\\d)|888|9(?:[069]\\d|3[039]))|9(?:(?:0[09]|22|[4679]\\d|8[057-9])\\d|1(?:1[01]|99)|3(?:00|33)|5(?:00|5\\d)))\\d{4}",
            ,
            ,
            ,
            "50012345",
            ,
            ,
            [8]
          ],
          [, , "18\\d{5}", , , , "1801234", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "KW",
          965,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{3,4})", "$1 $2", ["[169]|2(?:[235]|4[1-35-9])|52"]],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["[245]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KY: [
          ,
          [, , "(?:345|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "345(?:2(?:22|3[23]|44|66)|333|444|6(?:23|38|40)|7(?:30|4[35-79]|6[6-9]|77)|8(?:00|1[45]|[48]8)|9(?:14|4[035-9]))\\d{4}",
            ,
            ,
            ,
            "3452221234",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "345(?:32[1-9]|42[0-4]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|82[56]|9(?:1[679]|2[2-9]|3[06-9]|90))\\d{4}",
            ,
            ,
            ,
            "3453231234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "(?:345976|900[2-9]\\d\\d)\\d{4}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "KY",
          1,
          "011",
          "1",
          ,
          ,
          "([2-9]\\d{6})$|1",
          "345$1",
          ,
          ,
          ,
          ,
          [, , "345849\\d{4}", , , , "3458491234"],
          ,
          "345",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        KZ: [
          ,
          [, , "(?:33622|8\\d{8})\\d{5}|[78]\\d{9}", , , , , , , [10, 14], [5, 6, 7]],
          [
            ,
            ,
            "(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9]|97)|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]|59))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}",
            ,
            ,
            ,
            "7123456789",
            ,
            ,
            [10],
            [5, 6, 7]
          ],
          [, , "7(?:0[0-25-8]|47|6[0-4]|7[15-8]|85)\\d{7}", , , , "7710009998", , , [10]],
          [, , "8(?:00|108\\d{3})\\d{7}", , , , "8001234567"],
          [, , "809\\d{7}", , , , "8091234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , "808\\d{7}", , , , "8081234567", , , [10]],
          [, , "751\\d{7}", , , , "7511234567", , , [10]],
          "KZ",
          7,
          "810",
          "8",
          ,
          ,
          "8",
          ,
          "8~10",
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "33|7",
          [, , "751\\d{7}", , , , , , , [10]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LA: [
          ,
          [, , "[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}", , , , , , , [8, 9, 10], [6]],
          [, , "(?:2[13]|[35-7][14]|41|8[1468])\\d{6}", , , , "21212862", , , [8], [6]],
          [, , "(?:20(?:[2359]\\d|7[6-8]|88)|302\\d)\\d{6}", , , , "2023123456", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LA",
          856,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2[13]|3[14]|[4-8]"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["30[013-9]"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[23]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "30[013-9]\\d{6}", , , , "301234567", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LB: [
          ,
          [, , "[27-9]\\d{7}|[13-9]\\d{6}", , , , , , , [7, 8]],
          [
            ,
            ,
            "7(?:62|8[0-7]|9[04-9])\\d{4}|(?:[14-69]\\d|2(?:[14-69]\\d|[78][1-9])|7[2-57]|8[02-9])\\d{5}",
            ,
            ,
            ,
            "1123456"
          ],
          [
            ,
            ,
            "793(?:[01]\\d|2[0-4])\\d{3}|(?:(?:3|81)\\d|7(?:[01]\\d|6[013-9]|8[89]|9[12]))\\d{5}",
            ,
            ,
            ,
            "71123456"
          ],
          [, , , , , , , , , [-1]],
          [, , "9[01]\\d{6}", , , , "90123456", , , [8]],
          [, , "80\\d{6}", , , , "80123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LB",
          961,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27-9]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LC: [
          ,
          [, , "(?:[58]\\d\\d|758|900)\\d{7}", , , , , , , [10], [7]],
          [, , "758(?:234|4(?:30|5\\d|6[2-9]|8[0-2])|57[0-2]|(?:63|75)8)\\d{4}", , , , "7584305678", , , , [7]],
          [
            ,
            ,
            "758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\d|3[0-3])|812)\\d{4}",
            ,
            ,
            ,
            "7582845678",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "LC",
          1,
          "011",
          "1",
          ,
          ,
          "([2-8]\\d{6})$|1",
          "758$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "758",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LI: [
          ,
          [, , "[68]\\d{8}|(?:[2378]\\d|90)\\d{5}", , , , , , , [7, 9]],
          [
            ,
            ,
            "(?:2(?:01|1[27]|2[02]|3\\d|6[02-578]|96)|3(?:[24]0|33|7[0135-7]|8[048]|9[0269]))\\d{4}",
            ,
            ,
            ,
            "2345678",
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "(?:6(?:(?:4[5-9]|5[0-4])\\d|6(?:[0245]\\d|[17]0|3[7-9]))\\d|7(?:[37-9]\\d|42|56))\\d{4}",
            ,
            ,
            ,
            "660234567"
          ],
          [, , "8002[28]\\d\\d|80(?:05\\d|9)\\d{4}", , , , "8002222"],
          [, , "90(?:02[258]|1(?:23|3[14])|66[136])\\d\\d", , , , "9002222", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LI",
          423,
          "00",
          "0",
          ,
          ,
          "(1001)|0",
          ,
          ,
          ,
          [
            [
              ,
              "(\\d{3})(\\d{2})(\\d{2})",
              "$1 $2 $3",
              ["[2379]|8(?:0[09]|7)", "[2379]|8(?:0(?:02|9)|7)"],
              ,
              "$CC $1"
            ],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["69"], , "$CC $1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"], , "$CC $1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "870(?:28|87)\\d\\d", , , , "8702812", , , [7]],
          ,
          ,
          [, , "697(?:42|56|[78]\\d)\\d{4}", , , , "697861234", , , [9]]
        ],
        LK: [
          ,
          [, , "[1-9]\\d{8}", , , , , , , [9], [7]],
          [
            ,
            ,
            "(?:12[2-9]|602|8[12]\\d|9(?:1\\d|22|9[245]))\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}",
            ,
            ,
            ,
            "112345678",
            ,
            ,
            ,
            [7]
          ],
          [, , "7(?:[0-25-8]\\d|4[0-4])\\d{6}", , , , "712345678"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LK",
          94,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-689]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "1973\\d{5}", , , , "197312345"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LR: [
          ,
          [, , "(?:[25]\\d|33|77|88)\\d{7}|(?:2\\d|[4-6])\\d{6}", , , , , , , [7, 8, 9]],
          [, , "(?:2\\d{3}|33333)\\d{4}", , , , "21234567", , , [8, 9]],
          [, , "(?:(?:(?:22|33)0|555|(?:77|88)\\d)\\d|4[67])\\d{5}|[56]\\d{6}", , , , "770123456", , , [7, 9]],
          [, , , , , , , , , [-1]],
          [, , "332(?:02|[34]\\d)\\d{4}", , , , "332021234", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LR",
          231,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[4-6]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23578]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LS: [
          ,
          [, , "(?:[256]\\d\\d|800)\\d{5}", , , , , , , [8]],
          [, , "2\\d{7}", , , , "22123456"],
          [, , "[56]\\d{7}", , , , "50123456"],
          [, , "800[256]\\d{4}", , , , "80021234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LS",
          266,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{4})(\\d{4})", "$1 $2", ["[2568]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LT: [
          ,
          [, , "(?:[3469]\\d|52|[78]0)\\d{6}", , , , , , , [8]],
          [, , "(?:3[1478]|4[124-6]|52)\\d{6}", , , , "31234567"],
          [, , "6\\d{7}", , , , "61234567"],
          [, , "80[02]\\d{5}", , , , "80012345"],
          [, , "9(?:0[0239]|10)\\d{5}", , , , "90012345"],
          [, , "808\\d{5}", , , , "80812345"],
          [, , "70[05]\\d{5}", , , , "70012345"],
          [, , "[89]01\\d{5}", , , , "80123456"],
          "LT",
          370,
          "00",
          "8",
          ,
          ,
          "[08]",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["52[0-7]"], "(8-$1)", , 1],
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[7-9]"], "8 $1", , 1],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["37|4(?:[15]|6[1-8])"], "(8-$1)", , 1],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["[3-6]"], "(8-$1)", , 1]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "70[67]\\d{5}", , , , "70712345"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LU: [
          ,
          [
            ,
            ,
            "35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",
            ,
            ,
            ,
            ,
            ,
            ,
            [4, 5, 6, 7, 8, 9, 10, 11]
          ],
          [
            ,
            ,
            "(?:35[013-9]|80[2-9]|90[89])\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\d|8[13-9]|9[2-579])\\d{2,9}",
            ,
            ,
            ,
            "27123456"
          ],
          [, , "6(?:[269][18]|5[1568]|7[189]|81)\\d{6}", , , , "628123456", , , [9]],
          [, , "800\\d{5}", , , , "80012345", , , [8]],
          [, , "90[015]\\d{5}", , , , "90012345", , , [8]],
          [, , "801\\d{5}", , , , "80112345", , , [8]],
          [, , , , , , , , , [-1]],
          [, , "20(?:1\\d{5}|[2-689]\\d{1,7})", , , , "20201234", , , [4, 5, 6, 7, 8, 9, 10]],
          "LU",
          352,
          "00",
          ,
          ,
          ,
          "(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)",
          ,
          ,
          ,
          [
            [
              ,
              "(\\d{2})(\\d{3})",
              "$1 $2",
              ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"],
              ,
              "$CC $1"
            ],
            [
              ,
              "(\\d{2})(\\d{2})(\\d{2})",
              "$1 $2 $3",
              ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"],
              ,
              "$CC $1"
            ],
            [, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["20[2-689]"], , "$CC $1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4", ["2(?:[0367]|4[3-8])"], , "$CC $1"],
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80[01]|90[015]"], , "$CC $1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["20"], , "$CC $1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"], , "$CC $1"],
            [
              ,
              "(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})",
              "$1 $2 $3 $4 $5",
              ["2(?:[0367]|4[3-8])"],
              ,
              "$CC $1"
            ],
            [
              ,
              "(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})",
              "$1 $2 $3 $4",
              ["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"],
              ,
              "$CC $1"
            ]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LV: [
          ,
          [, , "(?:[268]\\d|90)\\d{6}", , , , , , , [8]],
          [, , "6\\d{7}", , , , "63123456"],
          [
            ,
            ,
            "23(?:23[0-57-9]|33[0238])\\d{3}|2(?:[0-24-9]\\d\\d|3(?:0[07]|[14-9]\\d|2[024-9]|3[0-24-9]))\\d{4}",
            ,
            ,
            ,
            "21234567"
          ],
          [, , "80\\d{6}", , , , "80123456"],
          [, , "90\\d{6}", , , , "90123456"],
          [, , "81\\d{6}", , , , "81123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LV",
          371,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[269]|8[01]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        LY: [
          ,
          [, , "[2-9]\\d{8}", , , , , , , [9], [7]],
          [
            ,
            ,
            "(?:2(?:0[56]|[1-6]\\d|7[124579]|8[124])|3(?:1\\d|2[2356])|4(?:[17]\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\d|5[2-57]|8[1-5])|7(?:[13]\\d|2[13-79])|8(?:[124]\\d|5[124]|84))\\d{6}",
            ,
            ,
            ,
            "212345678",
            ,
            ,
            ,
            [7]
          ],
          [, , "9[1-6]\\d{7}", , , , "912345678"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "LY",
          218,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{7})", "$1-$2", ["[2-9]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MA: [
          ,
          [, , "[5-8]\\d{8}", , , , , , , [9]],
          [
            ,
            ,
            "5293[01]\\d{4}|5(?:2(?:[0-25-7]\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}",
            ,
            ,
            ,
            "520123456"
          ],
          [, , "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}", , , , "650123456"],
          [, , "80\\d{7}", , , , "801234567"],
          [, , "89\\d{7}", , , , "891234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "592(?:4[0-2]|93)\\d{4}", , , , "592401234"],
          "MA",
          212,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [
              ,
              "(\\d{5})(\\d{4})",
              "$1-$2",
              ["5(?:29|38)", "5(?:29[1289]|389)", "529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]"],
              "0$1"
            ],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5[45]"], "0$1"],
            [
              ,
              "(\\d{4})(\\d{5})",
              "$1-$2",
              ["5(?:2[2-489]|3[5-9]|9)|892", "5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"],
              "0$1"
            ],
            [, "(\\d{2})(\\d{7})", "$1-$2", ["8"], "0$1"],
            [, "(\\d{3})(\\d{6})", "$1-$2", ["[5-7]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          1,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MC: [
          ,
          [, , "(?:[3489]|6\\d)\\d{7}", , , , , , , [8, 9]],
          [, , "(?:870|9[2-47-9]\\d)\\d{5}", , , , "99123456", , , [8]],
          [, , "4(?:[46]\\d|5[1-9])\\d{5}|(?:3|6\\d)\\d{7}", , , , "612345678"],
          [, , "(?:800|90\\d)\\d{5}", , , , "90123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MC",
          377,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["87"]],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[389]"]],
            [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]
          ],
          [
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[389]"]],
            [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "8[07]0\\d{5}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MD: [
          ,
          [, , "(?:[235-7]\\d|[89]0)\\d{6}", , , , , , , [8]],
          [, , "(?:(?:2[1-9]|3[1-79])\\d|5(?:33|5[257]))\\d{5}", , , , "22212345"],
          [, , "562\\d{5}|(?:6\\d|7[16-9])\\d{6}", , , , "62112345"],
          [, , "800\\d{5}", , , , "80012345"],
          [, , "90[056]\\d{5}", , , , "90012345"],
          [, , "808\\d{5}", , , , "80812345"],
          [, , , , , , , , , [-1]],
          [, , "3[08]\\d{6}", , , , "30123456"],
          "MD",
          373,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["22|3"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[25-7]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "803\\d{5}", , , , "80312345"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ME: [
          ,
          [, , "(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}", , , , , , , [8, 9], [6]],
          [
            ,
            ,
            "(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\d{5}",
            ,
            ,
            ,
            "30234567",
            ,
            ,
            [8],
            [6]
          ],
          [, , "6(?:[07-9]\\d|3[024]|6[0-25])\\d{5}", , , , "67622901", , , [8]],
          [, , "80(?:[0-2578]|9\\d)\\d{5}", , , , "80080002"],
          [, , "9(?:4[1568]|5[178])\\d{5}", , , , "94515151", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "78[1-49]\\d{5}", , , , "78108780", , , [8]],
          "ME",
          382,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "77[1-9]\\d{5}", , , , "77273012", , , [8]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MF: [
          ,
          [, , "(?:590|(?:69|80)\\d|976)\\d{6}", , , , , , , [9]],
          [, , "590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}", , , , "590271234"],
          [, , "69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}", , , , "690001234"],
          [, , "80[0-5]\\d{6}", , , , "800012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "976[01]\\d{5}", , , , "976012345"],
          "MF",
          590,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MG: [
          ,
          [, , "[23]\\d{8}", , , , , , , [9], [7]],
          [
            ,
            ,
            "2072[29]\\d{4}|20(?:2\\d|4[47]|5[3467]|6[279]|7[35]|8[268]|9[245])\\d{5}",
            ,
            ,
            ,
            "202123456",
            ,
            ,
            ,
            [7]
          ],
          [, , "3[2-47-9]\\d{7}", , , , "321234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "22\\d{7}", , , , "221234567"],
          "MG",
          261,
          "00",
          "0",
          ,
          ,
          "([24-9]\\d{6})$|0",
          "20$1",
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["[23]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MH: [
          ,
          [, , "329\\d{4}|(?:[256]\\d|45)\\d{5}", , , , , , , [7]],
          [, , "(?:247|528|625)\\d{4}", , , , "2471234"],
          [, , "(?:(?:23|54)5|329|45[356])\\d{4}", , , , "2351234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "635\\d{4}", , , , "6351234"],
          "MH",
          692,
          "011",
          "1",
          ,
          ,
          "1",
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1-$2", ["[2-6]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MK: [
          ,
          [, , "[2-578]\\d{7}", , , , , , , [8], [6, 7]],
          [
            ,
            ,
            "(?:(?:2(?:62|77)0|3444)\\d|4[56]440)\\d{3}|(?:34|4[357])700\\d{3}|(?:2(?:[0-3]\\d|5[0-578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\d{5}",
            ,
            ,
            ,
            "22012345",
            ,
            ,
            ,
            [6, 7]
          ],
          [
            ,
            ,
            "7(?:3555|(?:474|9[019]7)7)\\d{3}|7(?:[0-25-8]\\d\\d|3(?:[1-48]\\d|7[01578])|4(?:2\\d|60|7[01578])|9(?:[2-4]\\d|5[01]|7[015]))\\d{4}",
            ,
            ,
            ,
            "72345678"
          ],
          [, , "800\\d{5}", , , , "80012345"],
          [, , "5\\d{7}", , , , "50012345"],
          [, , "8(?:0[1-9]|[1-9]\\d)\\d{5}", , , , "80123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MK",
          389,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2|34[47]|4(?:[37]7|5[47]|64)"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[347]"], "0$1"],
            [, "(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[58]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ML: [
          ,
          [, , "[24-9]\\d{7}", , , , , , , [8]],
          [, , "2(?:07[0-8]|12[67])\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-39]))\\d{5}", , , , "20212345"],
          [, , "2(?:0(?:01|79)|17\\d)\\d{4}|(?:5[01]|[679]\\d|8[2-49])\\d{6}", , , , "65012345"],
          [, , "80\\d{6}", , , , "80012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "ML",
          223,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})", "$1", ["67[057-9]|74[045]", "67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]
          ],
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "80\\d{6}"],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MM: [
          ,
          [
            ,
            ,
            "1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10],
            [5]
          ],
          [
            ,
            ,
            "(?:1(?:(?:2\\d|3[56]|[89][0-6])\\d|4(?:2[2-469]|39|46|6[25]|7[0-3]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\d|2[246]|39|46|62|7[0-3]|83)|51\\d\\d)|4(?:2(?:2\\d\\d|48[0-3])|3(?:20\\d|4(?:70|83)|56)|420\\d|5470)|6(?:0(?:[23]|88\\d)|(?:124|[56]2\\d)\\d|247[23]|3(?:20\\d|470)|4(?:2[04]\\d|47[23])|7(?:(?:3\\d|8[01459])\\d|4(?:39|60|7[013]))))\\d{4}|5(?:2(?:2\\d{5,6}|47[023]\\d{4})|(?:347[23]|4(?:2(?:1|86)|470)|522\\d|6(?:20\\d|483)|7(?:20\\d|48[0-2])|8(?:20\\d|47[02])|9(?:20\\d|47[01]))\\d{4})|7(?:(?:0470|4(?:25\\d|470)|5(?:202|470|96\\d))\\d{4}|1(?:20\\d{4,5}|4(?:70|83)\\d{4}))|8(?:1(?:2\\d{5,6}|4(?:10|7[01]\\d)\\d{3})|2(?:2\\d{5,6}|(?:320|490\\d)\\d{3})|(?:3(?:2\\d\\d|470)|4[24-7]|5(?:2\\d|4[1-9]|51)\\d|6[23])\\d{4})|(?:1[2-6]\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|[35]2\\d))\\d{4}|25\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\d{4}",
            ,
            ,
            ,
            "1234567",
            ,
            ,
            [6, 7, 8, 9],
            [5]
          ],
          [
            ,
            ,
            "(?:17[01]|9(?:2(?:[0-4]|[56]\\d\\d)|(?:3(?:[0-36]|4\\d)|(?:6\\d|9[4-8])\\d|7(?:3|40|[5-9]\\d)|8(?:78|[89]\\d))\\d|4(?:(?:[0245]\\d|[1379])\\d|88)|5[0-6])\\d)\\d{4}|9[69]1\\d{6}|9(?:[68]\\d|9[089])\\d{5}",
            ,
            ,
            ,
            "92123456",
            ,
            ,
            [7, 8, 9, 10]
          ],
          [, , "80080(?:[01][1-9]|2\\d)\\d{3}", , , , "8008001234", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "1333\\d{4}|[12]468\\d{4}", , , , "13331234", , , [8]],
          "MM",
          95,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{2})(\\d{3})", "$1 $2 $3", ["16|2"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{2})(\\d{3})",
              "$1 $2 $3",
              ["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"],
              "0$1"
            ],
            [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[4-7]|8[1-35]"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{4,6})", "$1 $2 $3", ["9(?:2[0-4]|[35-9]|4[137-9])"], "0$1"],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["92"], "0$1"],
            [, "(\\d)(\\d{5})(\\d{4})", "$1 $2 $3", ["9"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MN: [
          ,
          [, , "[12]\\d{7,9}|[5-9]\\d{7}", , , , , , , [8, 9, 10], [4, 5, 6]],
          [
            ,
            ,
            "[12]2[1-3]\\d{5,6}|7(?:0[0-5]\\d|128)\\d{4}|(?:[12](?:1|27)|5[368])\\d{6}|[12](?:3[2-8]|4[2-68]|5[1-4689])\\d{6,7}",
            ,
            ,
            ,
            "53123456",
            ,
            ,
            ,
            [4, 5, 6]
          ],
          [, , "(?:83[01]|920)\\d{5}|(?:5[05]|6[069]|8[015689]|9[013-9])\\d{6}", , , , "88123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "712[0-79]\\d{4}|7(?:1[013-9]|[25-9]\\d)\\d{5}", , , , "75123456", , , [8]],
          "MN",
          976,
          "001",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[12]1"], "0$1"],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[5-9]"]],
            [, "(\\d{3})(\\d{5,6})", "$1 $2", ["[12]2[1-3]"], "0$1"],
            [
              ,
              "(\\d{4})(\\d{5,6})",
              "$1 $2",
              ["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],
              "0$1"
            ],
            [, "(\\d{5})(\\d{4,5})", "$1 $2", ["[12]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MO: [
          ,
          [, , "0800\\d{3}|(?:28|[68]\\d)\\d{6}", , , , , , , [7, 8]],
          [, , "(?:28[2-9]|8(?:11|[2-57-9]\\d))\\d{5}", , , , "28212345", , , [8]],
          [
            ,
            ,
            "6800[0-79]\\d{3}|6(?:[235]\\d\\d|6(?:0[0-5]|[1-9]\\d)|8(?:0[1-9]|[14-8]\\d|2[5-9]|[39][0-4]))\\d{4}",
            ,
            ,
            ,
            "66123456",
            ,
            ,
            [8]
          ],
          [, , "0800\\d{3}", , , , "0800501", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MO",
          853,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{3})", "$1 $2", ["0"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[268]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MP: [
          ,
          [, , "[58]\\d{9}|(?:67|90)0\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}",
            ,
            ,
            ,
            "6702345678",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}",
            ,
            ,
            ,
            "6702345678",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "MP",
          1,
          "011",
          "1",
          ,
          ,
          "([2-9]\\d{6})$|1",
          "670$1",
          ,
          1,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "670",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MQ: [
          ,
          [, , "596\\d{6}|(?:69|80|9\\d)\\d{7}", , , , , , , [9]],
          [, , "596(?:[03-7]\\d|10|2[7-9]|8[09]|9[4-9])\\d{4}", , , , "596301234"],
          [, , "69(?:6(?:[0-46-9]\\d|5[0-6])|727)\\d{4}", , , , "696201234"],
          [, , "80[0-5]\\d{6}", , , , "800012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "9(?:(?:39|47)7[01]|76(?:6\\d|7[0-367]))\\d{4}", , , , "976612345"],
          "MQ",
          596,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MR: [
          ,
          [, , "(?:[2-4]\\d\\d|800)\\d{5}", , , , , , , [8]],
          [, , "(?:25[08]|35\\d|45[1-7])\\d{5}", , , , "35123456"],
          [, , "[2-4][0-46-9]\\d{6}", , , , "22123456"],
          [, , "800\\d{5}", , , , "80012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MR",
          222,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-48]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MS: [
          ,
          [, , "(?:[58]\\d\\d|664|900)\\d{7}", , , , , , , [10], [7]],
          [, , "6644(?:1[0-3]|91)\\d{4}", , , , "6644912345", , , , [7]],
          [, , "664(?:3(?:49|9[1-6])|49[2-6])\\d{4}", , , , "6644923456", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "MS",
          1,
          "011",
          "1",
          ,
          ,
          "([34]\\d{6})$|1",
          "664$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "664",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MT: [
          ,
          [, , "3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}", , , , , , , [8]],
          [, , "20(?:3[1-4]|6[059])\\d{4}|2(?:0[19]|[1-357]\\d|60)\\d{5}", , , , "21001234"],
          [, , "(?:7(?:210|[79]\\d\\d)|9(?:[29]\\d\\d|69[67]|8(?:1[1-3]|89|97)))\\d{4}", , , , "96961234"],
          [, , "800(?:02|[3467]\\d)\\d{3}", , , , "80071234"],
          [, , "5(?:0(?:0(?:37|43)|(?:6\\d|70|9[0168])\\d)|[12]\\d0[1-5])\\d{3}", , , , "50037123"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "3550\\d{4}", , , , "35501234"],
          "MT",
          356,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{4})(\\d{4})", "$1 $2", ["[2357-9]"]]],
          ,
          [, , "7117\\d{4}", , , , "71171234"],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "501\\d{5}", , , , "50112345"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MU: [
          ,
          [, , "(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}", , , , , , , [7, 8, 10]],
          [
            ,
            ,
            "(?:2(?:[0346-8]\\d|1[0-7])|4(?:[013568]\\d|2[4-7])|54(?:[3-5]\\d|71)|6\\d\\d|8(?:14|3[129]))\\d{4}",
            ,
            ,
            ,
            "54480123",
            ,
            ,
            [7, 8]
          ],
          [
            ,
            ,
            "5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\d{4}|(?:5(?:2[5-9]|4[3-689]|[57]\\d|8[0-689]|9[0-8])|7(?:01|30))\\d{5}",
            ,
            ,
            ,
            "52512345",
            ,
            ,
            [8]
          ],
          [, , "802\\d{7}|80[0-2]\\d{4}", , , , "8001234", , , [7, 10]],
          [, , "30\\d{5}", , , , "3012345", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "3(?:20|9\\d)\\d{4}", , , , "3201234", , , [7]],
          "MU",
          230,
          "0(?:0|[24-7]0|3[03])",
          ,
          ,
          ,
          ,
          ,
          "020",
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[2-46]|8[013]"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[57]"]],
            [, "(\\d{5})(\\d{5})", "$1 $2", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MV: [
          ,
          [, , "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}", , , , , , , [7, 10]],
          [, , "(?:3(?:0[0-3]|3[0-59])|6(?:[58][024689]|6[024-68]|7[02468]))\\d{4}", , , , "6701234", , , [7]],
          [, , "(?:46[46]|[79]\\d\\d)\\d{4}", , , , "7712345", , , [7]],
          [, , "800\\d{7}", , , , "8001234567", , , [10]],
          [, , "900\\d{7}", , , , "9001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MV",
          960,
          "0(?:0|19)",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[34679]"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "4(?:0[01]|50)\\d{4}", , , , "4001234", , , [7]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MW: [
          ,
          [, , "(?:[1289]\\d|31|77)\\d{7}|1\\d{6}", , , , , , , [7, 9]],
          [, , "(?:1[2-9]|2[12]\\d\\d)\\d{5}", , , , "1234567"],
          [, , "111\\d{6}|(?:31|77|[89][89])\\d{7}", , , , "991234567", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MW",
          265,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["1[2-9]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[137-9]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MX: [
          ,
          [
            ,
            ,
            "1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\d{7}|(?:1(?:[01]\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\d)\\d{8}",
            ,
            ,
            ,
            ,
            ,
            ,
            [10, 11],
            [7, 8]
          ],
          [
            ,
            ,
            "657[12]\\d{6}|(?:2(?:0[01]|2\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[25-7][1-9]|3[1-8]|4\\d|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|6[1-9]|7[12]|8[1-8]|9\\d))\\d{7}",
            ,
            ,
            ,
            "2001234567",
            ,
            ,
            [10],
            [7, 8]
          ],
          [
            ,
            ,
            "657[12]\\d{6}|(?:1(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))|2(?:2\\d|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[25-7][1-9]|3[1-8]|4\\d|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2\\d|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|6[1-9]|7[12]|8[1-8]|9\\d))\\d{7}",
            ,
            ,
            ,
            "12221234567",
            ,
            ,
            ,
            [7, 8]
          ],
          [, , "8(?:00|88)\\d{7}", , , , "8001234567", , , [10]],
          [, , "900\\d{7}", , , , "9001234567", , , [10]],
          [, , "300\\d{7}", , , , "3001234567", , , [10]],
          [, , "500\\d{7}", , , , "5001234567", , , [10]],
          [, , , , , , , , , [-1]],
          "MX",
          52,
          "0[09]",
          "01",
          ,
          ,
          "0(?:[12]|4[45])|1",
          ,
          "00",
          ,
          [
            [, "(\\d{5})", "$1", ["53"]],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"], , , 1],
            [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"], , , 1],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"], , , 1]
          ],
          [
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"], , , 1],
            [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"], , , 1],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"], , , 1]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MY: [
          ,
          [, , "1\\d{8,9}|(?:3\\d|[4-9])\\d{7}", , , , , , , [8, 9, 10], [6, 7]],
          [
            ,
            ,
            "(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\d|9[0-57])\\d|4(?:2[0-689]|[3-79]\\d|8[1-35689])|5(?:2[0-589]|[3468]\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\d|[3489][0-8]))\\d{5}",
            ,
            ,
            ,
            "323856789",
            ,
            ,
            [8, 9],
            [6, 7]
          ],
          [
            ,
            ,
            "1(?:1888[689]|4400|8(?:47|8[27])[0-4])\\d{4}|1(?:0(?:[23568]\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\d\\d|6(?:0[5-9]|[1-9]\\d)|7(?:[0134]\\d|2[1-9]|5[0-6]))|(?:[269]\\d|[37][1-9]|4[235-9])\\d|5(?:31|9\\d\\d)|8(?:1[23]|[236]\\d|4[06]|5(?:46|[7-9])|7[016-9]|8[01]|9[0-8]))\\d{5}",
            ,
            ,
            ,
            "123456789",
            ,
            ,
            [9, 10]
          ],
          [, , "1[378]00\\d{6}", , , , "1300123456", , , [10]],
          [, , "1600\\d{6}", , , , "1600123456", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "15(?:4(?:6[0-4]\\d|8(?:0[125]|[17]\\d|21|3[01]|4[01589]|5[014]|6[02]))|6(?:32[0-6]|78\\d))\\d{4}",
            ,
            ,
            ,
            "1546012345",
            ,
            ,
            [10]
          ],
          "MY",
          60,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["[4-79]"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{3,4})",
              "$1-$2 $3",
              ["1(?:[02469]|[378][1-9]|53)|8", "1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],
              "0$1"
            ],
            [, "(\\d)(\\d{4})(\\d{4})", "$1-$2 $3", ["3"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3-$4", ["1(?:[367]|80)"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2 $3", ["15"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2 $3", ["1"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        MZ: [
          ,
          [, , "(?:2|8\\d)\\d{7}", , , , , , , [8, 9]],
          [, , "2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}", , , , "21123456", , , [8]],
          [, , "8[2-79]\\d{7}", , , , "821234567", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "MZ",
          258,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2|8[2-79]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NA: [
          ,
          [, , "[68]\\d{7,8}", , , , , , , [8, 9]],
          [
            ,
            ,
            "64426\\d{3}|6(?:1(?:2[2-7]|3[01378]|4[0-4])|254|32[0237]|4(?:27|41|5[25])|52[236-8]|626|7(?:2[2-4]|30))\\d{4,5}|6(?:1(?:(?:0\\d|2[0189]|3[24-69]|4[5-9])\\d|17|69|7[014])|2(?:17|5[0-36-8]|69|70)|3(?:17|2[14-689]|34|6[289]|7[01]|81)|4(?:17|2[0-2]|4[06]|5[0137]|69|7[01])|5(?:17|2[0459]|69|7[01])|6(?:17|25|38|42|69|7[01])|7(?:17|2[569]|3[13]|6[89]|7[01]))\\d{4}",
            ,
            ,
            ,
            "61221234"
          ],
          [, , "(?:60|8[1245])\\d{7}", , , , "811234567", , , [9]],
          [, , "80\\d{7}", , , , "800123456", , , [9]],
          [, , "8701\\d{5}", , , , "870123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "8(?:3\\d\\d|86)\\d{5}", , , , "88612345"],
          "NA",
          264,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["87"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NC: [
          ,
          [, , "(?:050|[2-57-9]\\d\\d)\\d{3}", , , , , , , [6]],
          [, , "(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}", , , , "201234"],
          [, , "(?:5[0-4]|[79]\\d|8[0-79])\\d{4}", , , , "751234"],
          [, , "050\\d{3}", , , , "050012"],
          [, , "36\\d{4}", , , , "366711"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NC",
          687,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})", "$1", ["5[6-8]"]],
            [, "(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[02-57-9]"]]
          ],
          [[, "(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[02-57-9]"]]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NE: [
          ,
          [, , "[027-9]\\d{7}", , , , , , , [8]],
          [
            ,
            ,
            "2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}",
            ,
            ,
            ,
            "20201234"
          ],
          [, , "(?:23|7[04]|[89]\\d)\\d{6}", , , , "93123456"],
          [, , "08\\d{6}", , , , "08123456"],
          [, , "09\\d{6}", , , , "09123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NE",
          227,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["08"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[089]|2[013]|7[04]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NF: [
          ,
          [, , "[13]\\d{5}", , , , , , , [6], [5]],
          [, , "(?:1(?:06|17|28|39)|3[0-2]\\d)\\d{3}", , , , "106609", , , , [5]],
          [, , "(?:14|3[58])\\d{4}", , , , "381234", , , , [5]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NF",
          672,
          "00",
          ,
          ,
          ,
          "([0-258]\\d{4})$",
          "3$1",
          ,
          ,
          [
            [, "(\\d{2})(\\d{4})", "$1 $2", ["1[0-3]"]],
            [, "(\\d)(\\d{5})", "$1 $2", ["[13]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NG: [
          ,
          [
            ,
            ,
            "(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}",
            ,
            ,
            ,
            ,
            ,
            ,
            [7, 8, 10, 11, 12, 13, 14],
            [5, 6]
          ],
          [
            ,
            ,
            "(?:(?:[1-356]\\d|4[02-8]|8[2-9])\\d|9(?:0[3-9]|[1-9]\\d))\\d{5}|7(?:0(?:[013-689]\\d|2[0-24-9])\\d{3,4}|[1-79]\\d{6})|(?:[12]\\d|4[147]|5[14579]|6[1578]|7[1-3578])\\d{5}",
            ,
            ,
            ,
            "18040123",
            ,
            ,
            [7, 8],
            [5, 6]
          ],
          [
            ,
            ,
            "(?:702[0-24-9]|819[01])\\d{6}|(?:70[13-689]|8(?:0[1-9]|1[0-8])|9(?:0[1-9]|1[1-356]))\\d{7}",
            ,
            ,
            ,
            "8021234567",
            ,
            ,
            [10]
          ],
          [, , "800\\d{7,11}", , , , "80017591759", , , [10, 11, 12, 13, 14]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NG",
          234,
          "009",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["78"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]|9(?:0[3-9]|[1-9])"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[3-7]|8[2-9]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[7-9]"], "0$1"],
            [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["[78]"], "0$1"],
            [, "(\\d{3})(\\d{5})(\\d{5,6})", "$1 $2 $3", ["[78]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "700\\d{7,11}", , , , "7001234567", , , [10, 11, 12, 13, 14]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NI: [
          ,
          [, , "(?:1800|[25-8]\\d{3})\\d{4}", , , , , , , [8]],
          [, , "2\\d{7}", , , , "21234567"],
          [
            ,
            ,
            "(?:5(?:5[0-7]|[78]\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\d)\\d)\\d{5}",
            ,
            ,
            ,
            "81234567"
          ],
          [, , "1800\\d{4}", , , , "18001234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NI",
          505,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{4})(\\d{4})", "$1 $2", ["[125-8]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NL: [
          ,
          [
            ,
            ,
            "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 7, 8, 9, 10, 11]
          ],
          [
            ,
            ,
            "(?:1(?:[035]\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\d\\d)\\d{6}",
            ,
            ,
            ,
            "101234567",
            ,
            ,
            [9]
          ],
          [, , "(?:6[1-58]|970\\d)\\d{7}", , , , "612345678", , , [9, 11]],
          [, , "800\\d{4,7}", , , , "8001234", , , [7, 8, 9, 10]],
          [, , "90[069]\\d{4,7}", , , , "9061234", , , [7, 8, 9, 10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:85|91)\\d{7}", , , , "851234567", , , [9]],
          "NL",
          31,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})", "$1", ["1[238]|[34]"]],
            [, "(\\d{2})(\\d{3,4})", "$1 $2", ["14"]],
            [, "(\\d{6})", "$1", ["1"]],
            [, "(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"],
            [, "(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-578]|91"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3", ["9"], "0$1"]
          ],
          [
            [, "(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"],
            [, "(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-578]|91"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3", ["9"], "0$1"]
          ],
          [, , "66\\d{7}", , , , "662345678", , , [9]],
          ,
          ,
          [
            ,
            ,
            "140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)\\d",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6]
          ],
          [
            ,
            ,
            "140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\d{6})\\d",
            ,
            ,
            ,
            "14020",
            ,
            ,
            [5, 6, 9]
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NO: [
          ,
          [, , "(?:0|[2-9]\\d{3})\\d{4}", , , , , , , [5, 8]],
          [, , "(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}", , , , "21234567", , , [8]],
          [, , "(?:4[015-8]|59|9\\d)\\d{6}", , , , "40612345", , , [8]],
          [, , "80[01]\\d{5}", , , , "80012345", , , [8]],
          [, , "82[09]\\d{5}", , , , "82012345", , , [8]],
          [, , "810(?:0[0-6]|[2-8]\\d)\\d{3}", , , , "81021234", , , [8]],
          [, , "880\\d{5}", , , , "88012345", , , [8]],
          [, , "85[0-5]\\d{5}", , , , "85012345", , , [8]],
          "NO",
          47,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[489]|59"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[235-7]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          1,
          "[02-689]|7[0-8]",
          [, , , , , , , , , [-1]],
          [, , "(?:0[2-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}", , , , "02000"],
          ,
          ,
          [, , "81[23]\\d{5}", , , , "81212345", , , [8]]
        ],
        NP: [
          ,
          [, , "(?:1\\d|9)\\d{9}|[1-9]\\d{7}", , , , , , , [8, 10, 11], [6, 7]],
          [
            ,
            ,
            "(?:1[0-6]\\d|99[02-6])\\d{5}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-7])[2-6]\\d{5}",
            ,
            ,
            ,
            "14567890",
            ,
            ,
            [8],
            [6, 7]
          ],
          [, , "9(?:6[0-3]|7[024-6]|8[0-24-68])\\d{7}", , , , "9841234567", , , [10]],
          [, , "1(?:66001|800\\d\\d)\\d{5}", , , , "16600101234", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NP",
          977,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"],
            [, "(\\d{2})(\\d{6})", "$1-$2", ["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"], "0$1"],
            [, "(\\d{3})(\\d{7})", "$1-$2", ["9"]],
            [, "(\\d{4})(\\d{2})(\\d{5})", "$1-$2-$3", ["1"]]
          ],
          [
            [, "(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"],
            [, "(\\d{2})(\\d{6})", "$1-$2", ["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"], "0$1"],
            [, "(\\d{3})(\\d{7})", "$1-$2", ["9"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NR: [
          ,
          [, , "(?:444|(?:55|8\\d)\\d|666)\\d{4}", , , , , , , [7]],
          [, , "444\\d{4}", , , , "4441234"],
          [, , "(?:55[3-9]|666|8\\d\\d)\\d{4}", , , , "5551234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NR",
          674,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[4-68]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NU: [
          ,
          [, , "(?:[47]|888\\d)\\d{3}", , , , , , , [4, 7]],
          [, , "[47]\\d{3}", , , , "7012", , , [4]],
          [, , "888[4-9]\\d{3}", , , , "8884012", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "NU",
          683,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["8"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        NZ: [
          ,
          [
            ,
            ,
            "[29]\\d{7,9}|50\\d{5}(?:\\d{2,3})?|6[0-35-9]\\d{6}|7\\d{7,8}|8\\d{4,9}|(?:11\\d|[34])\\d{7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 7, 8, 9, 10]
          ],
          [, , "24099\\d{3}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{6}", , , , "32345678", , , [8], [7]],
          [, , "2[0-27-9]\\d{7,8}|21\\d{6}", , , , "211234567", , , [8, 9, 10]],
          [, , "508\\d{6,7}|80\\d{6,8}", , , , "800123456", , , [8, 9, 10]],
          [, , "(?:11\\d{5}|50(?:0[08]|30|66|77|88))\\d{3}|90\\d{6,8}", , , , "900123456", , , [7, 8, 9, 10]],
          [, , , , , , , , , [-1]],
          [, , "70\\d{7}", , , , "701234567", , , [9]],
          [, , , , , , , , , [-1]],
          "NZ",
          64,
          "0(?:0|161)",
          "0",
          ,
          ,
          "0",
          ,
          "00",
          ,
          [
            [, "(\\d{2})(\\d{3,8})", "$1 $2", ["8[1-579]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["50[036-8]|[89]0", "50(?:[0367]|88)|[89]0"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["24|[346]|7[2-57-9]|9[2-9]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:10|74)|[59]|80"], "0$1"],
            [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1|2[028]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,5})", "$1 $2 $3", ["2(?:[169]|7[0-35-9])|7|86"], "0$1"]
          ],
          ,
          [, , "[28]6\\d{6,7}", , , , "26123456", , , [8, 9]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "8(?:1[6-9]|22|3\\d|4[045]|5[459]|7[0-3579]|90)\\d{2,7}", , , , "83012378"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        OM: [
          ,
          [, , "(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}", , , , , , , [7, 8, 9]],
          [, , "2[2-6]\\d{6}", , , , "23123456", , , [8]],
          [, , "1505\\d{4}|(?:7(?:[1289]\\d|7[0-5])|9(?:0[1-9]|[1-9]\\d))\\d{5}", , , , "92123456", , , [8]],
          [, , "8007\\d{4,5}|(?:500|800[05])\\d{4}", , , , "80071234"],
          [, , "900\\d{5}", , , , "90012345", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "OM",
          968,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4,6})", "$1 $2", ["[58]"]],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["2"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[179]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PA: [
          ,
          [, , "(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}", , , , , , , [7, 8, 10, 11]],
          [
            ,
            ,
            "(?:1(?:0\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[58]|7[0167]|8[2358]|9[1389])|2(?:[0235-79]\\d|1[0-7]|4[013-9]|8[02-9])|3(?:[089]\\d|1[0-7]|2[0-5]|33|4[0-79]|5[0-35]|6[068]|7[0-8])|4(?:00|3[0-579]|4\\d|7[0-57-9])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[056]|7[0-24-9]|8[5-9]|90)|8(?:09|2[89]|3\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\d))\\d{4}",
            ,
            ,
            ,
            "2001234",
            ,
            ,
            [7]
          ],
          [, , "(?:1[16]1|21[89]|6\\d{3}|8(?:1[01]|7[23]))\\d{4}", , , , "61234567", , , [7, 8]],
          [, , "800\\d{4,5}|(?:00800|800\\d)\\d{6}", , , , "8001234"],
          [, , "(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\d{4}", , , , "8601234", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "PA",
          507,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[1-57-9]"]],
            [, "(\\d{4})(\\d{4})", "$1-$2", ["[68]"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PE: [
          ,
          [, , "(?:[14-8]|9\\d)\\d{7}", , , , , , , [8, 9], [6, 7]],
          [
            ,
            ,
            "(?:(?:4[34]|5[14])[0-8]\\d|7(?:173|3[0-8]\\d)|8(?:10[05689]|6(?:0[06-9]|1[6-9]|29)|7(?:0[569]|[56]0)))\\d{4}|(?:1[0-8]|4[12]|5[236]|6[1-7]|7[246]|8[2-4])\\d{6}",
            ,
            ,
            ,
            "11234567",
            ,
            ,
            [8],
            [6, 7]
          ],
          [, , "9\\d{8}", , , , "912345678", , , [9]],
          [, , "800\\d{5}", , , , "80012345", , , [8]],
          [, , "805\\d{5}", , , , "80512345", , , [8]],
          [, , "801\\d{5}", , , , "80112345", , , [8]],
          [, , "80[24]\\d{5}", , , , "80212345", , , [8]],
          [, , , , , , , , , [-1]],
          "PE",
          51,
          "00|19(?:1[124]|77|90)00",
          "0",
          " Anexo ",
          ,
          "0",
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{5})", "$1 $2", ["80"], "(0$1)"],
            [, "(\\d)(\\d{7})", "$1 $2", ["1"], "(0$1)"],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["[4-8]"], "(0$1)"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PF: [
          ,
          [, , "4\\d{5}(?:\\d{2})?|8\\d{7,8}", , , , , , , [6, 8, 9]],
          [, , "4(?:0[4-689]|9[4-68])\\d{5}", , , , "40412345", , , [8]],
          [, , "8[7-9]\\d{6}", , , , "87123456", , , [8]],
          [, , "80[0-5]\\d{6}", , , , "800012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "499\\d{5}", , , , "49901234", , , [8]],
          "PF",
          689,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["44"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4|8[7-9]"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "44\\d{4}", , , , , , , [6]],
          [, , "44\\d{4}", , , , "440123", , , [6]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PG: [
          ,
          [, , "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}", , , , , , , [7, 8]],
          [, , "(?:(?:3[0-2]|4[257]|5[34]|9[78])\\d|64[1-9]|85[02-46-9])\\d{4}", , , , "3123456", , , [7]],
          [, , "(?:7\\d|8[128])\\d{6}", , , , "70123456", , , [8]],
          [, , "180\\d{4}", , , , "1801234", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "2(?:0[0-57]|7[568])\\d{4}", , , , "2751234", , , [7]],
          "PG",
          675,
          "00|140[1-3]",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["18|[2-69]|85"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[78]"]]
          ],
          ,
          [, , "27[01]\\d{4}", , , , "2700123", , , [7]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PH: [
          ,
          [
            ,
            ,
            "(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 8, 9, 10, 11, 12, 13],
            [4, 5, 7]
          ],
          [
            ,
            ,
            "(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\d{3}|88(?:22\\d\\d|42))\\d{4}|(?:2|8[2-8]\\d\\d)\\d{5}",
            ,
            ,
            ,
            "232345678",
            ,
            ,
            [6, 8, 9, 10],
            [4, 5, 7]
          ],
          [
            ,
            ,
            "(?:8(?:1[37]|9[5-8])|9(?:0[5-9]|1[0-24-9]|[235-7]\\d|4[2-9]|8[135-9]|9[1-9]))\\d{7}",
            ,
            ,
            ,
            "9051234567",
            ,
            ,
            [10]
          ],
          [, , "1800\\d{7,9}", , , , "180012345678", , , [11, 12, 13]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "PH",
          63,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{5})", "$1 $2", ["2"], "(0$1)"],
            [
              ,
              "(\\d{4})(\\d{4,6})",
              "$1 $2",
              [
                "3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2",
                "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"
              ],
              "(0$1)"
            ],
            [
              ,
              "(\\d{5})(\\d{4})",
              "$1 $2",
              ["346|4(?:27|9[35])|883", "3469|4(?:279|9(?:30|56))|8834"],
              "(0$1)"
            ],
            [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|8[2-8]"], "(0$1)"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
            [, "(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PK: [
          ,
          [
            ,
            ,
            "122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",
            ,
            ,
            ,
            ,
            ,
            ,
            [8, 9, 10, 11, 12],
            [5, 6, 7]
          ],
          [
            ,
            ,
            "(?:(?:21|42)[2-9]|58[126])\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\d{5,6}",
            ,
            ,
            ,
            "2123456789",
            ,
            ,
            [9, 10],
            [5, 6, 7, 8]
          ],
          [, , "3(?:[0-24]\\d|3[0-7]|55|64)\\d{7}", , , , "3012345678", , , [10]],
          [, , "800\\d{5}(?:\\d{3})?", , , , "80012345", , , [8, 11]],
          [, , "900\\d{5}", , , , "90012345", , , [8]],
          [, , , , , , , , , [-1]],
          [, , "122\\d{6}", , , , "122044444", , , [9]],
          [, , , , , , , , , [-1]],
          "PK",
          92,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})(\\d{2,7})", "$1 $2 $3", ["[89]0"], "0$1"],
            [, "(\\d{4})(\\d{5})", "$1 $2", ["1"]],
            [
              ,
              "(\\d{3})(\\d{6,7})",
              "$1 $2",
              [
                "2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])",
                "9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"
              ],
              "(0$1)"
            ],
            [
              ,
              "(\\d{2})(\\d{7,8})",
              "$1 $2",
              ["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],
              "(0$1)"
            ],
            [, "(\\d{5})(\\d{5})", "$1 $2", ["58"], "(0$1)"],
            [, "(\\d{3})(\\d{7})", "$1 $2", ["3"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{3})(\\d{3})",
              "$1 $2 $3 $4",
              ["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],
              "(0$1)"
            ],
            [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[24-9]"], "(0$1)"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}",
            ,
            ,
            ,
            "21111825888",
            ,
            ,
            [11, 12]
          ],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PL: [
          ,
          [, , "(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}", , , , , , , [6, 7, 8, 9, 10]],
          [
            ,
            ,
            "47\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\d{6}|1(?:[0-8]\\d{5}|9\\d{3}(?:\\d{2})?))",
            ,
            ,
            ,
            "123456789",
            ,
            ,
            [7, 9]
          ],
          [
            ,
            ,
            "21(?:1(?:[145]\\d|3[1-5])|2[0-4]\\d)\\d{4}|(?:45|5[0137]|6[069]|7[2389]|88)\\d{7}",
            ,
            ,
            ,
            "512345678",
            ,
            ,
            [9]
          ],
          [, , "800\\d{6,7}", , , , "800123456", , , [9, 10]],
          [, , "70[01346-8]\\d{6}", , , , "701234567", , , [9]],
          [, , "801\\d{6}", , , , "801234567", , , [9]],
          [, , , , , , , , , [-1]],
          [, , "39\\d{7}", , , , "391234567", , , [9]],
          "PL",
          48,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{5})", "$1", ["19"]],
            [, "(\\d{3})(\\d{3})", "$1 $2", ["11|20|64"]],
            [
              ,
              "(\\d{2})(\\d{2})(\\d{3})",
              "$1 $2 $3",
              [
                "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1",
                "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"
              ]
            ],
            [, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["64"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[2-8]|[2-7]|8[1-79]|9[145]"]],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , "64\\d{4,7}", , , , "641234567", , , [6, 7, 8, 9]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "804\\d{6}", , , , "804123456", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PM: [
          ,
          [, , "(?:[45]|80\\d\\d)\\d{5}", , , , , , , [6, 9]],
          [, , "(?:4[1-356]|50)\\d{4}", , , , "430123", , , [6]],
          [, , "(?:4[02-4]|5[056])\\d{4}", , , , "551234", , , [6]],
          [, , "80[0-5]\\d{6}", , , , "800012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "PM",
          508,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[45]"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PR: [
          ,
          [, , "(?:[589]\\d\\d|787)\\d{7}", , , , , , , [10], [7]],
          [, , "(?:787|939)[2-9]\\d{6}", , , , "7872345678", , , , [7]],
          [, , "(?:787|939)[2-9]\\d{6}", , , , "7872345678", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "PR",
          1,
          "011",
          "1",
          ,
          ,
          "1",
          ,
          ,
          1,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "787|939",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PS: [
          ,
          [, , "[2489]2\\d{6}|(?:1\\d|5)\\d{8}", , , , , , , [8, 9, 10], [7]],
          [, , "(?:22[2-47-9]|42[45]|82[014-68]|92[3569])\\d{5}", , , , "22234567", , , [8], [7]],
          [, , "5[69]\\d{7}", , , , "599123456", , , [9]],
          [, , "1800\\d{6}", , , , "1800123456", , , [10]],
          [, , , , , , , , , [-1]],
          [, , "1700\\d{6}", , , , "1700123456", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "PS",
          970,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2489]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["5"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PT: [
          ,
          [, , "1693\\d{5}|(?:[26-9]\\d|30)\\d{7}", , , , , , , [9]],
          [, , "2(?:[12]\\d|3[1-689]|4[1-59]|[57][1-9]|6[1-35689]|8[1-69]|9[1256])\\d{6}", , , , "212345678"],
          [
            ,
            ,
            "6(?:[06]92(?:30|9\\d)|[35]92(?:3[03]|9\\d))\\d{3}|(?:(?:16|6[0356])93|9(?:[1-36]\\d\\d|480))\\d{5}",
            ,
            ,
            ,
            "912345678"
          ],
          [, , "80[02]\\d{6}", , , , "800123456"],
          [, , "(?:6(?:0[178]|4[68])\\d|76(?:0[1-57]|1[2-47]|2[237]))\\d{5}", , , , "760123456"],
          [, , "80(?:8\\d|9[1579])\\d{5}", , , , "808123456"],
          [, , "884[0-4689]\\d{5}", , , , "884123456"],
          [, , "30\\d{7}", , , , "301234567"],
          "PT",
          351,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[12]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["16|[236-9]"]]
          ],
          ,
          [, , "6222\\d{5}", , , , "622212345"],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "70(?:7\\d|8[17])\\d{5}", , , , "707123456"],
          ,
          ,
          [, , "600\\d{6}|6[06]9233\\d{3}", , , , "600110000"]
        ],
        PW: [
          ,
          [, , "(?:[24-8]\\d\\d|345|900)\\d{4}", , , , , , , [7]],
          [
            ,
            ,
            "(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\d{4}",
            ,
            ,
            ,
            "2771234"
          ],
          [, , "(?:(?:46|83)[0-5]|6[2-4689]0)\\d{4}|(?:45|77|88)\\d{5}", , , , "6201234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "PW",
          680,
          "01[12]",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        PY: [
          ,
          [, , "59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}", , , , , , , [6, 7, 8, 9, 10, 11], [5]],
          [
            ,
            ,
            "(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\d|6[1-578]|75|8[0-8])|858)\\d{5,6}",
            ,
            ,
            ,
            "212345678",
            ,
            ,
            [7, 8, 9],
            [5, 6]
          ],
          [, , "9(?:51|6[129]|[78][1-6]|9[1-5])\\d{6}", , , , "961456789", , , [9]],
          [, , "9800\\d{5,7}", , , , "98000123456", , , [9, 10, 11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "8700[0-4]\\d{4}", , , , "870012345", , , [9]],
          "PY",
          595,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3,6})", "$1 $2", ["[2-9]0"], "0$1"],
            [, "(\\d{2})(\\d{5})", "$1 $2", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"],
            [
              ,
              "(\\d{3})(\\d{4,5})",
              "$1 $2",
              ["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],
              "(0$1)"
            ],
            [
              ,
              "(\\d{2})(\\d{3})(\\d{3,4})",
              "$1 $2 $3",
              ["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],
              "(0$1)"
            ],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["87"]],
            [, "(\\d{3})(\\d{6})", "$1 $2", ["9(?:[5-79]|8[1-6])"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "[2-9]0\\d{4,7}", , , , "201234567", , , [6, 7, 8, 9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        QA: [
          ,
          [, , "800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}", , , , , , , [7, 8, 9, 11]],
          [, , "4(?:1111|2022)\\d{3}|4(?:[04]\\d\\d|14[0-6]|999)\\d{4}", , , , "44123456", , , [8]],
          [, , "[35-7]\\d{7}", , , , "33123456", , , [8]],
          [, , "800\\d{4}|(?:0080[01]|800)\\d{6}", , , , "8001234", , , [7, 9, 11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "QA",
          974,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["2[16]|8"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[3-7]"]]
          ],
          ,
          [, , "2(?:1\\d|61)\\d{4}", , , , "2123456", , , [7]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        RE: [
          ,
          [, , "(?:26|[689]\\d)\\d{7}", , , , , , , [9]],
          [, , "26(?:2\\d\\d|3(?:0\\d|1[0-3]))\\d{4}", , , , "262161234"],
          [
            ,
            ,
            "(?:69(?:2\\d\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\d|5[0-5]|6[0-6]|7[0-27]|8[0-8]|9[0-479]))|9(?:399[0-2]|4790|76(?:2[27]|3[0-37]|9\\d)))\\d{4}",
            ,
            ,
            ,
            "692123456"
          ],
          [, , "80\\d{7}", , , , "801234567"],
          [, , "89[1-37-9]\\d{6}", , , , "891123456"],
          [, , "8(?:1[019]|2[0156]|84|90)\\d{6}", , , , "810123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "RE",
          262,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2689]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          1,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        RO: [
          ,
          [, , "(?:[2378]\\d|90)\\d{7}|[23]\\d{5}", , , , , , , [6, 9]],
          [, , "[23][13-6]\\d{7}|(?:2(?:19\\d|[3-6]\\d9)|31\\d\\d)\\d\\d", , , , "211234567"],
          [, , "7020\\d{5}|7(?:0[013-9]|1[0-3]|[2-7]\\d|8[03-8]|9[0-29])\\d{6}", , , , "712034567", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "90[0136]\\d{6}", , , , "900123456", , , [9]],
          [, , "801\\d{6}", , , , "801123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "RO",
          40,
          "00",
          "0",
          " int ",
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})", "$1 $2", ["2[3-6]", "2[3-6]\\d9"], "0$1"],
            [, "(\\d{2})(\\d{4})", "$1 $2", ["219|31"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23]1"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[237-9]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "(?:37\\d|80[578])\\d{6}", , , , "372123456", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        RS: [
          ,
          [
            ,
            ,
            "38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 11, 12],
            [4, 5]
          ],
          [
            ,
            ,
            "(?:11[1-9]\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\d))\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\d{4,9}",
            ,
            ,
            ,
            "10234567",
            ,
            ,
            [7, 8, 9, 10, 11, 12],
            [4, 5, 6]
          ],
          [, , "6(?:[0-689]|7\\d)\\d{6,7}", , , , "601234567", , , [8, 9, 10]],
          [, , "800\\d{3,9}", , , , "80012345"],
          [, , "(?:78\\d|90[0169])\\d{3,7}", , , , "90012345", , , [6, 7, 8, 9, 10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "RS",
          381,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3,9})", "$1 $2", ["(?:2[389]|39)0|[7-9]"], "0$1"],
            [, "(\\d{2})(\\d{5,10})", "$1 $2", ["[1-36]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "7[06]\\d{4,10}", , , , "700123456"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        RU: [
          ,
          [, , "8\\d{13}|[347-9]\\d{9}", , , , , , , [10, 14], [7]],
          [
            ,
            ,
            "(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}",
            ,
            ,
            ,
            "3011234567",
            ,
            ,
            [10],
            [7]
          ],
          [, , "9\\d{9}", , , , "9123456789", , , [10]],
          [, , "8(?:0[04]|108\\d{3})\\d{7}", , , , "8001234567"],
          [, , "80[39]\\d{7}", , , , "8091234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , "808\\d{7}", , , , "8081234567", , , [10]],
          [, , , , , , , , , [-1]],
          "RU",
          7,
          "810",
          "8",
          ,
          ,
          "8",
          ,
          "8~10",
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{2})", "$1-$2-$3", ["[0-79]"]],
            [
              ,
              "(\\d{4})(\\d{2})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              [
                "7(?:1[0-8]|2[1-9])",
                "7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))",
                "7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"
              ],
              "8 ($1)",
              ,
              1
            ],
            [
              ,
              "(\\d{5})(\\d)(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              [
                "7(?:1[0-68]|2[1-9])",
                "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))",
                "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"
              ],
              "8 ($1)",
              ,
              1
            ],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", , 1],
            [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[349]|8(?:[02-7]|1[1-8])"], "8 ($1)", , 1],
            [, "(\\d{4})(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["8"], "8 ($1)"]
          ],
          [
            [
              ,
              "(\\d{4})(\\d{2})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              [
                "7(?:1[0-8]|2[1-9])",
                "7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))",
                "7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"
              ],
              "8 ($1)",
              ,
              1
            ],
            [
              ,
              "(\\d{5})(\\d)(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              [
                "7(?:1[0-68]|2[1-9])",
                "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))",
                "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"
              ],
              "8 ($1)",
              ,
              1
            ],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", , 1],
            [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[349]|8(?:[02-7]|1[1-8])"], "8 ($1)", , 1],
            [, "(\\d{4})(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["8"], "8 ($1)"]
          ],
          [, , , , , , , , , [-1]],
          1,
          "3[04-689]|[489]",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        RW: [
          ,
          [, , "(?:06|[27]\\d\\d|[89]00)\\d{6}", , , , , , , [8, 9]],
          [, , "(?:06|2[23568]\\d)\\d{6}", , , , "250123456"],
          [, , "7[2389]\\d{7}", , , , "720123456", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "900\\d{6}", , , , "900123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "RW",
          250,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SA: [
          ,
          [, , "92\\d{7}|(?:[15]|8\\d)\\d{8}", , , , , , , [9, 10], [7]],
          [, , "1(?:1\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}", , , , "112345678", , , [9], [7]],
          [, , "579[01]\\d{5}|5(?:[013-689]\\d|7[0-35-8])\\d{6}", , , , "512345678", , , [9]],
          [, , "800\\d{7}", , , , "8001234567", , , [10]],
          [, , "925\\d{6}", , , , "925012345", , , [9]],
          [, , "920\\d{6}", , , , "920012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SA",
          966,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{5})", "$1 $2", ["9"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["81"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "811\\d{7}", , , , "8110123456", , , [10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SB: [
          ,
          [, , "(?:[1-6]|[7-9]\\d\\d)\\d{4}", , , , , , , [5, 7]],
          [, , "(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}", , , , "40123", , , [5]],
          [
            ,
            ,
            "48\\d{3}|(?:(?:7[1-9]|8[4-9])\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\d{4}",
            ,
            ,
            ,
            "7421234"
          ],
          [, , "1[38]\\d{3}", , , , "18123", , , [5]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "5[12]\\d{3}", , , , "51123", , , [5]],
          "SB",
          677,
          "0[01]",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{5})", "$1 $2", ["7|8[4-9]|9(?:[1-8]|9[0-8])"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SC: [
          ,
          [, , "800\\d{4}|(?:[249]\\d|64)\\d{5}", , , , , , , [7]],
          [, , "4[2-46]\\d{5}", , , , "4217123"],
          [, , "2[125-8]\\d{5}", , , , "2510123"],
          [, , "800[08]\\d{3}", , , , "8000000"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "971\\d{4}|(?:64|95)\\d{5}", , , , "6412345"],
          "SC",
          248,
          "010|0[0-2]",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[246]|9[57]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SD: [
          ,
          [, , "[19]\\d{8}", , , , , , , [9]],
          [, , "1(?:5\\d|8[35-7])\\d{6}", , , , "153123456"],
          [, , "(?:1[0-2]|9[0-3569])\\d{7}", , , , "911231234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SD",
          249,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[19]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SE: [
          ,
          [
            ,
            ,
            "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 12]
          ],
          [
            ,
            ,
            "(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\d)\\d|90[1-9])\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\d{5,6}",
            ,
            ,
            ,
            "8123456",
            ,
            ,
            [7, 8, 9]
          ],
          [, , "7[02369]\\d{7}", , , , "701234567", , , [9]],
          [, , "20\\d{4,7}", , , , "20123456", , , [6, 7, 8, 9]],
          [
            ,
            ,
            "649\\d{6}|99[1-59]\\d{4}(?:\\d{3})?|9(?:00|39|44)[1-8]\\d{3,6}",
            ,
            ,
            ,
            "9001234567",
            ,
            ,
            [7, 8, 9, 10]
          ],
          [, , "77[0-7]\\d{6}", , , , "771234567", , , [9]],
          [, , "75[1-8]\\d{6}", , , , "751234567", , , [9]],
          [, , , , , , , , , [-1]],
          "SE",
          46,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["20"], "0$1"],
            [, "(\\d{3})(\\d{4})", "$1-$2", ["9(?:00|39|44|9)"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})", "$1-$2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"], "0$1"],
            [, "(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1"],
            [
              ,
              "(\\d{3})(\\d{2,3})(\\d{2})",
              "$1-$2 $3",
              [
                "1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"
              ],
              "0$1"
            ],
            [, "(\\d{3})(\\d{2,3})(\\d{3})", "$1-$2 $3", ["9(?:00|39|44)"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})",
              "$1-$2 $3 $4",
              ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],
              "0$1"
            ],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["10|7"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1"],
            [
              ,
              "(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
              "$1-$2 $3 $4",
              ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],
              "0$1"
            ],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1-$2 $3 $4", ["9"], "0$1"],
            [, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4 $5", ["[26]"], "0$1"]
          ],
          [
            [, "(\\d{2})(\\d{2,3})(\\d{2})", "$1 $2 $3", ["20"]],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["9(?:00|39|44|9)"]],
            [, "(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"]],
            [, "(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]],
            [
              ,
              "(\\d{3})(\\d{2,3})(\\d{2})",
              "$1 $2 $3",
              [
                "1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"
              ]
            ],
            [, "(\\d{3})(\\d{2,3})(\\d{3})", "$1 $2 $3", ["9(?:00|39|44)"]],
            [
              ,
              "(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"]
            ],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["10|7"]],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["8"]],
            [
              ,
              "(\\d{3})(\\d{2})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"]
            ],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["9"]],
            [, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]"]]
          ],
          [, , "74[02-9]\\d{6}", , , , "740123456", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "10[1-8]\\d{6}", , , , "102345678", , , [9]],
          ,
          ,
          [, , "(?:25[245]|67[3-68])\\d{9}", , , , "254123456789", , , [12]]
        ],
        SG: [
          ,
          [, , "(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}", , , , , , , [8, 10, 11]],
          [, , "662[0-24-9]\\d{4}|6(?:[0-578]\\d|6[013-57-9]|9[0-35-9])\\d{5}", , , , "61234567", , , [8]],
          [
            ,
            ,
            "8(?:06[0-6]|95[0-2])\\d{4}|(?:8(?:0[1-5]|[1-8]\\d|9[0-4])|9[0-8]\\d)\\d{5}",
            ,
            ,
            ,
            "81234567",
            ,
            ,
            [8]
          ],
          [, , "(?:18|8)00\\d{7}", , , , "18001234567", , , [10, 11]],
          [, , "1900\\d{7}", , , , "19001234567", , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:3[12]\\d|666)\\d{5}", , , , "31234567", , , [8]],
          "SG",
          65,
          "0[0-3]\\d",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4,5})", "$1", ["1[013-9]|77", "1(?:[013-8]|9(?:0[1-9]|[1-9]))|77"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[369]|8(?:0[1-6]|[1-9])"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]],
            [, "(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
          ],
          [
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[369]|8(?:0[1-6]|[1-9])"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]],
            [, "(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]],
            [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "7000\\d{7}", , , , "70001234567", , , [11]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SH: [
          ,
          [, , "(?:[256]\\d|8)\\d{3}", , , , , , , [4, 5]],
          [, , "2(?:[0-57-9]\\d|6[4-9])\\d\\d", , , , "22158"],
          [, , "[56]\\d{4}", , , , "51234", , , [5]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "262\\d\\d", , , , "26212", , , [5]],
          "SH",
          290,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          1,
          "[256]",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SI: [
          ,
          [, , "[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}", , , , , , , [5, 6, 7, 8]],
          [, , "(?:[1-357][2-8]|4[24-8])\\d{6}", , , , "12345678", , , [8], [7]],
          [
            ,
            ,
            "65(?:[178]\\d|5[56]|6[01])\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\d{6}",
            ,
            ,
            ,
            "31234567",
            ,
            ,
            [8]
          ],
          [, , "80\\d{4,6}", , , , "80123456", , , [6, 7, 8]],
          [, , "89[1-3]\\d{2,5}|90\\d{4,6}", , , , "90123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "(?:59\\d\\d|8(?:1(?:[67]\\d|8[0-589])|2(?:0\\d|2[0-37-9]|8[0-2489])|3[389]\\d))\\d{4}",
            ,
            ,
            ,
            "59012345",
            ,
            ,
            [8]
          ],
          "SI",
          386,
          "00|10(?:22|66|88|99)",
          "0",
          ,
          ,
          "0",
          ,
          "00",
          ,
          [
            [, "(\\d{2})(\\d{3,6})", "$1 $2", ["8[09]|9"], "0$1"],
            [, "(\\d{3})(\\d{5})", "$1 $2", ["59|8"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37][01]|4[0139]|51|6"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-57]"], "(0$1)"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SJ: [
          ,
          [, , "0\\d{4}|(?:[489]\\d|[57]9)\\d{6}", , , , , , , [5, 8]],
          [, , "79\\d{6}", , , , "79123456", , , [8]],
          [, , "(?:4[015-8]|59|9\\d)\\d{6}", , , , "41234567", , , [8]],
          [, , "80[01]\\d{5}", , , , "80012345", , , [8]],
          [, , "82[09]\\d{5}", , , , "82012345", , , [8]],
          [, , "810(?:0[0-6]|[2-8]\\d)\\d{3}", , , , "81021234", , , [8]],
          [, , "880\\d{5}", , , , "88012345", , , [8]],
          [, , "85[0-5]\\d{5}", , , , "85012345", , , [8]],
          "SJ",
          47,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "79",
          [, , , , , , , , , [-1]],
          [, , "(?:0[2-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}", , , , "02000"],
          ,
          ,
          [, , "81[23]\\d{5}", , , , "81212345", , , [8]]
        ],
        SK: [
          ,
          [, , "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}", , , , , , , [6, 7, 9]],
          [
            ,
            ,
            "(?:2(?:16|[2-9]\\d{3})|(?:(?:[3-5][1-8]\\d|819)\\d|601[1-5])\\d)\\d{4}|(?:2|[3-5][1-8])1[67]\\d{3}|[3-5][1-8]16\\d\\d",
            ,
            ,
            ,
            "221234567"
          ],
          [, , "909[1-9]\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\d)\\d{6}", , , , "912123456", , , [9]],
          [, , "800\\d{6}", , , , "800123456", , , [9]],
          [, , "9(?:00|[78]\\d)\\d{6}", , , , "900123456", , , [9]],
          [, , "8[5-9]\\d{7}", , , , "850123456", , , [9]],
          [, , , , , , , , , [-1]],
          [, , "6(?:02|5[0-4]|9[0-6])\\d{6}", , , , "690123456", , , [9]],
          "SK",
          421,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"],
            [, "(\\d{4})(\\d{3})", "$1 $2", ["909", "9090"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]
          ],
          [
            [, "(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"],
            [, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"],
            [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]
          ],
          [, , "9090\\d{3}", , , , "9090123", , , [7]],
          ,
          ,
          [, , "9090\\d{3}|(?:602|8(?:00|[5-9]\\d)|9(?:00|[78]\\d))\\d{6}", , , , , , , [7, 9]],
          [, , "96\\d{7}", , , , "961234567", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SL: [
          ,
          [, , "(?:[237-9]\\d|66)\\d{6}", , , , , , , [8], [6]],
          [, , "22[2-4][2-9]\\d{4}", , , , "22221234", , , , [6]],
          [, , "(?:25|3[0-5]|66|7[2-9]|8[08]|9[09])\\d{6}", , , , "25123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SL",
          232,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{6})", "$1 $2", ["[236-9]"], "(0$1)"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SM: [
          ,
          [, , "(?:0549|[5-7]\\d)\\d{6}", , , , , , , [8, 10], [6]],
          [, , "0549(?:8[0157-9]|9\\d)\\d{4}", , , , "0549886377", , , [10], [6]],
          [, , "6[16]\\d{6}", , , , "66661212", , , [8]],
          [, , , , , , , , , [-1]],
          [, , "7[178]\\d{6}", , , , "71123456", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "5[158]\\d{6}", , , , "58001110", , , [8]],
          "SM",
          378,
          "00",
          ,
          ,
          ,
          "([89]\\d{5})$",
          "0549$1",
          ,
          ,
          [
            [, "(\\d{6})", "$1", ["[89]"]],
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]],
            [, "(\\d{4})(\\d{6})", "$1 $2", ["0"]]
          ],
          [
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]],
            [, "(\\d{4})(\\d{6})", "$1 $2", ["0"]]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SN: [
          ,
          [, , "(?:[378]\\d|93)\\d{7}", , , , , , , [9]],
          [, , "3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\d{5}", , , , "301012345"],
          [, , "7(?:(?:[06-8]\\d|21|90)\\d|5(?:01|[19]0|25|[38]3|[4-7]\\d))\\d{5}", , , , "701234567"],
          [, , "800\\d{6}", , , , "800123456"],
          [, , "88[4689]\\d{6}", , , , "884123456"],
          [, , "81[02468]\\d{6}", , , , "810123456"],
          [, , , , , , , , , [-1]],
          [, , "(?:3(?:392|9[01]\\d)\\d|93(?:3[13]0|929))\\d{4}", , , , "933301234"],
          "SN",
          221,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[379]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SO: [
          ,
          [, , "[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}", , , , , , , [6, 7, 8, 9]],
          [
            ,
            ,
            "(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\d{5}|(?:[134]\\d|8[125])\\d{4}",
            ,
            ,
            ,
            "4012345",
            ,
            ,
            [6, 7]
          ],
          [
            ,
            ,
            "(?:(?:15|(?:3[59]|4[89]|79|8[08])\\d|6(?:0[5-7]|[1-9]\\d)|9(?:0\\d|[2-9]))\\d|2(?:4\\d|8))\\d{5}|(?:[67]\\d\\d|904)\\d{5}",
            ,
            ,
            ,
            "71123456",
            ,
            ,
            [7, 8, 9]
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SO",
          252,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{4})", "$1 $2", ["8[125]"]],
            [, "(\\d{6})", "$1", ["[134]"]],
            [, "(\\d)(\\d{6})", "$1 $2", ["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],
            [, "(\\d)(\\d{7})", "$1 $2", ["(?:2|90)4|[67]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3478]|64|90"]],
            [, "(\\d{2})(\\d{5,7})", "$1 $2", ["1|28|6(?:0[5-7]|[1-35-9])|9[2-9]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SR: [
          ,
          [, , "(?:[2-5]|68|[78]\\d)\\d{5}", , , , , , , [6, 7]],
          [, , "(?:2[1-3]|3[0-7]|(?:4|68)\\d|5[2-58])\\d{4}", , , , "211234"],
          [, , "(?:7[124-7]|8[124-9])\\d{5}", , , , "7412345", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "56\\d{4}", , , , "561234", , , [6]],
          "SR",
          597,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})", "$1-$2-$3", ["56"]],
            [, "(\\d{3})(\\d{3})", "$1-$2", ["[2-5]"]],
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[6-8]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SS: [
          ,
          [, , "[19]\\d{8}", , , , , , , [9]],
          [, , "1[89]\\d{7}", , , , "181234567"],
          [, , "(?:12|9[1257-9])\\d{7}", , , , "977123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SS",
          211,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[19]"], "0$1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ST: [
          ,
          [, , "(?:22|9\\d)\\d{5}", , , , , , , [7]],
          [, , "22\\d{5}", , , , "2221234"],
          [, , "900[5-9]\\d{3}|9(?:0[1-9]|[89]\\d)\\d{4}", , , , "9812345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "ST",
          239,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[29]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SV: [
          ,
          [, , "[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?", , , , , , , [7, 8, 11]],
          [, , "2(?:[1-6]\\d{3}|[79]90[034]|890[0245])\\d{3}", , , , "21234567", , , [8]],
          [, , "66(?:[02-9]\\d\\d|1(?:[02-9]\\d|16))\\d{3}|(?:6[0-57-9]|7\\d)\\d{6}", , , , "70123456", , , [8]],
          [, , "800\\d{4}(?:\\d{4})?", , , , "8001234", , , [7, 11]],
          [, , "900\\d{4}(?:\\d{4})?", , , , "9001234", , , [7, 11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SV",
          503,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[89]"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[267]"]],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[89]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SX: [
          ,
          [, , "7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [, , "7215(?:4[2-8]|8[239]|9[056])\\d{4}", , , , "7215425678", , , , [7]],
          [, , "7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}", , , , "7215205678", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002123456"],
          [, , "900[2-9]\\d{6}", , , , "9002123456"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "SX",
          1,
          "011",
          "1",
          ,
          ,
          "(5\\d{6})$|1",
          "721$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "721",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SY: [
          ,
          [, , "[1-39]\\d{8}|[1-5]\\d{7}", , , , , , , [8, 9], [6, 7]],
          [
            ,
            ,
            "21\\d{6,7}|(?:1(?:[14]\\d|[2356])|2[235]|3(?:[13]\\d|4)|4[134]|5[1-3])\\d{6}",
            ,
            ,
            ,
            "112345678",
            ,
            ,
            ,
            [6, 7]
          ],
          [, , "9[1-689]\\d{7}", , , , "944567890", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "SY",
          963,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-5]"], "0$1", , 1],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1", , 1]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        SZ: [
          ,
          [, , "0800\\d{4}|(?:[237]\\d|900)\\d{6}", , , , , , , [8, 9]],
          [, , "[23][2-5]\\d{6}", , , , "22171234", , , [8]],
          [, , "7[6-9]\\d{6}", , , , "76123456", , , [8]],
          [, , "0800\\d{4}", , , , "08001234", , , [8]],
          [, , "900\\d{6}", , , , "900012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "70\\d{6}", , , , "70012345", , , [8]],
          "SZ",
          268,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[0237]"]],
            [, "(\\d{5})(\\d{4})", "$1 $2", ["9"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "0800\\d{4}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TA: [
          ,
          [, , "8\\d{3}", , , , , , , [4]],
          [, , "8\\d{3}", , , , "8999"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TA",
          290,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "8",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TC: [
          ,
          [, , "(?:[58]\\d\\d|649|900)\\d{7}", , , , , , , [10], [7]],
          [, , "649(?:266|712|9(?:4\\d|50))\\d{4}", , , , "6497121234", , , , [7]],
          [, , "649(?:2(?:3[129]|4[1-79])|3\\d\\d|4[34][1-3])\\d{4}", , , , "6492311234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , "649(?:71[01]|966)\\d{4}", , , , "6497101234", , , , [7]],
          "TC",
          1,
          "011",
          "1",
          ,
          ,
          "([2-479]\\d{6})$|1",
          "649$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "649",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TD: [
          ,
          [, , "(?:22|[69]\\d|77)\\d{6}", , , , , , , [8]],
          [, , "22(?:[37-9]0|5[0-5]|6[89])\\d{4}", , , , "22501234"],
          [, , "(?:6[0235689]|77|9\\d)\\d{6}", , , , "63012345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TD",
          235,
          "00|16",
          ,
          ,
          ,
          ,
          ,
          "00",
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2679]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TG: [
          ,
          [, , "[279]\\d{7}", , , , , , , [8]],
          [, , "2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\d{5}", , , , "22212345"],
          [, , "(?:7[019]|9[0-36-9])\\d{6}", , , , "90112345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TG",
          228,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[279]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TH: [
          ,
          [, , "(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}", , , , , , , [8, 9, 10, 13]],
          [, , "(?:1[0689]|2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}", , , , "21234567", , , [8]],
          [, , "671[0-8]\\d{5}|(?:14|6[1-6]|[89]\\d)\\d{7}", , , , "812345678", , , [9]],
          [, , "(?:001800\\d|1800)\\d{6}", , , , "1800123456", , , [10, 13]],
          [, , "1900\\d{6}", , , , "1900123456", , , [10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "6[08]\\d{7}", , , , "601234567", , , [9]],
          "TH",
          66,
          "00[1-9]",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[13-9]"], "0$1"],
            [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TJ: [
          ,
          [, , "(?:00|[1-57-9]\\d)\\d{7}", , , , , , , [9], [3, 5, 6, 7]],
          [
            ,
            ,
            "(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}",
            ,
            ,
            ,
            "372123456",
            ,
            ,
            ,
            [3, 5, 6, 7]
          ],
          [, , "41[18]\\d{6}|(?:[034]0|1[017]|2[02]|5[05]|7[0178]|8[078]|9\\d)\\d{7}", , , , "917123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TJ",
          992,
          "810",
          ,
          ,
          ,
          ,
          ,
          "8~10",
          ,
          [
            [, "(\\d{6})(\\d)(\\d{2})", "$1 $2 $3", ["331", "3317"]],
            [, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[34]7|91[78]"]],
            [, "(\\d{4})(\\d)(\\d{4})", "$1 $2 $3", ["3[1-5]"]],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[0-57-9]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TK: [
          ,
          [, , "[2-47]\\d{3,6}", , , , , , , [4, 5, 6, 7]],
          [, , "(?:2[2-4]|[34]\\d)\\d{2,5}", , , , "3101"],
          [, , "7[2-4]\\d{2,5}", , , , "7290"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TK",
          690,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TL: [
          ,
          [, , "7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}", , , , , , , [7, 8]],
          [, , "(?:2[1-5]|3[1-9]|4[1-4])\\d{5}", , , , "2112345", , , [7]],
          [, , "7[2-8]\\d{6}", , , , "77212345", , , [8]],
          [, , "80\\d{5}", , , , "8012345", , , [7]],
          [, , "90\\d{5}", , , , "9012345", , , [7]],
          [, , , , , , , , , [-1]],
          [, , "70\\d{5}", , , , "7012345", , , [7]],
          [, , , , , , , , , [-1]],
          "TL",
          670,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[2-489]|70"]],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["7"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TM: [
          ,
          [, , "[1-6]\\d{7}", , , , , , , [8]],
          [
            ,
            ,
            "(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}",
            ,
            ,
            ,
            "12345678"
          ],
          [, , "6\\d{7}", , , , "66123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TM",
          993,
          "810",
          "8",
          ,
          ,
          "8",
          ,
          "8~10",
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["12"], "(8 $1)"],
            [, "(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-5]"], "(8 $1)"],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["6"], "8 $1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TN: [
          ,
          [, , "[2-57-9]\\d{7}", , , , , , , [8]],
          [, , "81200\\d{3}|(?:3[0-2]|7\\d)\\d{6}", , , , "30010123"],
          [, , "3(?:001|[12]40)\\d{4}|(?:(?:[259]\\d|4[0-7])\\d|3(?:1[1-35]|6[0-4]|91))\\d{5}", , , , "20123456"],
          [, , "8010\\d{4}", , , , "80101234"],
          [, , "88\\d{6}", , , , "88123456"],
          [, , "8[12]10\\d{4}", , , , "81101234"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TN",
          216,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-57-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TO: [
          ,
          [, , "(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}", , , , , , , [5, 7]],
          [, , "(?:2\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\d{3}", , , , "20123", , , [5]],
          [, , "(?:55[4-6]|6(?:[09]\\d|3[02]|8[15-9])|(?:7\\d|8[46-9])\\d|999)\\d{4}", , , , "7715123", , , [7]],
          [, , "0800\\d{3}", , , , "0800222", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "55[0-37-9]\\d{4}", , , , "5510123", , , [7]],
          "TO",
          676,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})", "$1-$2", ["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],
            [, "(\\d{4})(\\d{3})", "$1 $2", ["0"]],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[5-9]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TR: [
          ,
          [, , "4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}", , , , , , , [7, 10, 12, 13]],
          [
            ,
            ,
            "(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}",
            ,
            ,
            ,
            "2123456789",
            ,
            ,
            [10]
          ],
          [, , "56161\\d{5}|5(?:0[15-7]|1[06]|24|[34]\\d|5[1-59]|9[46])\\d{7}", , , , "5012345678", , , [10]],
          [, , "8(?:00\\d{7}(?:\\d{2,3})?|11\\d{7})", , , , "8001234567", , , [10, 12, 13]],
          [, , "(?:8[89]8|900)\\d{7}", , , , "9001234567", , , [10]],
          [, , , , , , , , , [-1]],
          [, , "592(?:21[12]|461)\\d{4}", , , , "5922121234", , , [10]],
          [, , "850\\d{7}", , , , "8500123456", , , [10]],
          "TR",
          90,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d)(\\d{3})", "$1 $2 $3", ["444"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[01589]|90"], "0$1", , 1],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              ["5(?:[0-59]|61)", "5(?:[0-59]|616)", "5(?:[0-59]|6161)"],
              "0$1",
              ,
              1
            ],
            [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)", , 1],
            [, "(\\d{3})(\\d{3})(\\d{6,7})", "$1 $2 $3", ["80"], "0$1", , 1]
          ],
          [
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[01589]|90"], "0$1", , 1],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{2})(\\d{2})",
              "$1 $2 $3 $4",
              ["5(?:[0-59]|61)", "5(?:[0-59]|616)", "5(?:[0-59]|6161)"],
              "0$1",
              ,
              1
            ],
            [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)", , 1],
            [, "(\\d{3})(\\d{3})(\\d{6,7})", "$1 $2 $3", ["80"], "0$1", , 1]
          ],
          [, , "512\\d{7}", , , , "5123456789", , , [10]],
          ,
          ,
          [, , "(?:444|811\\d{3})\\d{4}", , , , , , , [7, 10]],
          [, , "444\\d{4}", , , , "4441444", , , [7]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TT: [
          ,
          [, , "(?:[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "868(?:2(?:01|1[5-9]|[23]\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}",
            ,
            ,
            ,
            "8682211234",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "868(?:(?:2[5-9]|3\\d)\\d|4(?:3[0-6]|[6-9]\\d)|6(?:20|78|8\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\d))\\d{4}",
            ,
            ,
            ,
            "8682911234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "TT",
          1,
          "011",
          "1",
          ,
          ,
          "([2-46-8]\\d{6})$|1",
          "868$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "868",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "868619\\d{4}", , , , "8686191234", , , , [7]]
        ],
        TV: [
          ,
          [, , "(?:2|7\\d\\d|90)\\d{4}", , , , , , , [5, 6, 7]],
          [, , "2[02-9]\\d{3}", , , , "20123", , , [5]],
          [, , "(?:7[01]\\d|90)\\d{4}", , , , "901234", , , [6, 7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "TV",
          688,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3})", "$1 $2", ["2"]],
            [, "(\\d{2})(\\d{4})", "$1 $2", ["90"]],
            [, "(\\d{2})(\\d{5})", "$1 $2", ["7"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TW: [
          ,
          [, , "[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}", , , , , , , [7, 8, 9, 10, 11]],
          [
            ,
            ,
            "(?:2[2-8]\\d|370|55[01]|7[1-9])\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\d)|1[023]\\d)\\d{4,5}|(?:[239]\\d\\d|4(?:0[56]|12|49))\\d{5})|6(?:[01]\\d{7}|4(?:0[56]|12|24|4[09])\\d{4,5})|8(?:(?:2(?:3\\d|4[0-269]|[578]0|66)|36[24-9]|90\\d\\d)\\d{4}|4(?:0[56]|12|24|4[09])\\d{4,5})|(?:2(?:2(?:0\\d\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\d|1[0-4])|(?:4\\d|5[0-49]|6[0-29]|7[0-5])\\d)\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\d\\d|4(?:2(?:[089]\\d|7[1-9])|(?:3[0-4]|[78]\\d|9[01])\\d))\\d)\\d{3}",
            ,
            ,
            ,
            "221234567",
            ,
            ,
            [8, 9]
          ],
          [, , "(?:40001[0-2]|9[0-8]\\d{4})\\d{3}", , , , "912345678", , , [9]],
          [, , "80[0-79]\\d{6}|800\\d{5}", , , , "800123456", , , [8, 9]],
          [, , "20(?:[013-9]\\d\\d|2)\\d{4}", , , , "203123456", , , [7, 9]],
          [, , , , , , , , , [-1]],
          [, , "99\\d{7}", , , , "990123456", , , [9]],
          [, , "7010(?:[0-2679]\\d|3[0-7]|8[0-5])\\d{5}|70\\d{8}", , , , "7012345678", , , [10, 11]],
          "TW",
          886,
          "0(?:0[25-79]|19)",
          "0",
          "#",
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d)(\\d{4})", "$1 $2 $3", ["202"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[258]0"], "0$1"],
            [
              ,
              "(\\d)(\\d{3,4})(\\d{4})",
              "$1 $2 $3",
              ["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]", "[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],
              "0$1"
            ],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"], "0$1"],
            [, "(\\d{2})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["7"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "50[0-46-9]\\d{6}", , , , "500123456", , , [9]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        TZ: [
          ,
          [, , "(?:[25-8]\\d|41|90)\\d{7}", , , , , , , [9]],
          [, , "2[2-8]\\d{7}", , , , "222345678"],
          [, , "77[2-9]\\d{6}|(?:6[125-9]|7[13-689])\\d{7}", , , , "621234567"],
          [, , "80[08]\\d{6}", , , , "800123456"],
          [, , "90\\d{7}", , , , "900123456"],
          [, , "8(?:40|6[01])\\d{6}", , , , "840123456"],
          [, , , , , , , , , [-1]],
          [, , "41\\d{7}", , , , "412345678"],
          "TZ",
          255,
          "00[056]",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[24]"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["5"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[67]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "(?:8(?:[04]0|6[01])|90\\d)\\d{6}"],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        UA: [
          ,
          [, , "[89]\\d{9}|[3-9]\\d{8}", , , , , , , [9, 10], [5, 6, 7]],
          [, , "(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}", , , , "311234567", , , [9], [5, 6, 7]],
          [, , "(?:39|50|6[36-8]|7[1-3]|9[1-9])\\d{7}", , , , "501234567", , , [9]],
          [, , "800[1-8]\\d{5,6}", , , , "800123456"],
          [, , "900[239]\\d{5,6}", , , , "900212345"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "89[1-579]\\d{6}", , , , "891234567", , , [9]],
          "UA",
          380,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          "0~0",
          ,
          [
            [
              ,
              "(\\d{3})(\\d{3})(\\d{3})",
              "$1 $2 $3",
              [
                "6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]",
                "6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"
              ],
              "0$1"
            ],
            [
              ,
              "(\\d{4})(\\d{5})",
              "$1 $2",
              [
                "3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])",
                "3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"
              ],
              "0$1"
            ],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|89|9[1-9]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        UG: [
          ,
          [, , "800\\d{6}|(?:[29]0|[347]\\d)\\d{7}", , , , , , , [9], [5, 6, 7]],
          [
            ,
            ,
            "20(?:(?:240|30[67])\\d|6(?:00[0-2]|30[0-4]))\\d{3}|(?:20(?:[017]\\d|2[5-9]|32|5[0-4]|6[15-9])|[34]\\d{3})\\d{5}",
            ,
            ,
            ,
            "312345678",
            ,
            ,
            ,
            [5, 6, 7]
          ],
          [, , "726[01]\\d{5}|7(?:[01578]\\d|20|36|[46][0-4]|9[89])\\d{6}", , , , "712345678"],
          [, , "800[1-3]\\d{5}", , , , "800123456"],
          [, , "90[1-3]\\d{6}", , , , "901123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "UG",
          256,
          "00[057]",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{4})(\\d{5})", "$1 $2", ["202", "2024"], "0$1"],
            [, "(\\d{3})(\\d{6})", "$1 $2", ["[27-9]|4(?:6[45]|[7-9])"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["[34]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        US: [
          ,
          [, , "[2-9]\\d{9}|3\\d{6}", , , , , , , [10], [7]],
          [
            ,
            ,
            "(?:47220[01]|5(?:05(?:[2-57-9]\\d\\d|6(?:[0-35-9]\\d|4[46]))|57200))\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}",
            ,
            ,
            ,
            "2015550123",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "(?:47220[01]|5(?:05(?:[2-57-9]\\d\\d|6(?:[0-35-9]\\d|4[46]))|57200))\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}",
            ,
            ,
            ,
            "2015550123",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "US",
          1,
          "011",
          "1",
          ,
          ,
          "1",
          ,
          ,
          1,
          [
            [, "(\\d{3})(\\d{4})", "$1-$2", ["310"], , , 1],
            [, "(\\d{3})(\\d{4})", "$1-$2", ["[24-9]|3(?:[02-9]|1[1-9])"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "($1) $2-$3", ["[2-9]"], , , 1]
          ],
          [
            [, "(\\d{3})(\\d{4})", "$1-$2", ["310"], , , 1],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-9]"]]
          ],
          [, , , , , , , , , [-1]],
          1,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        UY: [
          ,
          [, , "(?:0004|4)\\d{9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}", , , , , , , [7, 8, 10, 13]],
          [, , "(?:1(?:770|987)|(?:2\\d|4[2-7])\\d\\d)\\d{4}", , , , "21231234", , , [8], [7]],
          [, , "9[1-9]\\d{6}", , , , "94231234", , , [8]],
          [, , "(?:(?:0004|4)\\d{5}|80[05])\\d{4}|405\\d{4}", , , , "8001234", , , [7, 10, 13]],
          [, , "90[0-8]\\d{4}", , , , "9001234", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "UY",
          598,
          "0(?:0|1[3-9]\\d)",
          "0",
          " int. ",
          ,
          "0",
          ,
          "00",
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["405|8|90"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"],
            [, "(\\d{4})(\\d{4})", "$1 $2", ["[124]"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["4"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        UZ: [
          ,
          [, , "(?:33|[5-79]\\d|88)\\d{7}", , , , , , , [9]],
          [
            ,
            ,
            "(?:55\\d\\d|6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\d\\d|7(?:[23]\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|(?:1[12]|8\\d)\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\d{5}",
            ,
            ,
            ,
            "669050123"
          ],
          [
            ,
            ,
            "(?:(?:33|50|88|9[0-57-9])\\d{3}|6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:(?:11|7\\d)\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\d)\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\d|7[0-4])|(?:5[67]|7\\d)\\d|6(?:2[0-26]|8\\d)))|7(?:[07]\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\d|41[179]|5(?:[349]\\d|5[0-2])|7(?:0[017]|[13]\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07]))))\\d{4}",
            ,
            ,
            ,
            "912345678"
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "UZ",
          998,
          "810",
          "8",
          ,
          ,
          "8",
          ,
          "8~10",
          ,
          [[, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[35-9]"], "8 $1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        VA: [
          ,
          [
            ,
            ,
            "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",
            ,
            ,
            ,
            ,
            ,
            ,
            [6, 7, 8, 9, 10, 11, 12]
          ],
          [, , "06698\\d{1,6}", , , , "0669812345", , , [6, 7, 8, 9, 10, 11]],
          [, , "3[1-9]\\d{8}|3[2-9]\\d{7}", , , , "3123456789", , , [9, 10]],
          [, , "80(?:0\\d{3}|3)\\d{3}", , , , "800123456", , , [6, 9]],
          [
            ,
            ,
            "(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",
            ,
            ,
            ,
            "899123456",
            ,
            ,
            [6, 8, 9, 10]
          ],
          [, , "84(?:[08]\\d{3}|[17])\\d{3}", , , , "848123456", , , [6, 9]],
          [, , "1(?:78\\d|99)\\d{6}", , , , "1781234567", , , [9, 10]],
          [, , "55\\d{8}", , , , "5512345678", , , [10]],
          "VA",
          39,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "06698",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "3[2-8]\\d{9,10}", , , , "33101234501", , , [11, 12]]
        ],
        VC: [
          ,
          [, , "(?:[58]\\d\\d|784|900)\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "784(?:266|3(?:6[6-9]|7\\d|8[0-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}",
            ,
            ,
            ,
            "7842661234",
            ,
            ,
            ,
            [7]
          ],
          [, , "784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4])|720)\\d{4}", , , , "7844301234", , , , [7]],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , "78451[0-2]\\d{4}", , , , "7845101234", , , , [7]],
          "VC",
          1,
          "011",
          "1",
          ,
          ,
          "([2-7]\\d{6})$|1",
          "784$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "784",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        VE: [
          ,
          [, , "[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}", , , , , , , [10], [7]],
          [, , "(?:2(?:12|3[457-9]|[467]\\d|[58][1-9]|9[1-6])|[4-6]00)\\d{7}", , , , "2121234567", , , , [7]],
          [, , "4(?:1[24-8]|2[46])\\d{7}", , , , "4121234567"],
          [, , "800\\d{7}", , , , "8001234567"],
          [, , "90[01]\\d{7}", , , , "9001234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "VE",
          58,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{7})", "$1-$2", ["[24-689]"], "0$1", "$CC $1"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "501\\d{7}", , , , "5010123456", , , , [7]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        VG: [
          ,
          [, , "(?:284|[58]\\d\\d|900)\\d{7}", , , , , , , [10], [7]],
          [, , "284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\d{4}", , , , "2842291234", , , , [7]],
          [
            ,
            ,
            "284(?:245|3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|9[69])|5(?:4[0-7]|68|9[69]))\\d{4}",
            ,
            ,
            ,
            "2843001234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "VG",
          1,
          "011",
          "1",
          ,
          ,
          "([2-578]\\d{6})$|1",
          "284$1",
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "284",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        VI: [
          ,
          [, , "[58]\\d{9}|(?:34|90)0\\d{7}", , , , , , , [10], [7]],
          [
            ,
            ,
            "340(?:2(?:0[0-368]|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\d)|884|998)\\d{4}",
            ,
            ,
            ,
            "3406421234",
            ,
            ,
            ,
            [7]
          ],
          [
            ,
            ,
            "340(?:2(?:0[0-368]|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\d)|884|998)\\d{4}",
            ,
            ,
            ,
            "3406421234",
            ,
            ,
            ,
            [7]
          ],
          [, , "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", , , , "8002345678"],
          [, , "900[2-9]\\d{6}", , , , "9002345678"],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}",
            ,
            ,
            ,
            "5002345678"
          ],
          [, , , , , , , , , [-1]],
          "VI",
          1,
          "011",
          "1",
          ,
          ,
          "([2-9]\\d{6})$|1",
          "340$1",
          ,
          1,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "340",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        VN: [
          ,
          [, , "[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}", , , , , , , [7, 8, 9, 10]],
          [
            ,
            ,
            "2(?:0[3-9]|1[0-689]|2[0-25-9]|[38][2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|9[0-4679])\\d{7}",
            ,
            ,
            ,
            "2101234567",
            ,
            ,
            [10]
          ],
          [
            ,
            ,
            "(?:5(?:2[238]|59)|89[6-9]|99[013-9])\\d{6}|(?:3\\d|5[689]|7[06-9]|8[1-8]|9[0-8])\\d{7}",
            ,
            ,
            ,
            "912345678",
            ,
            ,
            [9]
          ],
          [, , "1800\\d{4,6}|12(?:0[13]|28)\\d{4}", , , , "1800123456", , , [8, 9, 10]],
          [, , "1900\\d{4,6}", , , , "1900123456", , , [8, 9, 10]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "672\\d{6}", , , , "672012345", , , [9]],
          "VN",
          84,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{4})", "$1 $2", ["[17]99"], "0$1", , 1],
            [, "(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", , 1],
            [, "(\\d{3})(\\d{4,5})", "$1 $2", ["69"], "0$1", , 1],
            [, "(\\d{4})(\\d{4,6})", "$1 $2", ["1"], , , 1],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1", , 1],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1", , 1],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", , 1],
            [, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", , 1]
          ],
          [
            [, "(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", , 1],
            [, "(\\d{4})(\\d{4,6})", "$1 $2", ["1"], , , 1],
            [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1", , 1],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1", , 1],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", , 1],
            [, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", , 1]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "[17]99\\d{4}|69\\d{5,6}", , , , , , , [7, 8]],
          [, , "(?:[17]99|80\\d)\\d{4}|69\\d{5,6}", , , , "1992000", , , [7, 8]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        VU: [
          ,
          [, , "[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}", , , , , , , [5, 7]],
          [, , "(?:38[0-8]|48[4-9])\\d\\d|(?:2[02-9]|3[4-7]|88)\\d{3}", , , , "22123", , , [5]],
          [, , "(?:[58]\\d|7[013-7])\\d{5}", , , , "5912345", , , [7]],
          [, , "81[18]\\d\\d", , , , "81123", , , [5]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "9(?:0[1-9]|1[01])\\d{4}", , , , "9010123", , , [7]],
          "VU",
          678,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{4})", "$1 $2", ["[57-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "(?:3[03]|900\\d)\\d{3}", , , , "30123"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        WF: [
          ,
          [, , "(?:40|72)\\d{4}|8\\d{5}(?:\\d{3})?", , , , , , , [6, 9]],
          [, , "72\\d{4}", , , , "721234", , , [6]],
          [, , "(?:72|8[23])\\d{4}", , , , "821234", , , [6]],
          [, , "80[0-5]\\d{6}", , , , "800012345", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "WF",
          681,
          "00",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[478]"]],
            [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "[48]0\\d{4}", , , , "401234", , , [6]]
        ],
        WS: [
          ,
          [, , "(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}", , , , , , , [5, 6, 7, 10]],
          [, , "6[1-9]\\d{3}|(?:[2-5]|60)\\d{4}", , , , "22123", , , [5, 6]],
          [, , "(?:7[1-35-7]|8(?:[3-7]|9\\d{3}))\\d{5}", , , , "7212345", , , [7, 10]],
          [, , "800\\d{3}", , , , "800123", , , [6]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "WS",
          685,
          "0",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{5})", "$1", ["[2-5]|6[1-9]"]],
            [, "(\\d{3})(\\d{3,7})", "$1 $2", ["[68]"]],
            [, "(\\d{2})(\\d{5})", "$1 $2", ["7"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        XK: [
          ,
          [, , "[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}", , , , , , , [8, 9]],
          [, , "(?:2[89]|39)0\\d{6}|[23][89]\\d{6}", , , , "28012345"],
          [, , "4[3-9]\\d{6}", , , , "43201234", , , [8]],
          [, , "800\\d{5}", , , , "80001234", , , [8]],
          [, , "900\\d{5}", , , , "90001234", , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "XK",
          383,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-4]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[23]"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        YE: [
          ,
          [, , "(?:1|7\\d)\\d{7}|[1-7]\\d{6}", , , , , , , [7, 8, 9], [6]],
          [
            ,
            ,
            "78[0-7]\\d{4}|17\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-6])\\d{5}",
            ,
            ,
            ,
            "1234567",
            ,
            ,
            [7, 8],
            [6]
          ],
          [, , "7[01378]\\d{7}", , , , "712345678", , , [9]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "YE",
          967,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-6]|7(?:[24-6]|8[0-7])"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        YT: [
          ,
          [, , "(?:(?:(?:26|63)9|80\\d)\\d\\d|93980)\\d{4}", , , , , , , [9]],
          [, , "269(?:0[0-467]|5[0-3]|6\\d|[78]0)\\d{4}", , , , "269601234"],
          [, , "(?:639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])|93980)\\d{4}", , , , "639012345"],
          [, , "80\\d{7}", , , , "801234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "YT",
          262,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          ,
          ,
          [, , , , , , , , , [-1]],
          ,
          "269|63|9398",
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ZA: [
          ,
          [, , "[1-79]\\d{8}|8\\d{4,9}", , , , , , , [5, 6, 7, 8, 9, 10]],
          [
            ,
            ,
            "(?:2(?:0330|4302)|52087)0\\d{3}|(?:1[0-8]|2[1-378]|3[1-69]|4\\d|5[1346-8])\\d{7}",
            ,
            ,
            ,
            "101234567",
            ,
            ,
            [9]
          ],
          [
            ,
            ,
            "(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\d{3}|8[1-4]\\d{3,7}|(?:2[27]|47|54)4950\\d{3}|(?:1(?:049[2-4]|9[12]\\d\\d)|(?:6\\d|7[0-46-9])\\d{3}|8(?:5\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\d{3}|(?:12|[2-5]1)492\\d{4}",
            ,
            ,
            ,
            "711234567",
            ,
            ,
            [5, 6, 7, 8, 9]
          ],
          [, , "80\\d{7}", , , , "801234567", , , [9]],
          [, , "(?:86[2-9]|9[0-2]\\d)\\d{6}", , , , "862345678", , , [9]],
          [, , "860\\d{6}", , , , "860123456", , , [9]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\d)\\d{5}",
            ,
            ,
            ,
            "871234567",
            ,
            ,
            [9]
          ],
          "ZA",
          27,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{3,4})", "$1 $2", ["8[1-4]"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["8[1-4]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["860"], "0$1"],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-9]"], "0$1"],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "861\\d{6,7}", , , , "861123456", , , [9, 10]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ZM: [
          ,
          [, , "800\\d{6}|(?:21|63|[79]\\d)\\d{7}", , , , , , , [9], [6]],
          [, , "21[1-8]\\d{6}", , , , "211234567", , , , [6]],
          [, , "(?:7[5-79]|9[5-8])\\d{7}", , , , "955123456"],
          [, , "800\\d{6}", , , , "800123456"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "63\\d{7}", , , , "630123456"],
          "ZM",
          260,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [, "(\\d{3})(\\d{3})", "$1 $2", ["[1-9]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]
          ],
          [
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"],
            [, "(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]
          ],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        ZW: [
          ,
          [
            ,
            ,
            "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",
            ,
            ,
            ,
            ,
            ,
            ,
            [5, 6, 7, 8, 9, 10],
            [3, 4]
          ],
          [
            ,
            ,
            "(?:1(?:(?:3\\d|9)\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\d\\d|[56](?:[14]\\d\\d|20)|7(?:[089]|2[03]|[35]\\d\\d))\\d|4(?:2\\d\\d|8))\\d|1(?:2|[39]\\d{4}))|3(?:(?:123|(?:29\\d|92)\\d)\\d\\d|7(?:[19]|[56]\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\d{3}|83)|5(?:25\\d\\d|[78])|[689]\\d)|6(?:(?:[16-8]21|28|52[013])\\d\\d|[39])|8(?:[1349]28|523)\\d\\d)\\d{3}|(?:4\\d\\d|9[2-9])\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\d|7[1-7])\\d|2(?:[278]\\d|92)|58(?:2\\d|3))|3(?:[26]|9\\d{3})|5(?:4\\d|5)\\d\\d)\\d|6(?:(?:(?:[0-246]|[78]\\d)\\d|37)\\d|5[2-8]))\\d\\d|(?:2(?:[569]\\d|8[2-57-9])|3(?:[013-59]\\d|8[37])|6[89]8)\\d{3}",
            ,
            ,
            ,
            "1312345",
            ,
            ,
            ,
            [3, 4]
          ],
          [, , "7(?:[178]\\d|3[1-9])\\d{6}", , , , "712345678", , , [9]],
          [, , "80(?:[01]\\d|20|8[0-8])\\d{3}", , , , "8001234", , , [7]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "86(?:1[12]|22|30|44|55|77|8[368])\\d{6}", , , , "8686123456", , , [10]],
          "ZW",
          263,
          "00",
          "0",
          ,
          ,
          "0",
          ,
          ,
          ,
          [
            [
              ,
              "(\\d{3})(\\d{3,5})",
              "$1 $2",
              ["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],
              "0$1"
            ],
            [, "(\\d)(\\d{3})(\\d{2,4})", "$1 $2 $3", ["[49]"], "0$1"],
            [, "(\\d{3})(\\d{4})", "$1 $2", ["80"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{7})",
              "$1 $2",
              [
                "24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2",
                "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"
              ],
              "(0$1)"
            ],
            [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
            [
              ,
              "(\\d{3})(\\d{3})(\\d{3,4})",
              "$1 $2 $3",
              [
                "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)",
                "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"
              ],
              "0$1"
            ],
            [, "(\\d{4})(\\d{6})", "$1 $2", ["8"], "0$1"],
            [
              ,
              "(\\d{2})(\\d{3,5})",
              "$1 $2",
              [
                "1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"
              ],
              "0$1"
            ],
            [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["29[013-9]|39|54"], "0$1"],
            [, "(\\d{4})(\\d{3,5})", "$1 $2", ["(?:25|54)8", "258|5483"], "0$1"]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        800: [
          ,
          [, , "(?:00|[1-9]\\d)\\d{6}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "(?:00|[1-9]\\d)\\d{6}", , , , "12345678"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "001",
          800,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [[, "(\\d{4})(\\d{4})", "$1 $2", ["\\d"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        808: [
          ,
          [, , "[1-9]\\d{7}", , , , , , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "[1-9]\\d{7}", , , , "12345678"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "001",
          808,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [[, "(\\d{4})(\\d{4})", "$1 $2", ["[1-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        870: [
          ,
          [, , "7\\d{11}|[35-7]\\d{8}", , , , , , , [9, 12]],
          [, , , , , , , , , [-1]],
          [, , "(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}", , , , "301234567"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "001",
          870,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[35-7]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        878: [
          ,
          [, , "10\\d{10}", , , , , , , [12]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "10\\d{10}", , , , "101234567890"],
          "001",
          878,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [[, "(\\d{2})(\\d{5})(\\d{5})", "$1 $2 $3", ["1"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        881: [
          ,
          [, , "[0-36-9]\\d{8}", , , , , , , [9]],
          [, , , , , , , , , [-1]],
          [, , "[0-36-9]\\d{8}", , , , "612345678"],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "001",
          881,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [[, "(\\d)(\\d{3})(\\d{5})", "$1 $2 $3", ["[0-36-9]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        882: [
          ,
          [
            ,
            ,
            "[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",
            ,
            ,
            ,
            ,
            ,
            ,
            [7, 8, 9, 10, 11, 12]
          ],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}",
            ,
            ,
            ,
            "3421234",
            ,
            ,
            [7, 8, 9, 10, 12]
          ],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}",
            ,
            ,
            ,
            "390123456789"
          ],
          "001",
          882,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          [
            [, "(\\d{2})(\\d{5})", "$1 $2", ["16|342"]],
            [, "(\\d{2})(\\d{6})", "$1 $2", ["49"]],
            [, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["1[36]|9"]],
            [, "(\\d{2})(\\d{4})(\\d{3})", "$1 $2 $3", ["3[23]"]],
            [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["16"]],
            [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|23|3(?:[15]|4[57])|4|51"]],
            [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["34"]],
            [, "(\\d{2})(\\d{4,5})(\\d{5})", "$1 $2 $3", ["[1-35]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , "348[57]\\d{7}", , , , "34851234567", , , [11]]
        ],
        883: [
          ,
          [, , "(?:[1-4]\\d|51)\\d{6,10}", , , , , , , [8, 9, 10, 11, 12]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [
            ,
            ,
            "(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}",
            ,
            ,
            ,
            "510012345"
          ],
          "001",
          883,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [
            [, "(\\d{3})(\\d{3})(\\d{2,8})", "$1 $2 $3", ["[14]|2[24-689]|3[02-689]|51[24-9]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["510"]],
            [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["21"]],
            [, "(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["51[13]"]],
            [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[235]"]]
          ],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        888: [
          ,
          [, , "\\d{11}", , , , , , , [11]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "001",
          888,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [[, "(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , "\\d{11}", , , , "12345678901"],
          ,
          ,
          [, , , , , , , , , [-1]]
        ],
        979: [
          ,
          [, , "[1359]\\d{8}", , , , , , , [9], [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , "[1359]\\d{8}", , , , "123456789", , , , [8]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          "001",
          979,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          1,
          [[, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[1359]"]]],
          ,
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]],
          [, , , , , , , , , [-1]],
          ,
          ,
          [, , , , , , , , , [-1]]
        ]
      };
      function K() {
        this.g = {};
      }
      K.i = void 0;
      K.g = function() {
        return K.i ? K.i : K.i = new K();
      };
      var wa = {
        0: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        "\uFF10": "0",
        "\uFF11": "1",
        "\uFF12": "2",
        "\uFF13": "3",
        "\uFF14": "4",
        "\uFF15": "5",
        "\uFF16": "6",
        "\uFF17": "7",
        "\uFF18": "8",
        "\uFF19": "9",
        "\u0660": "0",
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u06F0": "0",
        "\u06F1": "1",
        "\u06F2": "2",
        "\u06F3": "3",
        "\u06F4": "4",
        "\u06F5": "5",
        "\u06F6": "6",
        "\u06F7": "7",
        "\u06F8": "8",
        "\u06F9": "9"
      }, xa = {
        0: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        "\uFF10": "0",
        "\uFF11": "1",
        "\uFF12": "2",
        "\uFF13": "3",
        "\uFF14": "4",
        "\uFF15": "5",
        "\uFF16": "6",
        "\uFF17": "7",
        "\uFF18": "8",
        "\uFF19": "9",
        "\u0660": "0",
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u06F0": "0",
        "\u06F1": "1",
        "\u06F2": "2",
        "\u06F3": "3",
        "\u06F4": "4",
        "\u06F5": "5",
        "\u06F6": "6",
        "\u06F7": "7",
        "\u06F8": "8",
        "\u06F9": "9",
        A: "2",
        B: "2",
        C: "2",
        D: "3",
        E: "3",
        F: "3",
        G: "4",
        H: "4",
        I: "4",
        J: "5",
        K: "5",
        L: "5",
        M: "6",
        N: "6",
        O: "6",
        P: "7",
        Q: "7",
        R: "7",
        S: "7",
        T: "8",
        U: "8",
        V: "8",
        W: "9",
        X: "9",
        Y: "9",
        Z: "9"
      }, L = /^[+\uff0b]+/, ya = /([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9])/, za = /[+\uff0b0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]/, Aa = /[\\\/] *x/, Ba = /[^0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9A-Za-z#]+$/, Ca = /(?:.*?[A-Za-z]){3}.*/;
      function N(a) {
        return "([0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9]{1," + a + "})";
      }
      function Da() {
        return ";ext=" + N("20") + "|[ \xA0\\t,]*(?:e?xt(?:ensi(?:o\u0301?|\xF3))?n?|\uFF45?\uFF58\uFF54\uFF4E?|\u0434\u043E\u0431|anexo)[:\\.\uFF0E]?[ \xA0\\t,-]*" + (N("20") + "#?|[ \xA0\\t,]*(?:[x\uFF58#\uFF03~\uFF5E]|int|\uFF49\uFF4E\uFF54)[:\\.\uFF0E]?[ \xA0\\t,-]*") + (N("9") + "#?|[- ]+") + (N("6") + "#|[ \xA0\\t]*(?:,{2}|;)[:\\.\uFF0E]?[ \xA0\\t,-]*") + (N("15") + "#?|[ \xA0\\t]*(?:,)+[:\\.\uFF0E]?[ \xA0\\t,-]*") + (N("9") + "#?");
      }
      var Ea = new RegExp("(?:" + Da() + ")$", "i"), Fa = new RegExp(
        "^[0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9]{2}$|^[+\uFF0B]*(?:[-x\u2010-\u2015\u2212\u30FC\uFF0D-\uFF0F \xA0\xAD\u200B\u2060\u3000()\uFF08\uFF09\uFF3B\uFF3D.\\[\\]/~\u2053\u223C\uFF5E*]*[0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9]){3,}[-x\u2010-\u2015\u2212\u30FC\uFF0D-\uFF0F \xA0\xAD\u200B\u2060\u3000()\uFF08\uFF09\uFF3B\uFF3D.\\[\\]/~\u2053\u223C\uFF5E*A-Za-z0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9]*(?:" + Da() + ")?$",
        "i"
      ), Ga = /(\$\d)/;
      function Ha(a) {
        return 2 > a.length ? false : O(Fa, a);
      }
      function Ia(a) {
        return O(Ca, a) ? P(a, xa) : P(a, wa);
      }
      function Ja(a) {
        var b = Ia(a.toString());
        a.i = "";
        a.g(b);
      }
      function Ka(a) {
        return null != a && (1 != x(a, 9) || -1 != u(a, 9)[0]);
      }
      function P(a, b) {
        for (var c = new E(), d, e = a.length, g = 0; g < e; ++g)
          d = a.charAt(g), d = b[d.toUpperCase()], null != d && c.g(d);
        return c.toString();
      }
      function Q(a) {
        return null != a && isNaN(a) && a.toUpperCase() in va;
      }
      function La(a, b, c) {
        if (0 == p(b, 2) && null != b.g[5]) {
          var d = w(b, 5);
          if (0 < d.length)
            return d;
        }
        d = w(b, 1);
        var e = R(b);
        if (0 == c)
          return Ma(d, 0, e, "");
        if (!(d in J))
          return e;
        a = S(a, d, T(d));
        b = null != b.g[3] && 0 != p(b, 3).length ? 3 == c ? ";ext=" + p(b, 3) : null != a.g[13] ? p(a, 13) + w(b, 3) : " ext. " + w(b, 3) : "";
        a: {
          a = 0 == u(a, 20).length || 2 == c ? u(a, 19) : u(a, 20);
          for (var g, f = a.length, h = 0; h < f; ++h) {
            g = a[h];
            var l = x(g, 3);
            if (0 == l || 0 == e.search(p(g, 3, l - 1))) {
              if (l = new RegExp(p(g, 1)), O(l, e)) {
                a = g;
                break a;
              }
            }
          }
          a = null;
        }
        null != a && (f = a, a = w(f, 2), g = new RegExp(p(f, 1)), w(f, 5), f = w(f, 4), e = 2 == c && null != f && 0 < f.length ? e.replace(g, a.replace(Ga, f)) : e.replace(g, a), 3 == c && (e = e.replace(
          /^[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\[\]/~\u2053\u223c\uff5e]+/,
          ""
        ), e = e.replace(
          /[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\[\]/~\u2053\u223c\uff5e]+/g,
          "-"
        )));
        return Ma(d, c, e, b);
      }
      function S(a, b, c) {
        return "001" == c ? U(a, "" + b) : U(a, c);
      }
      function R(a) {
        if (null == a.g[2])
          return "";
        var b = "" + p(a, 2);
        return null != a.g[4] && p(a, 4) && 0 < w(a, 8) ? Array(w(a, 8) + 1).join("0") + b : b;
      }
      function Ma(a, b, c, d) {
        switch (b) {
          case 0:
            return "+" + a + c + d;
          case 1:
            return "+" + a + " " + c + d;
          case 3:
            return "tel:+" + a + "-" + c + d;
          default:
            return c + d;
        }
      }
      function V(a, b) {
        switch (b) {
          case 4:
            return p(a, 5);
          case 3:
            return p(a, 4);
          case 1:
            return p(a, 3);
          case 0:
          case 2:
            return p(a, 2);
          case 5:
            return p(a, 6);
          case 6:
            return p(a, 8);
          case 7:
            return p(a, 7);
          case 8:
            return p(a, 21);
          case 9:
            return p(a, 25);
          case 10:
            return p(a, 28);
          default:
            return p(a, 1);
        }
      }
      function W(a, b) {
        return X(a, p(b, 1)) ? X(a, p(b, 5)) ? 4 : X(a, p(b, 4)) ? 3 : X(a, p(b, 6)) ? 5 : X(a, p(b, 8)) ? 6 : X(a, p(b, 7)) ? 7 : X(a, p(b, 21)) ? 8 : X(a, p(b, 25)) ? 9 : X(a, p(b, 28)) ? 10 : X(a, p(b, 2)) ? p(b, 18) || X(a, p(b, 3)) ? 2 : 0 : !p(b, 18) && X(a, p(b, 3)) ? 1 : -1 : -1;
      }
      function U(a, b) {
        if (null == b)
          return null;
        b = b.toUpperCase();
        var c = a.g[b];
        if (null == c) {
          c = va[b];
          if (null == c)
            return null;
          c = new D().g(H.j(), c);
          a.g[b] = c;
        }
        return c;
      }
      function X(a, b) {
        var c = a.length;
        return 0 < x(b, 9) && -1 == u(b, 9).indexOf(c) ? false : O(w(b, 2), a);
      }
      function Na(a, b) {
        if (null == b)
          return null;
        var c = w(b, 1);
        c = J[c];
        if (null == c)
          a = null;
        else if (1 == c.length)
          a = c[0];
        else
          a: {
            b = R(b);
            for (var d, e = c.length, g = 0; g < e; g++) {
              d = c[g];
              var f = U(a, d);
              if (null != f.g[23]) {
                if (0 == b.search(p(f, 23))) {
                  a = d;
                  break a;
                }
              } else if (-1 != W(b, f)) {
                a = d;
                break a;
              }
            }
            a = null;
          }
        return a;
      }
      function T(a) {
        a = J[a];
        return null == a ? "ZZ" : a[0];
      }
      function Y(a, b, c, d) {
        var e = V(c, d), g = 0 == x(e, 9) ? u(p(c, 1), 9) : u(e, 9);
        e = u(e, 10);
        if (2 == d)
          if (Ka(V(c, 0)))
            a = V(c, 1), Ka(a) && (g = g.concat(0 == x(a, 9) ? u(p(c, 1), 9) : u(a, 9)), g.sort(), 0 == e.length ? e = u(a, 10) : (e = e.concat(u(a, 10)), e.sort()));
          else
            return Y(a, b, c, 1);
        if (-1 == g[0])
          return 5;
        b = b.length;
        if (-1 < e.indexOf(b))
          return 4;
        c = g[0];
        return c == b ? 0 : c > b ? 2 : g[g.length - 1] < b ? 3 : -1 < g.indexOf(b, 1) ? 0 : 5;
      }
      function Oa(a, b) {
        var c = R(b);
        b = w(b, 1);
        if (!(b in J))
          return 1;
        b = S(a, b, T(b));
        return Y(a, c, b, -1);
      }
      function Pa(a, b, c, d, e, g) {
        if (0 == b.length)
          return 0;
        b = new E(b);
        var f;
        null != c && (f = p(c, 11));
        null == f && (f = "NonMatch");
        var h = b.toString();
        if (0 == h.length)
          f = 20;
        else if (L.test(h))
          h = h.replace(L, ""), b.i = "", b.g(Ia(h)), f = 1;
        else {
          h = new RegExp(f);
          Ja(b);
          f = b.toString();
          if (0 == f.search(h)) {
            h = f.match(h)[0].length;
            var l = f.substring(h).match(ya);
            l && null != l[1] && 0 < l[1].length && "0" == P(l[1], wa) ? f = false : (b.i = "", b.g(f.substring(h)), f = true);
          } else
            f = false;
          f = f ? 5 : 20;
        }
        e && q(g, 6, f);
        if (20 != f) {
          if (2 >= b.i.length)
            throw Error("Phone number too short after IDD");
          a: {
            a = b.toString();
            if (0 != a.length && "0" != a.charAt(0)) {
              for (e = a.length, b = 1; 3 >= b && b <= e; ++b)
                if (c = parseInt(a.substring(0, b), 10), c in J) {
                  d.g(a.substring(b));
                  d = c;
                  break a;
                }
            }
            d = 0;
          }
          if (0 != d)
            return q(g, 1, d), d;
          throw Error("Invalid country calling code");
        }
        if (null != c && (f = w(c, 10), h = "" + f, l = b.toString(), 0 == l.lastIndexOf(h, 0) && (h = new E(l.substring(h.length)), l = p(c, 1), l = new RegExp(w(l, 2)), Qa(h, c, null), h = h.toString(), !O(l, b.toString()) && O(l, h) || 3 == Y(a, b.toString(), c, -1))))
          return d.g(h), e && q(g, 6, 10), q(g, 1, f), f;
        q(g, 1, 0);
        return 0;
      }
      function Qa(a, b, c) {
        var d = a.toString(), e = d.length, g = p(b, 15);
        if (0 != e && null != g && 0 != g.length) {
          var f = new RegExp("^(?:" + g + ")");
          if (e = f.exec(d)) {
            g = new RegExp(w(p(b, 1), 2));
            var h = O(g, d), l = e.length - 1;
            b = p(b, 16);
            if (null == b || 0 == b.length || null == e[l] || 0 == e[l].length) {
              if (!h || O(g, d.substring(e[0].length)))
                null != c && 0 < l && null != e[l] && c.g(e[1]), a.set(d.substring(e[0].length));
            } else if (d = d.replace(f, b), !h || O(g, d))
              null != c && 0 < l && c.g(e[1]), a.set(d);
          }
        }
      }
      function Z(a, b, c) {
        if (!Q(c) && 0 < b.length && "+" != b.charAt(0))
          throw Error("Invalid country calling code");
        return Ra(a, b, c, true);
      }
      function Ra(a, b, c, d) {
        if (null == b)
          throw Error("The string supplied did not seem to be a phone number");
        if (250 < b.length)
          throw Error("The string supplied is too long to be a phone number");
        var e = new E(), g = b.indexOf(";phone-context=");
        if (0 <= g) {
          var f = g + 15;
          if ("+" == b.charAt(f)) {
            var h = b.indexOf(";", f);
            0 < h ? e.g(b.substring(f, h)) : e.g(b.substring(f));
          }
          f = b.indexOf("tel:");
          e.g(b.substring(0 <= f ? f + 4 : 0, g));
        } else
          g = e.g, f = b.search(za), 0 <= f ? (f = b.substring(f), f = f.replace(Ba, ""), h = f.search(Aa), 0 <= h && (f = f.substring(0, h))) : f = "", g.call(e, f);
        g = e.toString();
        f = g.indexOf(";isub=");
        0 < f && (e.i = "", e.g(g.substring(0, f)));
        if (!Ha(e.toString()))
          throw Error("The string supplied did not seem to be a phone number");
        g = e.toString();
        if (!(Q(c) || null != g && 0 < g.length && L.test(g)))
          throw Error("Invalid country calling code");
        g = new I();
        d && q(g, 5, b);
        a: {
          b = e.toString();
          f = b.search(Ea);
          if (0 <= f && Ha(b.substring(0, f))) {
            h = b.match(Ea);
            for (var l = h.length, z = 1; z < l; ++z)
              if (null != h[z] && 0 < h[z].length) {
                e.i = "";
                e.g(b.substring(0, f));
                b = h[z];
                break a;
              }
          }
          b = "";
        }
        0 < b.length && q(g, 3, b);
        f = U(a, c);
        b = new E();
        h = 0;
        l = e.toString();
        try {
          h = Pa(a, l, f, b, d, g);
        } catch (M) {
          if ("Invalid country calling code" == M.message && L.test(l)) {
            if (l = l.replace(L, ""), h = Pa(a, l, f, b, d, g), 0 == h)
              throw M;
          } else
            throw M;
        }
        0 != h ? (e = T(h), e != c && (f = S(a, h, e))) : (Ja(e), b.g(e.toString()), null != c ? (h = w(f, 10), q(g, 1, h)) : d && (delete g.g[6], g.i && delete g.i[6]));
        if (2 > b.i.length)
          throw Error("The string supplied is too short to be a phone number");
        null != f && (c = new E(), e = new E(b.toString()), Qa(e, f, c), a = Y(a, e.toString(), f, -1), 2 != a && 4 != a && 5 != a && (b = e, d && 0 < c.toString().length && q(g, 7, c.toString())));
        d = b.toString();
        a = d.length;
        if (2 > a)
          throw Error("The string supplied is too short to be a phone number");
        if (17 < a)
          throw Error("The string supplied is too long to be a phone number");
        if (1 < d.length && "0" == d.charAt(0)) {
          q(g, 4, true);
          for (a = 1; a < d.length - 1 && "0" == d.charAt(a); )
            a++;
          1 != a && q(g, 8, a);
        }
        q(g, 2, parseInt(d, 10));
        return g;
      }
      function O(a, b) {
        return (a = "string" == typeof a ? b.match("^(?:" + a + ")$") : b.match(a)) && a[0].length == b.length ? true : false;
      }
      k("intlTelInputUtils", {});
      k("intlTelInputUtils.formatNumber", function(a, b, c) {
        try {
          var d = K.g(), e = Z(d, a, b), g = Oa(d, e);
          return 0 == g || 4 == g ? La(d, e, "undefined" == typeof c ? 0 : c) : a;
        } catch (f) {
          return a;
        }
      });
      k("intlTelInputUtils.getExampleNumber", function(a, b, c) {
        try {
          var d = K.g();
          a: {
            if (Q(a)) {
              var e = V(U(d, a), c);
              try {
                if (null != e.g[6]) {
                  var g = p(e, 6);
                  var f = Ra(d, g, a, false);
                  break a;
                }
              } catch (h) {
              }
            }
            f = null;
          }
          return La(d, f, b ? 2 : 1);
        } catch (h) {
          return "";
        }
      });
      k("intlTelInputUtils.getExtension", function(a, b) {
        try {
          return p(Z(K.g(), a, b), 3);
        } catch (c) {
          return "";
        }
      });
      k("intlTelInputUtils.getNumberType", function(a, b) {
        try {
          var c = K.g();
          var d = Z(c, a, b), e = Na(c, d), g = S(c, w(d, 1), e);
          if (null == g)
            var f = -1;
          else {
            var h = R(d);
            f = W(h, g);
          }
          return f;
        } catch (l) {
          return -99;
        }
      });
      k("intlTelInputUtils.getValidationError", function(a, b) {
        try {
          var c = K.g(), d = Z(c, a, b);
          return Oa(c, d);
        } catch (e) {
          return "Invalid country calling code" == e.message ? 1 : "Phone number too short after IDD" == e.message || "The string supplied is too short to be a phone number" == e.message ? 2 : "The string supplied is too long to be a phone number" == e.message ? 3 : -99;
        }
      });
      k("intlTelInputUtils.isValidNumber", function(a, b) {
        try {
          var c = K.g(), d = Z(c, a, b);
          var e = Na(c, d), g = w(d, 1), f = S(c, g, e), h;
          if (!(h = null == f)) {
            var l;
            if (l = "001" != e) {
              var z = U(c, e);
              if (null == z)
                throw Error("Invalid region code: " + e);
              var M = w(z, 10);
              l = g != M;
            }
            h = l;
          }
          if (h)
            var ua = false;
          else {
            var Sa = R(d);
            ua = -1 != W(Sa, f);
          }
          return ua;
        } catch (Ta) {
          return false;
        }
      });
      k("intlTelInputUtils.numberFormat", { E164: 0, INTERNATIONAL: 1, NATIONAL: 2, RFC3966: 3 });
      k("intlTelInputUtils.numberType", {
        FIXED_LINE: 0,
        MOBILE: 1,
        FIXED_LINE_OR_MOBILE: 2,
        TOLL_FREE: 3,
        PREMIUM_RATE: 4,
        SHARED_COST: 5,
        VOIP: 6,
        PERSONAL_NUMBER: 7,
        PAGER: 8,
        UAN: 9,
        VOICEMAIL: 10,
        UNKNOWN: -1
      });
      k("intlTelInputUtils.validationError", {
        IS_POSSIBLE: 0,
        INVALID_COUNTRY_CODE: 1,
        TOO_SHORT: 2,
        TOO_LONG: 3,
        IS_POSSIBLE_LOCAL_ONLY: 4,
        INVALID_LENGTH: 5
      });
    })();
  }
});

// node_modules/supertokens-auth-react/lib/build/passwordless-shared2.js
var require_passwordless_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/passwordless-shared2.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var PasswordlessWebJS = require_passwordless3();
    var utils = require_authRecipe_shared();
    var windowHandler = require_windowHandler2();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var PasswordlessWebJS__default = _interopDefault(PasswordlessWebJS);
    var getFunctionOverrides = function(onHandleEvent) {
      return function(originalImp) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, originalImp), {
          createCode: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, originalImp.createCode(input)];
                  case 1:
                    response = _a.sent();
                    if (response.status === "OK") {
                      onHandleEvent({
                        action: "PASSWORDLESS_CODE_SENT",
                        isResend: false
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          resendCode: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, originalImp.resendCode(input)];
                  case 1:
                    response = _a.sent();
                    if (response.status === "RESTART_FLOW_ERROR") {
                      onHandleEvent({
                        action: "PASSWORDLESS_RESTART_FLOW"
                      });
                    } else if (response.status === "OK") {
                      onHandleEvent({
                        action: "PASSWORDLESS_CODE_SENT",
                        isResend: true
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          consumeCode: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, originalImp.consumeCode(input)];
                  case 1:
                    response = _a.sent();
                    if (response.status === "RESTART_FLOW_ERROR") {
                      onHandleEvent({
                        action: "PASSWORDLESS_RESTART_FLOW"
                      });
                    } else if (response.status === "OK") {
                      onHandleEvent({
                        action: "SUCCESS",
                        isNewUser: response.createdNewUser,
                        user: response.user
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          setLoginAttemptInfo: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              return genericComponentOverrideContext.__generator(this, function(_a) {
                return [
                  2,
                  originalImp.setLoginAttemptInfo(
                    genericComponentOverrideContext.__assign(
                      genericComponentOverrideContext.__assign({}, input),
                      {
                        attemptInfo: genericComponentOverrideContext.__assign(
                          genericComponentOverrideContext.__assign({}, input.attemptInfo),
                          input.userContext.additionalAttemptInfo
                        )
                      }
                    )
                  )
                ];
              });
            });
          }
        });
      };
    };
    var phoneNumberUtilsImport;
    function getPhoneNumberUtils() {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        var global;
        return genericComponentOverrideContext.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              return [4, preloadPhoneNumberUtils()];
            case 1:
              _a.sent();
              global = windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.getWindowUnsafe();
              return [2, global.intlTelInputUtils];
          }
        });
      });
    }
    function preloadPhoneNumberUtils() {
      if (phoneNumberUtilsImport === void 0) {
        phoneNumberUtilsImport = Promise.resolve().then(function() {
          return require_utils6();
        });
      }
      return phoneNumberUtilsImport;
    }
    function defaultEmailValidator(value) {
      if (typeof value !== "string") {
        return "GENERAL_ERROR_EMAIL_NON_STRING";
      }
      value = value.trim();
      var defaultEmailValidatorRegexp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      if (value.match(defaultEmailValidatorRegexp) === null) {
        return "GENERAL_ERROR_EMAIL_INVALID";
      }
      return void 0;
    }
    function defaultPhoneNumberValidator(value) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        var intlTelInputUtils;
        return genericComponentOverrideContext.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              if (typeof value !== "string") {
                return [2, "GENERAL_ERROR_PHONE_NON_STRING"];
              }
              value = value.trim();
              return [4, getPhoneNumberUtils()];
            case 1:
              intlTelInputUtils = _a.sent();
              if (!intlTelInputUtils.isValidNumber(value, void 0)) {
                return [2, "GENERAL_ERROR_PHONE_INVALID"];
              }
              return [2, void 0];
          }
        });
      });
    }
    function defaultEmailValidatorForCombinedInput(value) {
      if (typeof value !== "string") {
        return "GENERAL_ERROR_EMAIL_OR_PHONE_NON_STRING";
      }
      value = value.trim();
      var defaultEmailValidatorRegexp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      if (value.match(defaultEmailValidatorRegexp) === null) {
        return "GENERAL_ERROR_EMAIL_OR_PHONE_INVALID";
      }
      return void 0;
    }
    function defaultPhoneNumberValidatorForCombinedInput(value) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        var intlTelInputUtils;
        return genericComponentOverrideContext.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              if (typeof value !== "string") {
                return [2, "GENERAL_ERROR_EMAIL_OR_PHONE_NON_STRING"];
              }
              value = value.trim();
              return [4, getPhoneNumberUtils()];
            case 1:
              intlTelInputUtils = _a.sent();
              if (!intlTelInputUtils.isValidNumber(value, void 0)) {
                return [2, "GENERAL_ERROR_EMAIL_OR_PHONE_INVALID"];
              }
              return [2, void 0];
          }
        });
      });
    }
    function userInputCodeValidate(value) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        return genericComponentOverrideContext.__generator(this, function(_a) {
          if (typeof value !== "string") {
            return [2, "GENERAL_ERROR_OTP_NON_STRING"];
          }
          if (value.length === 0) {
            return [2, "GENERAL_ERROR_OTP_EMPTY"];
          }
          return [2, void 0];
        });
      });
    }
    function defaultValidate(_) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        return genericComponentOverrideContext.__generator(this, function(_a) {
          return [2, void 0];
        });
      });
    }
    function defaultGuessInternationPhoneNumberFromInputPhoneNumber(value, defaultCountryFromConfig) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        var intlTelInputUtils, libGuess, phoneNumberCharCount, filteredInput, countryData, matchingCountryCodes, _i, matchingCountryCodes_1, code, defaultCountry;
        return genericComponentOverrideContext.__generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              if (value === void 0 || value.length === 0) {
                return [2, value];
              }
              return [4, getPhoneNumberUtils()];
            case 1:
              intlTelInputUtils = _a.sent();
              libGuess = intlTelInputUtils.formatNumber(
                value,
                defaultCountryFromConfig,
                intlTelInputUtils.numberFormat.E164
              );
              if (intlTelInputUtils.isValidNumber(libGuess, defaultCountryFromConfig)) {
                return [2, libGuess];
              }
              phoneNumberCharCount = (value.match(/(\d|[+\-().])/g) || []).length;
              if (value.includes("@") || phoneNumberCharCount < value.length / 2) {
                return [2, void 0];
              }
              filteredInput = "+" + value.replace(/\D/g, "").replace(/^00/, "");
              if (intlTelInputUtils.isValidNumber(filteredInput, defaultCountryFromConfig)) {
                return [
                  2,
                  intlTelInputUtils.formatNumber(
                    filteredInput,
                    defaultCountryFromConfig,
                    intlTelInputUtils.numberFormat.E164
                  )
                ];
              }
              countryData = windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.getWindowUnsafe().intlTelInputGlobals.getCountryData();
              matchingCountryCodes = countryData.filter(function(c) {
                return filteredInput.startsWith("+" + c.dialCode);
              }).map(function(c) {
                return c.iso2;
              });
              for (_i = 0, matchingCountryCodes_1 = matchingCountryCodes; _i < matchingCountryCodes_1.length; _i++) {
                code = matchingCountryCodes_1[_i];
                if (intlTelInputUtils.isValidNumber(filteredInput, code)) {
                  return [
                    2,
                    intlTelInputUtils.formatNumber(
                      filteredInput,
                      code,
                      intlTelInputUtils.numberFormat.E164
                    )
                  ];
                }
              }
              if (defaultCountryFromConfig) {
                defaultCountry = countryData.find(function(c) {
                  return c.iso2 === defaultCountryFromConfig.toLowerCase();
                });
                if (defaultCountry) {
                  return [2, "+" + defaultCountry.dialCode + filteredInput.substring(1)];
                }
              }
              return [2, filteredInput];
          }
        });
      });
    }
    function normalisePasswordlessConfig(config) {
      if (config === void 0) {
        throw new Error("Passwordless config should not be empty");
      }
      if (!["EMAIL", "PHONE", "EMAIL_OR_PHONE"].includes(config.contactMethod)) {
        throw new Error("Please pass one of 'PHONE', 'EMAIL' or 'EMAIL_OR_PHONE' as the contactMethod");
      }
      var signInUpFeature = normalizeSignInUpFeatureConfig(config.signInUpFeature, config);
      var override = genericComponentOverrideContext.__assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      var validateEmailAddress = defaultEmailValidator;
      if ((config.contactMethod === "EMAIL" || config.contactMethod === "EMAIL_OR_PHONE") && config.validateEmailAddress !== void 0) {
        validateEmailAddress = config.validateEmailAddress;
      } else if (config.contactMethod === "EMAIL_OR_PHONE") {
        validateEmailAddress = defaultEmailValidatorForCombinedInput;
      }
      var validatePhoneNumber = defaultPhoneNumberValidator;
      if ((config.contactMethod === "PHONE" || config.contactMethod === "EMAIL_OR_PHONE") && config.validatePhoneNumber !== void 0) {
        validatePhoneNumber = config.validatePhoneNumber;
      } else if (config.contactMethod === "EMAIL_OR_PHONE") {
        validatePhoneNumber = defaultPhoneNumberValidatorForCombinedInput;
      }
      return genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, utils.normaliseAuthRecipe(config)),
        {
          validateEmailAddress,
          validatePhoneNumber,
          signInUpFeature,
          linkClickedScreenFeature: normalisePasswordlessBaseConfig(config.linkClickedScreenFeature),
          contactMethod: config.contactMethod,
          override
        }
      );
    }
    function normalizeSignInUpFeatureConfig(signInUpInput, config) {
      if ((signInUpInput === null || signInUpInput === void 0 ? void 0 : signInUpInput.resendEmailOrSMSGapInSeconds) !== void 0 && signInUpInput.resendEmailOrSMSGapInSeconds <= 0) {
        throw new Error("Please pass a positive number as resendEmailOrSMSGapInSeconds");
      }
      var signInUpFeature = genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, signInUpInput),
        {
          resendEmailOrSMSGapInSeconds: (signInUpInput === null || signInUpInput === void 0 ? void 0 : signInUpInput.resendEmailOrSMSGapInSeconds) === void 0 ? 15 : signInUpInput.resendEmailOrSMSGapInSeconds,
          emailOrPhoneFormStyle: (signInUpInput === null || signInUpInput === void 0 ? void 0 : signInUpInput.emailOrPhoneFormStyle) !== void 0 ? signInUpInput.emailOrPhoneFormStyle : "",
          linkSentScreenStyle: (signInUpInput === null || signInUpInput === void 0 ? void 0 : signInUpInput.linkSentScreenStyle) !== void 0 ? signInUpInput.linkSentScreenStyle : "",
          userInputCodeFormStyle: (signInUpInput === null || signInUpInput === void 0 ? void 0 : signInUpInput.userInputCodeFormStyle) !== void 0 ? signInUpInput.userInputCodeFormStyle : "",
          closeTabScreenStyle: (signInUpInput === null || signInUpInput === void 0 ? void 0 : signInUpInput.closeTabScreenStyle) !== void 0 ? signInUpInput.closeTabScreenStyle : "",
          defaultCountry: ["PHONE", "EMAIL_OR_PHONE"].includes(config.contactMethod) && signInUpInput !== void 0 && "defaultCountry" in signInUpInput ? signInUpInput.defaultCountry : void 0,
          guessInternationPhoneNumberFromInputPhoneNumber: config.contactMethod === "EMAIL_OR_PHONE" && signInUpInput !== void 0 && "guessInternationPhoneNumberFromInputPhoneNumber" in signInUpInput && signInUpInput.guessInternationPhoneNumberFromInputPhoneNumber !== void 0 ? signInUpInput.guessInternationPhoneNumberFromInputPhoneNumber : defaultGuessInternationPhoneNumberFromInputPhoneNumber
        }
      );
      return signInUpFeature;
    }
    function normalisePasswordlessBaseConfig(config) {
      var style = config && config.style !== void 0 ? config.style : "";
      return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, config), {
        style
      });
    }
    var Passwordless = function(_super) {
      genericComponentOverrideContext.__extends(Passwordless2, _super);
      function Passwordless2(config, webJSRecipe) {
        if (webJSRecipe === void 0) {
          webJSRecipe = PasswordlessWebJS__default.default;
        }
        var _this = _super.call(this, config) || this;
        _this.webJSRecipe = webJSRecipe;
        _this.recipeID = Passwordless2.RECIPE_ID;
        _this.getDefaultRedirectionURL = function(context) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              return [2, this.getAuthRecipeDefaultRedirectionURL(context)];
            });
          });
        };
        return _this;
      }
      Passwordless2.init = function(config) {
        var normalisedConfig = normalisePasswordlessConfig(config);
        return {
          recipeID: Passwordless2.RECIPE_ID,
          authReact: function(appInfo) {
            Passwordless2.instance = new Passwordless2(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, normalisedConfig),
                { appInfo, recipeId: Passwordless2.RECIPE_ID }
              )
            );
            return Passwordless2.instance;
          },
          webJS: PasswordlessWebJS__default.default.init(
            genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, normalisedConfig),
              {
                override: {
                  functions: function(originalImpl, builder) {
                    var functions = getFunctionOverrides(normalisedConfig.onHandleEvent);
                    builder.override(functions);
                    builder.override(normalisedConfig.override.functions);
                    return originalImpl;
                  }
                }
              }
            )
          )
        };
      };
      Passwordless2.getInstanceOrThrow = function() {
        if (Passwordless2.instance === void 0) {
          var error = "No instance of Passwordless found. Make sure to call the Passwordless.init method.See https://supertokens.io/docs/passwordless/quick-setup/frontend";
          if (typeof window === "undefined") {
            error = error + genericComponentOverrideContext.SSR_ERROR;
          }
          throw Error(error);
        }
        return Passwordless2.instance;
      };
      Passwordless2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        Passwordless2.instance = void 0;
        return;
      };
      Passwordless2.RECIPE_ID = "passwordless";
      return Passwordless2;
    }(utils.AuthRecipe);
    exports.Passwordless = Passwordless;
    exports.defaultEmailValidator = defaultEmailValidator;
    exports.defaultValidate = defaultValidate;
    exports.getPhoneNumberUtils = getPhoneNumberUtils;
    exports.normalisePasswordlessConfig = normalisePasswordlessConfig;
    exports.preloadPhoneNumberUtils = preloadPhoneNumberUtils;
    exports.userInputCodeValidate = userInputCodeValidate;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdpartypasswordless-shared.js
var require_thirdpartypasswordless_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdpartypasswordless-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var ThirdpartyPasswordlessWebJS = require_thirdpartypasswordless2();
    var utils = require_authRecipe_shared();
    var recipe$1 = require_passwordless_shared2();
    var recipe = require_thirdparty_shared();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ThirdpartyPasswordlessWebJS__default = _interopDefault(ThirdpartyPasswordlessWebJS);
    var _a = genericComponentOverrideContext.createGenericComponentsOverrideContext();
    var useContext = _a[0];
    var Provider = _a[1];
    var getFunctionOverrides = function(recipeId, onHandleEvent) {
      return function(originalImp) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, originalImp), {
          thirdPartySignInAndUp: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.thirdPartySignInAndUp(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "OK") {
                      onHandleEvent({
                        action: "SUCCESS",
                        isNewUser: response.createdNewUser,
                        user: response.user,
                        userContext: input.userContext
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          setThirdPartyStateAndOtherInfoToStorage: function(input) {
            return originalImp.setThirdPartyStateAndOtherInfoToStorage({
              state: genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, input.state),
                { rid: recipeId, redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL() }
              ),
              userContext: input.userContext
            });
          },
          createPasswordlessCode: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.createPasswordlessCode(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "OK") {
                      onHandleEvent({
                        action: "PASSWORDLESS_CODE_SENT",
                        isResend: false
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          resendPasswordlessCode: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.resendPasswordlessCode(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "RESTART_FLOW_ERROR") {
                      onHandleEvent({
                        action: "PASSWORDLESS_RESTART_FLOW"
                      });
                    } else if (response.status === "OK") {
                      onHandleEvent({
                        action: "PASSWORDLESS_CODE_SENT",
                        isResend: true
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          consumePasswordlessCode: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.consumePasswordlessCode(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "RESTART_FLOW_ERROR") {
                      onHandleEvent({
                        action: "PASSWORDLESS_RESTART_FLOW"
                      });
                    } else if (response.status === "OK") {
                      onHandleEvent({
                        action: "SUCCESS",
                        isNewUser: response.createdNewUser,
                        user: response.user
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          setPasswordlessLoginAttemptInfo: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                return [
                  2,
                  originalImp.setPasswordlessLoginAttemptInfo(
                    genericComponentOverrideContext.__assign(
                      genericComponentOverrideContext.__assign({}, input),
                      {
                        attemptInfo: genericComponentOverrideContext.__assign(
                          genericComponentOverrideContext.__assign({}, input.attemptInfo),
                          input.userContext.additionalAttemptInfo
                        )
                      }
                    )
                  )
                ];
              });
            });
          }
        });
      };
    };
    function getRecipeImplementation$1(originalImplementation) {
      return {
        clearLoginAttemptInfo: originalImplementation.clearPasswordlessLoginAttemptInfo.bind(originalImplementation),
        consumeCode: originalImplementation.consumePasswordlessCode.bind(originalImplementation),
        createCode: originalImplementation.createPasswordlessCode.bind(originalImplementation),
        doesEmailExist: originalImplementation.doesPasswordlessUserEmailExist.bind(originalImplementation),
        doesPhoneNumberExist: originalImplementation.doesPasswordlessUserPhoneNumberExist.bind(originalImplementation),
        getLoginAttemptInfo: originalImplementation.getPasswordlessLoginAttemptInfo.bind(originalImplementation),
        resendCode: originalImplementation.resendPasswordlessCode.bind(originalImplementation),
        setLoginAttemptInfo: originalImplementation.setPasswordlessLoginAttemptInfo.bind(originalImplementation),
        getLinkCodeFromURL: originalImplementation.getPasswordlessLinkCodeFromURL.bind(originalImplementation),
        getPreAuthSessionIdFromURL: originalImplementation.getPasswordlessPreAuthSessionIdFromURL.bind(originalImplementation),
        getTenantIdFromURL: originalImplementation.getTenantIdFromURL.bind(originalImplementation)
      };
    }
    function getRecipeImplementation(originalImplementation) {
      return {
        getAuthorisationURLWithQueryParamsAndSetState: originalImplementation.getThirdPartyAuthorisationURLWithQueryParamsAndSetState.bind(originalImplementation),
        getStateAndOtherInfoFromStorage: originalImplementation.getThirdPartyStateAndOtherInfoFromStorage.bind(originalImplementation),
        signInAndUp: originalImplementation.thirdPartySignInAndUp.bind(originalImplementation)
      };
    }
    function normaliseThirdPartyPasswordlessConfig(config) {
      var _a2;
      if (config === void 0) {
        config = {};
      }
      var override = genericComponentOverrideContext.__assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      var thirdPartyProviderAndEmailOrPhoneFormStyle = ((_a2 = config === null || config === void 0 ? void 0 : config.signInUpFeature) === null || _a2 === void 0 ? void 0 : _a2.thirdPartyProviderAndEmailOrPhoneFormStyle) === void 0 ? "" : config === null || config === void 0 ? void 0 : config.signInUpFeature.thirdPartyProviderAndEmailOrPhoneFormStyle;
      return genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, utils.normaliseAuthRecipe(config)),
        {
          thirdPartyProviderAndEmailOrPhoneFormStyle,
          thirdpartyConfig: recipe.normaliseThirdPartyConfig({
            getRedirectionURL: config.getRedirectionURL,
            style: config.style,
            onHandleEvent: config.onHandleEvent,
            preAPIHook: config.preAPIHook,
            signInAndUpFeature: genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, config.signInUpFeature),
              { style: thirdPartyProviderAndEmailOrPhoneFormStyle }
            ),
            oAuthCallbackScreen: config.oAuthCallbackScreen,
            useShadowDom: config.useShadowDom,
            override: {}
          }),
          passwordlessConfig: recipe$1.normalisePasswordlessConfig({
            contactMethod: config.contactMethod,
            style: config.style,
            validateEmailAddress: "validateEmailAddress" in config ? config.validateEmailAddress : void 0,
            validatePhoneNumber: "validatePhoneNumber" in config ? config.validatePhoneNumber : void 0,
            getRedirectionURL: config.getRedirectionURL,
            onHandleEvent: config.onHandleEvent,
            preAPIHook: config.preAPIHook,
            useShadowDom: config.useShadowDom,
            signInUpFeature: genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, config.signInUpFeature),
              { emailOrPhoneFormStyle: thirdPartyProviderAndEmailOrPhoneFormStyle }
            ),
            linkClickedScreenFeature: config.linkClickedScreenFeature,
            override: {}
          }),
          disablePasswordless: config.disablePasswordless === true,
          override
        }
      );
    }
    var ThirdPartyPasswordless = function(_super) {
      genericComponentOverrideContext.__extends(ThirdPartyPasswordless2, _super);
      function ThirdPartyPasswordless2(config, recipes, webJSRecipe) {
        if (webJSRecipe === void 0) {
          webJSRecipe = ThirdpartyPasswordlessWebJS__default.default;
        }
        var _this = this;
        var _a2, _b, _c;
        var disableThirdParty = ((_b = (_a2 = config.thirdpartyConfig) === null || _a2 === void 0 ? void 0 : _a2.signInAndUpFeature) === null || _b === void 0 ? void 0 : _b.providers) === void 0 || ((_c = config.thirdpartyConfig) === null || _c === void 0 ? void 0 : _c.signInAndUpFeature.providers.length) === 0;
        if (genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods === false && config.disablePasswordless === true && disableThirdParty) {
          throw new Error("You need to enable either passwordless or third party providers login.");
        }
        _this = _super.call(this, config) || this;
        _this.webJSRecipe = webJSRecipe;
        _this.recipeID = ThirdPartyPasswordless2.RECIPE_ID;
        _this.getDefaultRedirectionURL = function(context) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a3) {
              return [2, this.getAuthRecipeDefaultRedirectionURL(context)];
            });
          });
        };
        _this.passwordlessRecipe = recipes.passwordlessInstance !== void 0 ? recipes.passwordlessInstance : genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods === false && _this.config.disablePasswordless ? void 0 : new recipe$1.Passwordless(
          genericComponentOverrideContext.__assign(
            genericComponentOverrideContext.__assign({}, _this.config.passwordlessConfig),
            { appInfo: _this.config.appInfo, recipeId: _this.config.recipeId }
          ),
          getRecipeImplementation$1(_this.webJSRecipe)
        );
        _this.thirdPartyRecipe = recipes.thirdPartyInstance !== void 0 ? recipes.thirdPartyInstance : genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods === false && disableThirdParty ? void 0 : new recipe.ThirdParty(
          genericComponentOverrideContext.__assign(
            genericComponentOverrideContext.__assign({}, _this.config.thirdpartyConfig),
            { appInfo: _this.config.appInfo, recipeId: _this.config.recipeId }
          ),
          getRecipeImplementation(_this.webJSRecipe)
        );
        return _this;
      }
      ThirdPartyPasswordless2.init = function(config) {
        var normalisedConfig = normaliseThirdPartyPasswordlessConfig(config);
        return {
          recipeID: ThirdPartyPasswordless2.RECIPE_ID,
          authReact: function(appInfo) {
            ThirdPartyPasswordless2.instance = new ThirdPartyPasswordless2(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, normalisedConfig),
                { appInfo, recipeId: ThirdPartyPasswordless2.RECIPE_ID }
              ),
              {
                passwordlessInstance: void 0,
                thirdPartyInstance: void 0
              }
            );
            return ThirdPartyPasswordless2.instance;
          },
          webJS: ThirdpartyPasswordlessWebJS__default.default.init(
            genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, normalisedConfig),
              {
                override: {
                  functions: function(originalImpl, builder) {
                    var functions = getFunctionOverrides(
                      ThirdPartyPasswordless2.RECIPE_ID,
                      normalisedConfig.onHandleEvent
                    );
                    builder.override(functions);
                    builder.override(normalisedConfig.override.functions);
                    return originalImpl;
                  }
                }
              }
            )
          )
        };
      };
      ThirdPartyPasswordless2.getInstanceOrThrow = function() {
        if (ThirdPartyPasswordless2.instance === void 0) {
          var error = "No instance of ThirdPartyPasswordless found. Make sure to call the ThirdPartyPasswordless.init method.See https://supertokens.io/docs/thirdpartypasswordless/quick-setup/frontend";
          if (typeof window === "undefined") {
            error = error + genericComponentOverrideContext.SSR_ERROR;
          }
          throw Error(error);
        }
        return ThirdPartyPasswordless2.instance;
      };
      ThirdPartyPasswordless2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        ThirdPartyPasswordless2.instance = void 0;
        return;
      };
      ThirdPartyPasswordless2.RECIPE_ID = "thirdpartypasswordless";
      return ThirdPartyPasswordless2;
    }(utils.AuthRecipe);
    exports.Provider = Provider;
    exports.ThirdPartyPasswordless = ThirdPartyPasswordless;
    exports.useContext = useContext;
  }
});

export {
  require_thirdparty2 as require_thirdparty,
  require_authRecipe_shared,
  require_thirdparty_shared,
  require_thirdpartypasswordless2 as require_thirdpartypasswordless,
  require_passwordless3 as require_passwordless,
  require_passwordless_shared2,
  require_thirdpartypasswordless_shared
};
//# sourceMappingURL=chunk-RH76KC5N.js.map
