import {
  require_session_shared,
  require_session_shared3
} from "./chunk-VB6G4HUZ.js";
import {
  require_authRecipe_shared,
  require_passwordless,
  require_passwordless_shared2,
  require_thirdparty,
  require_thirdparty_shared,
  require_thirdpartypasswordless,
  require_thirdpartypasswordless_shared
} from "./chunk-RH76KC5N.js";
import {
  require_index2,
  require_multitenancy_shared
} from "./chunk-BFBCIXZB.js";
import {
  require_react_dom
} from "./chunk-C6KZFXOO.js";
import {
  require_cookieHandler,
  require_error,
  require_genericComponentOverrideContext,
  require_jsx_runtime,
  require_multitenancy,
  require_normalisedURLDomain,
  require_normalisedURLPath,
  require_normalisedURLPath2,
  require_postSuperTokensInitCallbacks,
  require_recipeModule_shared,
  require_session,
  require_session_shared2,
  require_supertokens_web_js,
  require_translationContext,
  require_utils3 as require_utils,
  require_windowHandler2 as require_windowHandler
} from "./chunk-LFNHU7DE.js";
import {
  require_react
} from "./chunk-GCG7DT74.js";
import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/supertokens-auth-react/lib/build/SuperTokensBranding.js
var require_SuperTokensBranding = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/SuperTokensBranding.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var uiEntry = require_index2();
    var session = require_session_shared3();
    var recipe = require_session_shared2();
    var translationContext = require_translationContext();
    var AuthWidgetWrapper = function(props) {
      return jsxRuntime.jsx(
        session.SessionAuth,
        genericComponentOverrideContext.__assign(
          { requireAuth: false, doRedirection: false },
          { children: jsxRuntime.jsx(Redirector, genericComponentOverrideContext.__assign({}, props)) }
        )
      );
    };
    var Redirector = function(props) {
      var sessionContext = React.useContext(uiEntry.SessionContext);
      var userContext = uiEntry.useUserContext();
      var _a = React.useState(false), alwaysShow = _a[0], updateAlwaysShow = _a[1];
      React.useEffect(
        function() {
          if (sessionContext.loading === false) {
            if (sessionContext.doesSessionExist) {
              if (props.onSessionAlreadyExists !== void 0) {
                props.onSessionAlreadyExists();
              } else {
                props.authRecipe.config.onHandleEvent({
                  action: "SESSION_ALREADY_EXISTS"
                });
                void recipe.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                  {
                    rid: props.authRecipe.config.recipeId,
                    successRedirectContext: {
                      action: "SUCCESS",
                      isNewUser: false,
                      redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL()
                    }
                  },
                  userContext,
                  props.history
                );
              }
            } else {
              updateAlwaysShow(true);
            }
          }
        },
        [sessionContext.loading]
      );
      if ((sessionContext.loading === true || sessionContext.doesSessionExist) && !alwaysShow) {
        return null;
      } else {
        return jsxRuntime.jsx(jsxRuntime.Fragment, { children: props.children });
      }
    };
    function SuperTokensBranding() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "a",
        genericComponentOverrideContext.__assign(
          {
            "data-supertokens": "superTokensBranding",
            href: "https://supertokens.com?utm_campaign=poweredby",
            target: "_blank"
          },
          {
            children: [
              t("BRANDING_POWERED_BY_START"),
              jsxRuntime.jsx("strong", { children: "SuperTokens" }),
              t("BRANDING_POWERED_BY_END")
            ]
          }
        )
      );
    }
    exports.AuthWidgetWrapper = AuthWidgetWrapper;
    exports.SuperTokensBranding = SuperTokensBranding;
  }
});

// node_modules/supertokens-auth-react/lib/build/passwordless-shared.js
var require_passwordless_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/passwordless-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var _a = genericComponentOverrideContext.createGenericComponentsOverrideContext();
    var useContext = _a[0];
    var Provider = _a[1];
    exports.Provider = Provider;
    exports.useContext = useContext;
  }
});

// node_modules/supertokens-web-js/utils/error.js
var require_error2 = __commonJS({
  "node_modules/supertokens-web-js/utils/error.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_error();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-auth-react/lib/build/translations.js
var require_translations = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/translations.js"(exports) {
    "use strict";
    function hasFontDefined(style) {
      if (style === void 0) {
        return false;
      }
      var lowerStyle = style.toLowerCase();
      return lowerStyle.includes("font-family:") || lowerStyle.includes("font:");
    }
    var defaultTranslationsCommon = {
      en: {
        BRANDING_POWERED_BY_START: "Powered by ",
        BRANDING_POWERED_BY_END: "",
        SOMETHING_WENT_WRONG_ERROR: "Something went wrong. Please try again."
      }
    };
    exports.defaultTranslationsCommon = defaultTranslationsCommon;
    exports.hasFontDefined = hasFontDefined;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js
var require_emailpassword_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared2.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    require_index2();
    var translationContext = require_translationContext();
    function Button(_a) {
      var type = _a.type, label = _a.label, disabled = _a.disabled, isLoading = _a.isLoading, onClick = _a.onClick;
      var t = translationContext.useTranslation();
      if (disabled === void 0) {
        disabled = false;
      }
      return jsxRuntime.jsxs(
        "button",
        genericComponentOverrideContext.__assign(
          { type, disabled, onClick, "data-supertokens": "button" },
          { children: [t(label), isLoading && "..."] }
        )
      );
    }
    exports.Button = Button;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared.js
var require_emailpassword_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var translationContext = require_translationContext();
    function GeneralError(_a) {
      var error = _a.error;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign({ "data-supertokens": "generalError" }, { children: t(error) })
      );
    }
    exports.GeneralError = GeneralError;
  }
});

// node_modules/supertokens-auth-react/lib/build/checkedRoundIcon.js
var require_checkedRoundIcon = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/checkedRoundIcon.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    function EmailLargeIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          { xmlns: "http://www.w3.org/2000/svg", width: "59.867", height: "40.34", viewBox: "0 0 59.867 40.34" },
          {
            children: jsxRuntime.jsxs(
              "g",
              genericComponentOverrideContext.__assign(
                { id: "email", transform: "translate(0 -83.5)" },
                {
                  children: [
                    jsxRuntime.jsx("path", {
                      id: "Path_91396",
                      d: "M470.393 98.615h-3.508v36.805h3.508a3.031 3.031 0 0 0 .89-2.15v-32.505a3.031 3.031 0 0 0-.89-2.15z",
                      fill: "#8ae7ff",
                      transform: "translate(-412.293 -13.348)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91397",
                      d: "M115.09 100.765a3.031 3.031 0 0 0-.89-2.15H68.39a3.031 3.031 0 0 0-.89 2.15v32.506a3.031 3.031 0 0 0 .89 2.15h45.81a3.031 3.031 0 0 0 .89-2.15z",
                      fill: "#c4f3ff",
                      transform: "translate(-59.607 -13.348)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91398",
                      fill: "#4fdbff",
                      d: "M451.54 391l-3.04 3.508h3.508a3.031 3.031 0 0 0 2.15-.89z",
                      transform: "translate(-396.058 -271.545)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91399",
                      d: "M121.814 225.009v-.468L99.773 202.5l-24.658 24.658a3.031 3.031 0 0 0 2.15.89h41.509a3.04 3.04 0 0 0 3.04-3.039z",
                      fill: "#8ae7ff",
                      transform: "translate(-66.332 -105.086)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91400",
                      d: "M452.008 91H448.5l3.04 3.508 2.617-2.617a3.031 3.031 0 0 0-2.149-.891z",
                      fill: "#c4f3ff",
                      transform: "translate(-396.058 -6.623)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91401",
                      fill: "#fff",
                      d: "M118.774 91H77.265a3.031 3.031 0 0 0-2.15.89l20.318 20.318a6.139 6.139 0 0 0 8.681 0l17.7-17.7v-.468a3.04 3.04 0 0 0-3.04-3.04z",
                      transform: "translate(-66.332 -6.623)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91402",
                      d: "M55.95 83.5H10.933a3.922 3.922 0 0 0-3.917 3.917v8.36H.877a.877.877 0 1 0 0 1.754H11.4a.877.877 0 1 0 0-1.754H8.77v-8.36a2.147 2.147 0 0 1 .147-.776l17.029 17.029-17.03 17.03a2.147 2.147 0 0 1-.147-.776v-5.729a.877.877 0 1 0-1.754 0v5.729a3.922 3.922 0 0 0 3.917 3.917H55.95a3.922 3.922 0 0 0 3.917-3.917V87.417A3.922 3.922 0 0 0 55.95 83.5zm-15.013 20.17l17.03-17.029a2.147 2.147 0 0 1 .147.776v32.506a2.147 2.147 0 0 1-.147.776zM55.95 85.254a2.147 2.147 0 0 1 .776.147l-19.564 19.564a5.267 5.267 0 0 1-7.441 0L10.156 85.4a2.147 2.147 0 0 1 .776-.147zm-45.017 36.832a2.147 2.147 0 0 1-.776-.146l17.029-17.03 1.295 1.295a7.024 7.024 0 0 0 9.922 0l1.297-1.295 17.027 17.03a2.147 2.147 0 0 1-.776.146z"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91403",
                      d: "M7.893 218.5a.877.877 0 0 0-.877.877v2.631H.877a.877.877 0 0 0 0 1.754h14.031a.877.877 0 0 0 0-1.754H8.77v-2.631a.877.877 0 0 0-.877-.877z",
                      transform: "translate(0 -119.215)"
                    }),
                    jsxRuntime.jsx("path", {
                      id: "Path_91404",
                      d: "M11.4 283.762a.877.877 0 0 0 0-1.754H8.77v-2.631a.877.877 0 1 0-1.754 0v2.631H.877a.877.877 0 0 0 0 1.754z",
                      transform: "translate(0 -172.199)"
                    })
                  ]
                }
              )
            )
          }
        )
      );
    }
    function CheckedRoundIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "33",
            height: "33",
            viewBox: "0 0 33 33",
            "data-supertokens": "checkedRoundIcon"
          },
          {
            children: jsxRuntime.jsxs(
              "g",
              genericComponentOverrideContext.__assign(
                { fill: "rgb(var(--palette-success))", stroke: "rgb(var(--palette-success))" },
                {
                  children: [
                    jsxRuntime.jsx("path", {
                      d: "M6.715 15.334a1.135 1.135 0 0 1 1.605-1.605l4.558 4.558 9.573-9.573a1.135 1.135 0 0 1 1.605 1.605L13.748 20.627a1.231 1.231 0 0 1-1.741 0z",
                      transform: "translate(-.5 -.5) translate(1.242 1.703)"
                    }),
                    jsxRuntime.jsx("path", {
                      fillRule: "evenodd",
                      d: "M17 1a16 16 0 1 0 16 16A16 16 0 0 0 17 1zM3.462 17A13.538 13.538 0 1 1 17 30.538 13.538 13.538 0 0 1 3.462 17z",
                      transform: "translate(-.5 -.5)"
                    })
                  ]
                }
              )
            )
          }
        )
      );
    }
    exports.CheckedRoundIcon = CheckedRoundIcon;
    exports.EmailLargeIcon = EmailLargeIcon;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared5.js
var require_emailpassword_shared5 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared5.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var MANDATORY_FORM_FIELDS_ID_ARRAY = ["email", "password"];
    var DEFAULT_RESET_PASSWORD_PATH = "/reset-password";
    function defaultEmailValidator(value) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        var defaultEmailValidatorRegexp;
        return genericComponentOverrideContext.__generator(this, function(_a) {
          if (typeof value !== "string") {
            return [2, "ERROR_EMAIL_NON_STRING"];
          }
          value = value.trim();
          defaultEmailValidatorRegexp = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
          if (value.match(defaultEmailValidatorRegexp) === null) {
            return [2, "ERROR_EMAIL_INVALID"];
          }
          return [2, void 0];
        });
      });
    }
    function defaultPasswordValidator(value) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        return genericComponentOverrideContext.__generator(this, function(_a) {
          if (typeof value !== "string") {
            return [2, "ERROR_PASSWORD_NON_STRING"];
          }
          if (value.length < 8) {
            return [2, "ERROR_PASSWORD_TOO_SHORT"];
          }
          if (value.length >= 100) {
            return [2, "ERROR_PASSWORD_TOO_LONG"];
          }
          if (value.match(/^.*[A-Za-z]+.*$/) === null) {
            return [2, "ERROR_PASSWORD_NO_ALPHA"];
          }
          if (value.match(/^.*[0-9]+.*$/) === null) {
            return [2, "ERROR_PASSWORD_NO_NUM"];
          }
          return [2, void 0];
        });
      });
    }
    function defaultLoginPasswordValidator(value) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        return genericComponentOverrideContext.__generator(this, function(_a) {
          if (typeof value !== "string") {
            return [2, "ERROR_PASSWORD_NON_STRING"];
          }
          return [2, void 0];
        });
      });
    }
    function defaultValidate(_) {
      return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
        return genericComponentOverrideContext.__generator(this, function(_a) {
          return [2, void 0];
        });
      });
    }
    exports.DEFAULT_RESET_PASSWORD_PATH = DEFAULT_RESET_PASSWORD_PATH;
    exports.MANDATORY_FORM_FIELDS_ID_ARRAY = MANDATORY_FORM_FIELDS_ID_ARRAY;
    exports.defaultEmailValidator = defaultEmailValidator;
    exports.defaultLoginPasswordValidator = defaultLoginPasswordValidator;
    exports.defaultPasswordValidator = defaultPasswordValidator;
    exports.defaultValidate = defaultValidate;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared7.js
var require_emailpassword_shared7 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared7.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var STGeneralError = require_error2();
    var validators = require_emailpassword_shared5();
    var button = require_emailpassword_shared2();
    require_index2();
    var translationContext = require_translationContext();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var STGeneralError__default = _interopDefault(STGeneralError);
    function FormRow(_a) {
      var children = _a.children, hasError = _a.hasError;
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": ["formRow", hasError ? "hasError" : ""].join(" ") },
          { children }
        )
      );
    }
    function CheckedIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "14.862",
            height: "12.033",
            viewBox: "0 0 14.862 12.033",
            "data-supertokens": "checkedIcon"
          },
          {
            children: jsxRuntime.jsx("path", {
              fill: "rgb(var(--palette-primary))",
              d: "M12.629 49L5.06 56.572l-2.829-2.829L0 55.977l5.057 5.057.654-.651 9.152-9.152z",
              transform: "translate(0 -49)"
            })
          }
        )
      );
    }
    function ErrorIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "17",
            height: "15",
            viewBox: "0 0 17 15",
            "data-supertokens": "errorIcon"
          },
          {
            children: jsxRuntime.jsxs("g", {
              children: [
                jsxRuntime.jsx(
                  "g",
                  genericComponentOverrideContext.__assign(
                    { className: "Asdf", fill: "rgb(var(--palette-error))" },
                    {
                      children: jsxRuntime.jsx("path", {
                        d: "M13.568 14.75H3.432c-.63 0-1.195-.325-1.512-.869-.317-.544-.32-1.196-.01-1.744l5.067-8.943c.315-.556.884-.887 1.523-.887.639 0 1.208.331 1.523.887l5.067 8.943c.31.548.307 1.2-.01 1.744s-.882.869-1.512.869z",
                        transform: "translate(-824.894 -352.829) translate(824.894 352.829)"
                      })
                    }
                  )
                ),
                jsxRuntime.jsx(
                  "text",
                  genericComponentOverrideContext.__assign(
                    {
                      fill: "#fff",
                      fontSize: "10px",
                      fontWeight: "700",
                      transform: "translate(-824.894 -352.829) translate(832.014 365.198)"
                    },
                    {
                      children: jsxRuntime.jsx(
                        "tspan",
                        genericComponentOverrideContext.__assign({ x: "0", y: "0" }, { children: "!" })
                      )
                    }
                  )
                )
              ]
            })
          }
        )
      );
    }
    function ShowPasswordIcon(_a) {
      var showPassword = _a.showPassword;
      if (showPassword === true) {
        return jsxRuntime.jsx("div", {
          children: jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                xmlns: "http://www.w3.org/2000/svg",
                width: "18.391",
                height: "16.276",
                viewBox: "0 0 18.391 16.276",
                "data-supertokens": "showPasswordIcon show"
              },
              {
                children: jsxRuntime.jsxs("g", {
                  children: [
                    jsxRuntime.jsx("g", {
                      children: jsxRuntime.jsx("g", {
                        children: jsxRuntime.jsx("g", {
                          children: jsxRuntime.jsx("path", {
                            fill: "rgb(var(--palette-textPrimary))",
                            d: "M29.289 100.33c-2.4-3.63-5.619-5.63-9.069-5.63s-6.67 2-9.069 5.63a.767.767 0 0 0 0 .845c2.4 3.63 5.619 5.63 9.069 5.63s6.67-2 9.069-5.63a.767.767 0 0 0 0-.845zm-9.069 4.944c-2.785 0-5.435-1.6-7.5-4.519 2.065-2.92 4.715-4.519 7.5-4.519s5.435 1.6 7.5 4.519c-2.064 2.92-4.711 4.519-7.5 4.519z",
                            transform: "translate(-822 -420.048) translate(822 422.035) translate(-11.025 -94.7)"
                          })
                        })
                      })
                    }),
                    jsxRuntime.jsxs(
                      "g",
                      genericComponentOverrideContext.__assign(
                        {
                          fill: "rgb(var(--palette-textPrimary))",
                          stroke: "rgb(var(--palette-inputBackground))",
                          transform: "translate(-822 -420.048) translate(827.164 424.055)"
                        },
                        {
                          children: [
                            jsxRuntime.jsx("circle", {
                              cx: "4.036",
                              cy: "4.036",
                              r: "4.036",
                              stroke: "none"
                            }),
                            jsxRuntime.jsx("circle", {
                              cx: "4.036",
                              cy: "4.036",
                              r: "3.536",
                              fill: "none"
                            })
                          ]
                        }
                      )
                    ),
                    jsxRuntime.jsx("path", {
                      fill: "none",
                      stroke: "#707070",
                      strokeLinecap: "round",
                      strokeWidth: "2.25px",
                      d: "M11.981 0L0 11.981",
                      transform: "translate(-822 -420.048) translate(825.084 421.639)"
                    }),
                    jsxRuntime.jsx("path", {
                      fill: "none",
                      stroke: "rgb(var(--palette-inputBackground))",
                      strokeLinecap: "round",
                      d: "M13.978 0L0 13.978",
                      transform: "translate(-822 -420.048) translate(825.084 421.639)"
                    })
                  ]
                })
              }
            )
          )
        });
      }
      return jsxRuntime.jsx("div", {
        children: jsxRuntime.jsx(
          "svg",
          genericComponentOverrideContext.__assign(
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "18.281",
              height: "12.033",
              viewBox: "0 0 18.281 12.033",
              "data-supertokens": "showPasswordIcon hide"
            },
            {
              children: jsxRuntime.jsxs("g", {
                children: [
                  jsxRuntime.jsx("g", {
                    children: jsxRuntime.jsx("g", {
                      children: jsxRuntime.jsx("g", {
                        children: jsxRuntime.jsx("path", {
                          fill: "rgb(var(--palette-textPrimary))",
                          d: "M29.18 100.3c-2.384-3.608-5.586-5.6-9.015-5.6s-6.63 1.989-9.015 5.6a.763.763 0 0 0 0 .84c2.384 3.608 5.586 5.6 9.015 5.6s6.63-1.989 9.015-5.6a.763.763 0 0 0 0-.84zm-9.015 4.914c-2.769 0-5.4-1.589-7.459-4.492 2.052-2.9 4.686-4.492 7.459-4.492s5.4 1.589 7.459 4.492c-2.056 2.899-4.686 4.489-7.458 4.489z",
                          transform: "translate(-822 -422.088) translate(822 422.088) translate(-11.025 -94.7)"
                        })
                      })
                    })
                  }),
                  jsxRuntime.jsxs(
                    "g",
                    genericComponentOverrideContext.__assign(
                      {
                        fill: "rgb(var(--palette-textPrimary))",
                        stroke: "rgb(var(--palette-inputBackground))",
                        transform: "translate(-822 -422.088) translate(827.133 424.096)"
                      },
                      {
                        children: [
                          jsxRuntime.jsx("circle", {
                            cx: "4.012",
                            cy: "4.012",
                            r: "4.012",
                            stroke: "none"
                          }),
                          jsxRuntime.jsx("circle", {
                            cx: "4.012",
                            cy: "4.012",
                            r: "3.512",
                            fill: "none"
                          })
                        ]
                      }
                    )
                  )
                ]
              })
            }
          )
        )
      });
    }
    var Input = function(_a) {
      var type = _a.type, name = _a.name, hasError = _a.hasError, autoComplete = _a.autoComplete, onInputFocus = _a.onInputFocus, onInputBlur = _a.onInputBlur, onChange = _a.onChange, value = _a.value, placeholder = _a.placeholder, validated = _a.validated, autofocus = _a.autofocus;
      var t = translationContext.useTranslation();
      var _b = React.useState(false), showPassword = _b[0], setShowPassword = _b[1];
      function handleFocus() {
        if (onInputFocus !== void 0) {
          onInputFocus({
            id: name,
            value
          });
        }
      }
      function handleBlur() {
        if (onInputBlur !== void 0) {
          onInputBlur({
            id: name,
            value
          });
        }
      }
      function handleChange(event) {
        if (onChange) {
          onChange({
            id: name,
            value: event.target.value
          });
        }
      }
      if (autoComplete === void 0) {
        autoComplete = "off";
      }
      var inputType = type;
      if (type === "password" && showPassword === true) {
        inputType = "text";
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "inputContainer" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": ["inputWrapper", hasError ? "inputError" : ""].join(" ") },
                {
                  children: [
                    jsxRuntime.jsx("input", {
                      autoFocus: autofocus,
                      autoComplete,
                      "data-supertokens": "input",
                      className: "supertokens-input",
                      onFocus: handleFocus,
                      onBlur: handleBlur,
                      type: inputType,
                      name,
                      placeholder: t(placeholder),
                      onChange: handleChange,
                      value
                    }),
                    hasError === true && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "inputAdornment inputAdornmentError" },
                        { children: jsxRuntime.jsx(ErrorIcon, {}) }
                      )
                    ),
                    validated === true && hasError === false && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "inputAdornment inputAdornmentSuccess" },
                        { children: jsxRuntime.jsx(CheckedIcon, {}) }
                      )
                    ),
                    type === "password" && value.length > 0 && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        {
                          onClick: function() {
                            return setShowPassword(showPassword === false);
                          },
                          "data-supertokens": "inputAdornment showPassword"
                        },
                        {
                          children: jsxRuntime.jsx(ShowPasswordIcon, {
                            showPassword
                          })
                        }
                      )
                    )
                  ]
                }
              )
            )
          }
        )
      );
    };
    function InputError(_a) {
      var error = _a.error;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign({ "data-supertokens": "inputErrorMessage" }, { children: t(error) })
      );
    }
    function Label(_a) {
      var value = _a.value, showIsRequired = _a.showIsRequired;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "label" },
          { children: [t(value), showIsRequired && " *"] }
        )
      );
    }
    var FormBase = function(props) {
      var footer = props.footer, buttonLabel = props.buttonLabel, showLabels = props.showLabels, validateOnBlur = props.validateOnBlur, formFields = props.formFields;
      var unmounting = React.useRef(new AbortController());
      React.useEffect(
        function() {
          unmounting.current = new AbortController();
          return function() {
            unmounting.current.abort();
          };
        },
        [unmounting]
      );
      var _a = React.useState(
        props.formFields.map(function(f) {
          return { id: f.id, value: "" };
        })
      ), fieldStates = _a[0], setFieldStates = _a[1];
      var _b = React.useState(false), isLoading = _b[0], setIsLoading = _b[1];
      var updateFieldState = React.useCallback(
        function(id, update) {
          setFieldStates(function(os) {
            var field = os.find(function(f) {
              return f.id === id;
            });
            if (field === void 0) {
              return genericComponentOverrideContext.__spreadArray(
                genericComponentOverrideContext.__spreadArray([], os, true),
                [update({ id, value: "" })],
                false
              );
            }
            return os.filter(function(f) {
              return f !== field;
            }).concat(update(field));
          });
        },
        [setFieldStates]
      );
      var onInputFocus = React.useCallback(
        function(field) {
          updateFieldState(field.id, function(os) {
            return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, os), {
              validated: false
            });
          });
        },
        [updateFieldState]
      );
      var onInputBlur = React.useCallback(
        function(field) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var fieldConfig, error, _a2;
            return genericComponentOverrideContext.__generator(this, function(_b2) {
              switch (_b2.label) {
                case 0:
                  if (!validateOnBlur) {
                    return [2];
                  }
                  fieldConfig = props.formFields.find(function(f) {
                    return f.id === field.id;
                  });
                  if (!(fieldConfig && field.value !== ""))
                    return [3, 2];
                  return [4, fieldConfig.validate(field.value)];
                case 1:
                  _a2 = _b2.sent();
                  return [3, 3];
                case 2:
                  _a2 = void 0;
                  _b2.label = 3;
                case 3:
                  error = _a2;
                  updateFieldState(field.id, function(os) {
                    return genericComponentOverrideContext.__assign(
                      genericComponentOverrideContext.__assign({}, os),
                      { error, validated: error === void 0 && field.value.length !== 0 }
                    );
                  });
                  return [2];
              }
            });
          });
        },
        [validateOnBlur, updateFieldState, props.formFields]
      );
      var onInputChange = React.useCallback(
        function(field) {
          updateFieldState(field.id, function(os) {
            return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, os), {
              value: field.value,
              error: void 0
            });
          });
          props.clearError();
        },
        [updateFieldState]
      );
      var onFormSubmit = React.useCallback(
        function(e) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var apiFields, fieldUpdates, result, generalError, e_1, _loop_1, _i, formFields_1, field, errorFields_1;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  e.preventDefault();
                  setIsLoading(true);
                  setFieldStates(function(os) {
                    return os.map(function(fs) {
                      return genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, fs),
                        { error: void 0 }
                      );
                    });
                  });
                  apiFields = formFields.map(function(field2) {
                    var fieldState = fieldStates.find(function(fs) {
                      return fs.id === field2.id;
                    });
                    return {
                      id: field2.id,
                      value: fieldState === void 0 ? "" : fieldState.value
                    };
                  });
                  fieldUpdates = [];
                  _a2.label = 1;
                case 1:
                  _a2.trys.push([1, 6, 7, 8]);
                  result = void 0;
                  generalError = void 0;
                  _a2.label = 2;
                case 2:
                  _a2.trys.push([2, 4, , 5]);
                  return [
                    4,
                    props.callAPI(apiFields, function(id, value) {
                      return fieldUpdates.push({ id, value });
                    })
                  ];
                case 3:
                  result = _a2.sent();
                  return [3, 5];
                case 4:
                  e_1 = _a2.sent();
                  if (STGeneralError__default.default.isThisError(e_1)) {
                    generalError = e_1;
                  } else {
                    throw e_1;
                  }
                  return [3, 5];
                case 5:
                  if (unmounting.current.signal.aborted) {
                    return [2];
                  }
                  _loop_1 = function(field2) {
                    var update = fieldUpdates.find(function(f) {
                      return f.id === field2.id;
                    });
                    if (update || field2.clearOnSubmit === true) {
                      updateFieldState(field2.id, function(os) {
                        return genericComponentOverrideContext.__assign(
                          genericComponentOverrideContext.__assign({}, os),
                          { value: update ? update.value : "" }
                        );
                      });
                    }
                  };
                  for (_i = 0, formFields_1 = formFields; _i < formFields_1.length; _i++) {
                    field = formFields_1[_i];
                    _loop_1(field);
                  }
                  if (generalError !== void 0) {
                    props.onError(generalError.message);
                  } else {
                    if (result.status === "OK") {
                      setIsLoading(false);
                      props.clearError();
                      if (props.onSuccess !== void 0) {
                        props.onSuccess(result);
                      }
                    }
                    if (unmounting.current.signal.aborted) {
                      return [2];
                    }
                    if (result.status === "FIELD_ERROR") {
                      errorFields_1 = result.formFields;
                      setFieldStates(function(os) {
                        return os.map(function(fs) {
                          var _a3;
                          return genericComponentOverrideContext.__assign(
                            genericComponentOverrideContext.__assign({}, fs),
                            {
                              error: (_a3 = errorFields_1.find(function(ef) {
                                return ef.id === fs.id;
                              })) === null || _a3 === void 0 ? void 0 : _a3.error
                            }
                          );
                        });
                      });
                    }
                  }
                  return [3, 8];
                case 6:
                  _a2.sent();
                  props.onError("SOMETHING_WENT_WRONG_ERROR");
                  return [3, 8];
                case 7:
                  setIsLoading(false);
                  return [7];
                case 8:
                  return [2];
              }
            });
          });
        },
        [setIsLoading, setFieldStates, props, formFields, fieldStates]
      );
      return jsxRuntime.jsxs(
        "form",
        genericComponentOverrideContext.__assign(
          { autoComplete: "on", noValidate: true, onSubmit: onFormSubmit },
          {
            children: [
              formFields.map(function(field) {
                var type = "text";
                if (validators.MANDATORY_FORM_FIELDS_ID_ARRAY.includes(field.id)) {
                  type = field.id;
                }
                if (field.id === "confirm-password") {
                  type = "password";
                }
                var fstate = fieldStates.find(function(s) {
                  return s.id === field.id;
                }) || {
                  id: field.id,
                  validated: false,
                  error: void 0,
                  value: ""
                };
                return jsxRuntime.jsx(
                  FormRow,
                  genericComponentOverrideContext.__assign(
                    { hasError: fstate.error !== void 0 },
                    {
                      children: jsxRuntime.jsxs(React.Fragment, {
                        children: [
                          showLabels && (field.labelComponent !== void 0 ? field.labelComponent : jsxRuntime.jsx(Label, {
                            value: field.label,
                            showIsRequired: field.showIsRequired
                          })),
                          field.inputComponent !== void 0 ? jsxRuntime.jsx(field.inputComponent, {
                            type,
                            name: field.id,
                            validated: fstate.validated === true,
                            placeholder: field.placeholder,
                            value: fstate.value,
                            autoComplete: field.autoComplete,
                            autofocus: field.autofocus,
                            onInputFocus,
                            onInputBlur,
                            onChange: onInputChange,
                            hasError: fstate.error !== void 0
                          }) : jsxRuntime.jsx(Input, {
                            type,
                            name: field.id,
                            validated: fstate.validated === true,
                            placeholder: field.placeholder,
                            value: fstate.value,
                            autoComplete: field.autoComplete,
                            onInputFocus,
                            onInputBlur,
                            onChange: onInputChange,
                            autofocus: field.autofocus,
                            hasError: fstate.error !== void 0
                          }),
                          fstate.error && jsxRuntime.jsx(InputError, { error: fstate.error })
                        ]
                      })
                    }
                  ),
                  field.id
                );
              }),
              jsxRuntime.jsx(
                FormRow,
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      jsxRuntime.jsx(button.Button, {
                        disabled: isLoading,
                        isLoading,
                        type: "submit",
                        label: buttonLabel
                      }),
                      footer
                    ]
                  })
                },
                "form-button"
              )
            ]
          }
        )
      );
    };
    exports.ErrorIcon = ErrorIcon;
    exports.FormBase = FormBase;
    exports.FormRow = FormRow;
    exports.Label = Label;
  }
});

// node_modules/supertokens-auth-react/lib/build/arrowLeftIcon.js
var require_arrowLeftIcon = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/arrowLeftIcon.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    function ArrowLeftIcon(_a) {
      var color = _a.color;
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "11.272",
            height: "9.49",
            viewBox: "0 0 11.272 9.49",
            "data-supertokens": "arrowLeftIcon"
          },
          {
            children: jsxRuntime.jsx("path", {
              fill: color,
              stroke: "#fff",
              strokeWidth: "0.75px",
              d: "M9.931 5.2h.016-7.041L5.12 7.41a.581.581 0 0 1 0 .817l-.344.345a.576.576 0 0 1-.813 0L.168 4.778a.58.58 0 0 1 0-.816L3.962.168a.577.577 0 0 1 .813 0l.345.344a.57.57 0 0 1 .168.407.553.553 0 0 1-.168.4l-2.239 2.23h7.058a.6.6 0 0 1 .584.59v.487a.585.585 0 0 1-.592.574z",
              transform: "translate(.375 .375)"
            })
          }
        )
      );
    }
    exports.ArrowLeftIcon = ArrowLeftIcon;
  }
});

// node_modules/supertokens-auth-react/lib/build/passwordless-shared3.js
var require_passwordless_shared3 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/passwordless-shared3.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    var SuperTokensBranding = require_SuperTokensBranding();
    var componentOverrideContext = require_passwordless_shared();
    var React = require_react();
    var STGeneralError = require_error2();
    var recipe = require_session_shared2();
    var translations = require_translations();
    var translationContext = require_translationContext();
    var button = require_emailpassword_shared2();
    var session = require_session_shared3();
    var recipe$1 = require_passwordless_shared2();
    var generalError = require_emailpassword_shared();
    var checkedRoundIcon = require_checkedRoundIcon();
    var formBase = require_emailpassword_shared7();
    var validators = require_emailpassword_shared5();
    var arrowLeftIcon = require_arrowLeftIcon();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var STGeneralError__default = _interopDefault(STGeneralError);
    var styles = '/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 255, 155, 51;\n    --palette-primaryBorder: 238, 141, 35;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 34, 34, 34;\n    --palette-textLabel: 34, 34, 34;\n    --palette-textInput: 34, 34, 34;\n    --palette-textPrimary: 101, 101, 101;\n    --palette-textLink: 0, 118, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 128, 128, 128;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n}\n\n/*\n * Default styles.\n */\n\n@-webkit-keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n\n@keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n\n@-webkit-keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n\n@keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n\n[data-supertokens~="container"] {\n    font-family: "Rubik", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 0 auto;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 300;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 40px;\n    letter-spacing: 0.58px;\n    font-weight: 800;\n    margin-bottom: 2px;\n    color: rgb(var(--palette-textTitle));\n}\n\n[data-supertokens~="headerSubtitle"] {\n    margin-bottom: 21px;\n}\n\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n\n/* TODO: split the link style into separate things*/\n\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 500;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 300;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n\n[data-supertokens~="divider"] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n}\n\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n\n[data-supertokens~="linkButton"] {\n    background-color: transparent;\n    border: 0;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n\n[data-supertokens~="button"] {\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 700;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    -webkit-filter: brightness(0.85);\n            filter: brightness(0.85);\n}\n\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n[data-supertokens~="inputContainer"] {\n    margin-top: 6px;\n}\n\n[data-supertokens~="inputWrapper"] {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    background-color: rgb(var(--palette-inputBackground));\n    height: 34px;\n    border-radius: 6px;\n    border: 1px solid rgb(var(--palette-inputBorder));\n}\n\n[data-supertokens~="inputWrapper"][focus-within] {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputWrapper"]:focus-within {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"][focus-within] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"]:focus-within {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="input"] {\n    box-sizing: border-box;\n    padding-left: 15px;\n    -webkit-filter: none;\n            filter: none;\n    color: rgb(var(--palette-textInput));\n    background-color: transparent;\n    border-radius: 6px;\n    font-size: var(--font-size-1);\n    border: none;\n    padding-right: 25px;\n    letter-spacing: 1.2px;\n    flex: 9 1 75%;\n    width: 75%;\n    height: 32px;\n}\n\n[data-supertokens~="input"]:focus {\n    border: none;\n    outline: none;\n}\n\n[data-supertokens~="input"]:-webkit-autofill,\n[data-supertokens~="input"]:-webkit-autofill:hover,\n[data-supertokens~="input"]:-webkit-autofill:focus,\n[data-supertokens~="input"]:-webkit-autofill:active {\n    -webkit-text-fill-color: rgb(var(--palette-textInput));\n    box-shadow: 0 0 0 30px rgb(var(--palette-inputBackground)) inset;\n}\n\n[data-supertokens~="inputAdornment"] {\n    justify-content: center;\n    margin-right: 5px;\n}\n\n[data-supertokens~="showPassword"] {\n    cursor: pointer;\n}\n\n[data-supertokens~="forgotPasswordLink"] {\n    margin-top: 10px;\n}\n\n[data-supertokens~="enterEmailSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    word-break: break-word;\n}\n\n[data-supertokens~="submitNewPasswordSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\n[data-supertokens~="inputErrorMessage"] {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: rgb(var(--palette-error));\n    line-height: 24px;\n    font-weight: 400;\n    font-size: var(--font-size-1);\n    text-align: left;\n    -webkit-animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n            animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n    max-width: 330px;\n}\n\n@media (max-width: 440px) {\n    [data-supertokens~="inputErrorMessage"] {\n        max-width: 250px;\n    }\n}\n\n[data-supertokens~="inputErrorSymbol"] {\n    margin-right: 5px;\n    top: 1px;\n    position: relative;\n    left: 2px;\n}\n\n[data-supertokens~="label"] {\n    text-align: left;\n    font-weight: 600;\n    font-size: var(--font-size-1);\n    line-height: 24px;\n    color: rgb(var(--palette-textLabel));\n}\n\n[data-supertokens~="formRow"] {\n    display: flex;\n    flex-direction: column;\n    padding-top: 0px;\n    padding-bottom: 34px;\n}\n\n[data-supertokens~="formRow"][data-supertokens~="hasError"] {\n    padding-bottom: 0;\n}\n\n[data-supertokens~="sendVerifyEmailIcon"] {\n    margin-top: 11px;\n}\n\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n\n[data-supertokens~="sendVerifyEmailText"] {\n    line-height: 21px;\n    font-size: var(--font-size-1);\n    text-align: center;\n    font-weight: 300;\n    letter-spacing: 0.8px;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n\n[data-supertokens~="sendVerifyEmailResend"] {\n    margin-top: 13px;\n    font-weight: 300;\n}\n\n[data-supertokens~="sendVerifyEmailResend"]:hover {\n    text-decoration: underline;\n}\n\n[data-supertokens~="noFormRow"] {\n    padding-bottom: 25px;\n}\n\n[data-supertokens~="emailVerificationButtonWrapper"] {\n    padding-top: 25px;\n    max-width: 96px;\n    margin: 0 auto;\n}\n\n[data-supertokens~="resetPasswordHeaderTitle"] {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n[data-supertokens~="backButtonCommon"] {\n    width: 16px;\n    height: 13px;\n}\n\n[data-supertokens~="backButton"] {\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0px;\n}\n\n[data-supertokens~="backButtonPlaceholder"] {\n    display: block;\n}\n\n[data-supertokens~="resendEmailLink"] {\n    display: inline-block;\n}\n\n[data-supertokens~="generalSuccess"] {\n    margin-bottom: 20px;\n    -webkit-animation: swingIn 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) alternate 2 both;\n            animation: swingIn 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) alternate 2 both;\n}\n\n[data-supertokens~="codeInputLabelWrapper"] {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n[data-supertokens~="headerSubtitle"] strong {\n    max-width: 100%;\n    display: inline-block;\n    vertical-align: bottom;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n[data-supertokens~="sendCodeText"] {\n    margin-top: 15px;\n    margin-bottom: 20px;\n}\n\n[data-supertokens~="sendCodeText"] strong {\n    max-width: 100%;\n    display: inline-block;\n    vertical-align: bottom;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n[data-supertokens~="resendCodeBtn"] {\n    width: auto;\n    margin-top: 0;\n    line-height: 24px;\n}\n\n[data-supertokens~="resendCodeBtn"]:hover {\n    text-decoration: underline;\n}\n\n[data-supertokens~="resendCodeBtn"]:disabled {\n    color: rgb(var(--palette-textPrimary));\n    cursor: default;\n    text-decoration: none;\n}\n\n[data-supertokens~="phoneInputLibRoot"] {\n    display: flex;\n    align-items: center;\n}\n\n[data-supertokens~="phoneInputWrapper"] {\n    display: flex;\n    align-items: center;\n}\n\n[data-supertokens~="phoneInputWrapper"] .iti [data-supertokens~="input"] {\n    padding-left: 15px;\n}\n\n[data-supertokens~="phoneInputWrapper"] .iti {\n    flex: 1 1;\n    min-width: 0;\n    width: 100%;\n    background: transparent;\n    border: none;\n    color: inherit;\n    outline: none;\n}\n\n[data-supertokens~="continueButtonWrapper"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n}\n\n.iti__country-list {\n    border: 0;\n    top: 40px;\n    width: min(72.2vw, 320px);\n    border-radius: 6;\n    box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.16);\n}\n\n.iti__country {\n    display: flex;\n    align-items: center;\n    height: 34px;\n    cursor: pointer;\n\n    padding: 0 8px;\n}\n\n.iti__country-name {\n    color: var(--palette-textLabel);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: "0 16px";\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles, loadDefaultFont = _a.loadDefaultFont;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          children,
          loadDefaultFont && jsxRuntime.jsx("link", {
            href: "//fonts.googleapis.com/css?family=Rubik:wght@300;400;600;500;700",
            rel: "stylesheet",
            type: "text/css"
          }),
          jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })
        ]
      });
    };
    var PasswordlessLinkClickedScreen = function(props) {
      var t = translationContext.useTranslation();
      var _a = React.useState(false), loading = _a[0], setLoading = _a[1];
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: jsxRuntime.jsx(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row" },
                {
                  children: props.requireUserInteraction === true ? jsxRuntime.jsxs(React__namespace.default.Fragment, {
                    children: [
                      jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "headerTitle" },
                          { children: t("PWLESS_LINK_CLICKED_CONTINUE_HEADER") }
                        )
                      ),
                      jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "headerSubtitle secondaryText" },
                          { children: t("PWLESS_LINK_CLICKED_CONTINUE_DESC") }
                        )
                      ),
                      jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "continueButtonWrapper" },
                          {
                            children: jsxRuntime.jsx(button.Button, {
                              isLoading: loading,
                              onClick: function() {
                                setLoading(true);
                                props.consumeCode();
                              },
                              type: "button",
                              label: "PWLESS_LINK_CLICKED_CONTINUE_BUTTON"
                            })
                          }
                        )
                      )
                    ]
                  }) : jsxRuntime.jsx(
                    "div",
                    genericComponentOverrideContext.__assign(
                      { "data-supertokens": "spinner" },
                      { children: jsxRuntime.jsx(uiEntry.SpinnerIcon, {}) }
                    )
                  )
                }
              )
            )
          }
        )
      );
    };
    var LinkClickedScreenWithOverride = uiEntry.withOverride(
      "PasswordlessLinkClickedScreen",
      PasswordlessLinkClickedScreen
    );
    var LinkClickedScreen$1 = function(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      return jsxRuntime.jsx(
        ThemeBase,
        genericComponentOverrideContext.__assign(
          {
            loadDefaultFont: !hasFont,
            userStyles: [props.config.rootStyle, props.config.linkClickedScreenFeature.style]
          },
          {
            children: jsxRuntime.jsx(
              LinkClickedScreenWithOverride,
              genericComponentOverrideContext.__assign({}, props)
            )
          }
        )
      );
    };
    var defaultTranslationsPasswordless = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, translations.defaultTranslationsCommon.en),
        {
          GENERAL_ERROR_EMAIL_UNDEFINED: "Please set your email",
          GENERAL_ERROR_EMAIL_NON_STRING: "Email must be of type string",
          GENERAL_ERROR_EMAIL_INVALID: "Email is invalid",
          GENERAL_ERROR_PHONE_UNDEFINED: "Please set your phone number",
          GENERAL_ERROR_PHONE_NON_STRING: "Phone number must be of type string",
          GENERAL_ERROR_PHONE_INVALID: "Phone number is invalid",
          GENERAL_ERROR_EMAIL_OR_PHONE_UNDEFINED: "Please set your email or phone number",
          GENERAL_ERROR_EMAIL_OR_PHONE_NON_STRING: "Email or Phone number must be of type string",
          GENERAL_ERROR_EMAIL_OR_PHONE_INVALID: "Email or Phone number is invalid",
          GENERAL_ERROR_OTP_UNDEFINED: "Please fill your OTP",
          GENERAL_ERROR_OTP_INVALID: "Invalid OTP",
          GENERAL_ERROR_OTP_EXPIRED: "Expired OTP.",
          GENERAL_ERROR_OTP_NON_STRING: "OTP must be of type string",
          GENERAL_ERROR_OTP_EMPTY: "OTP cannot be empty",
          ERROR_SIGN_IN_UP_LINK: "Invalid magic link. Please try again.",
          ERROR_SIGN_IN_UP_RESEND_RESTART_FLOW: "Login timed out. Please try again.",
          ERROR_SIGN_IN_UP_CODE_CONSUME_RESTART_FLOW: "Login unsuccessful. Please try again.",
          PWLESS_CLOSE_TAB_TITLE: "Success!",
          PWLESS_CLOSE_TAB_SUBTITLE_LINE1: "You have been successfully signed in.",
          PWLESS_CLOSE_TAB_SUBTITLE_LINE2: "Please close this tab",
          PWLESS_SIGN_IN_UP_HEADER_TITLE: "Sign Up or Log In",
          PWLESS_SIGN_IN_UP_FOOTER_START: "By continuing, you agree to our ",
          PWLESS_SIGN_IN_UP_FOOTER_TOS: "Terms of Service",
          PWLESS_SIGN_IN_UP_FOOTER_AND: " and ",
          PWLESS_SIGN_IN_UP_FOOTER_PP: "Privacy Policy",
          PWLESS_SIGN_IN_UP_FOOTER_END: "",
          PWLESS_SIGN_IN_UP_EMAIL_LABEL: "Email",
          PWLESS_SIGN_IN_UP_PHONE_LABEL: "Phone Number",
          PWLESS_SIGN_IN_UP_EMAIL_OR_PHONE_LABEL: "Email or Phone number",
          PWLESS_SIGN_IN_UP_CONTINUE_BUTTON: "CONTINUE",
          PWLESS_EMAIL_OR_PHONE_INVALID_INPUT_GUESS_PHONE_ERR: "Please enter a valid phone number with its country code.",
          PWLESS_LINK_SENT_RESEND_SUCCESS: "Link resent",
          PWLESS_LINK_SENT_RESEND_TITLE: "Link sent!",
          PWLESS_LINK_SENT_RESEND_DESC_START_EMAIL: "We sent a link to ",
          PWLESS_LINK_SENT_RESEND_DESC_START_PHONE: "We sent a link to your phone number ",
          PWLESS_LINK_SENT_RESEND_DESC_END_EMAIL: " Click the link to login or sign up",
          PWLESS_LINK_SENT_RESEND_DESC_END_PHONE: "",
          PWLESS_SIGN_IN_UP_CHANGE_CONTACT_INFO_EMAIL: "Change email",
          PWLESS_SIGN_IN_UP_CHANGE_CONTACT_INFO_PHONE: "Change phone number",
          PWLESS_LINK_CLICKED_CONTINUE_HEADER: "Sign Up or Log In",
          PWLESS_LINK_CLICKED_CONTINUE_DESC: "Click the button below to log in on this device",
          PWLESS_LINK_CLICKED_CONTINUE_BUTTON: "CONTINUE",
          PWLESS_RESEND_SUCCESS_EMAIL: "Email resent",
          PWLESS_RESEND_SUCCESS_PHONE: "SMS resent",
          PWLESS_RESEND_BTN_DISABLED_START: "Resend in ",
          PWLESS_RESEND_BTN_DISABLED_END: "",
          PWLESS_RESEND_BTN_EMAIL: "Resend Email",
          PWLESS_RESEND_BTN_PHONE: "Resend SMS",
          PWLESS_USER_INPUT_CODE_HEADER_TITLE: "Enter OTP",
          PWLESS_USER_INPUT_CODE_HEADER_SUBTITLE: "An OTP was sent to you at",
          PWLESS_USER_INPUT_CODE_HEADER_SUBTITLE_LINK: "An OTP and a magic link was sent to you at",
          PWLESS_USER_INPUT_CODE_INPUT_LABEL: "OTP",
          "Failed to generate a one time code. Please try again": void 0,
          "Phone number is invalid": void 0,
          "Email is invalid": void 0
        }
      )
    };
    var LinkClickedScreen = function(props) {
      var userContext = uiEntry.useUserContext();
      var _a = React.useState(false), requireUserInteraction = _a[0], setRequireUserInteraction = _a[1];
      var consumeCodeAtMount = React.useCallback(
        function() {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var preAuthSessionId, linkCode, loginAttemptInfo;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  preAuthSessionId = genericComponentOverrideContext.getQueryParams("preAuthSessionId");
                  linkCode = genericComponentOverrideContext.getURLHash();
                  if (!(preAuthSessionId === null || preAuthSessionId.length === 0 || linkCode.length === 0))
                    return [3, 2];
                  return [
                    4,
                    genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
                      history: props.history,
                      queryParams: {
                        error: "signin"
                      },
                      redirectBack: false
                    })
                  ];
                case 1:
                  _a2.sent();
                  return [2, "REDIRECTING"];
                case 2:
                  return [
                    4,
                    props.recipe.webJSRecipe.getLoginAttemptInfo({ userContext })
                  ];
                case 3:
                  loginAttemptInfo = _a2.sent();
                  if ((loginAttemptInfo === null || loginAttemptInfo === void 0 ? void 0 : loginAttemptInfo.preAuthSessionId) !== preAuthSessionId) {
                    return [2, "REQUIRES_INTERACTION"];
                  }
                  return [
                    2,
                    props.recipe.webJSRecipe.consumeCode({
                      userContext
                    })
                  ];
              }
            });
          });
        },
        [props.recipe, props.history]
      );
      var handleConsumeResp = React.useCallback(
        function(response) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var loginAttemptInfo;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  if (response === "REQUIRES_INTERACTION") {
                    setRequireUserInteraction(true);
                  }
                  if (typeof response === "string") {
                    return [2];
                  }
                  if (response.status === "RESTART_FLOW_ERROR") {
                    return [
                      2,
                      genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
                        history: props.history,
                        queryParams: {
                          error: "restart_link"
                        },
                        redirectBack: false
                      })
                    ];
                  }
                  if (!(response.status === "OK"))
                    return [3, 3];
                  return [
                    4,
                    props.recipe.webJSRecipe.getLoginAttemptInfo({
                      userContext
                    })
                  ];
                case 1:
                  loginAttemptInfo = _a2.sent();
                  return [
                    4,
                    props.recipe.webJSRecipe.clearLoginAttemptInfo({
                      userContext
                    })
                  ];
                case 2:
                  _a2.sent();
                  return [
                    2,
                    recipe.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                      {
                        rid: props.recipe.config.recipeId,
                        successRedirectContext: {
                          action: "SUCCESS",
                          isNewUser: response.createdNewUser,
                          redirectToPath: loginAttemptInfo === null || loginAttemptInfo === void 0 ? void 0 : loginAttemptInfo.redirectToPath
                        }
                      },
                      userContext,
                      props.history
                    )
                  ];
                case 3:
                  return [2];
              }
            });
          });
        },
        [props.history, props.recipe]
      );
      var handleConsumeError = React.useCallback(
        function(err) {
          if (STGeneralError__default.default.isThisError(err)) {
            return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
              history: props.history,
              queryParams: {
                error: "custom",
                message: err.message
              },
              redirectBack: false
            });
          } else {
            return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
              history: props.history,
              queryParams: {
                error: "signin"
              },
              redirectBack: false
            });
          }
        },
        [props.recipe, props.history]
      );
      genericComponentOverrideContext.useOnMountAPICall(consumeCodeAtMount, handleConsumeResp, handleConsumeError);
      var recipeComponentOverrides = props.useComponentOverrides();
      var childProps = {
        recipeImplementation: props.recipe.webJSRecipe,
        config: props.recipe.config,
        requireUserInteraction,
        consumeCode: function() {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var consumeResp, err_1;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  _a2.trys.push([0, 3, , 4]);
                  return [
                    4,
                    props.recipe.webJSRecipe.consumeCode({
                      userContext
                    })
                  ];
                case 1:
                  consumeResp = _a2.sent();
                  return [4, handleConsumeResp(consumeResp)];
                case 2:
                  _a2.sent();
                  return [3, 4];
                case 3:
                  err_1 = _a2.sent();
                  void handleConsumeError(err_1);
                  return [3, 4];
                case 4:
                  return [2];
              }
            });
          });
        }
      };
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: props.recipe.config.useShadowDom,
                  defaultStore: defaultTranslationsPasswordless
                },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(
                        LinkClickedScreen$1,
                        genericComponentOverrideContext.__assign({}, childProps)
                      ),
                      props.children && React__namespace.default.Children.map(props.children, function(child) {
                        if (React__namespace.default.isValidElement(child)) {
                          return React__namespace.default.cloneElement(child, childProps);
                        }
                        return child;
                      })
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    var PasswordlessCloseTabScreen = function() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row noFormRow" },
                {
                  children: [
                    jsxRuntime.jsx(checkedRoundIcon.CheckedRoundIcon, {}),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerTitle" },
                        { children: t("PWLESS_CLOSE_TAB_TITLE") }
                      )
                    ),
                    jsxRuntime.jsx("div", { "data-supertokens": "divider" }),
                    jsxRuntime.jsxs(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerSubtitle secondaryText" },
                        {
                          children: [
                            t("PWLESS_CLOSE_TAB_SUBTITLE_LINE1"),
                            jsxRuntime.jsx("br", {}),
                            t("PWLESS_CLOSE_TAB_SUBTITLE_LINE2")
                          ]
                        }
                      )
                    )
                  ]
                }
              )
            )
          }
        )
      );
    };
    var CloseTabScreen = uiEntry.withOverride("PasswordlessCloseTabScreen", PasswordlessCloseTabScreen);
    var SignInUpFooter = uiEntry.withOverride("PasswordlessSignInUpFooter", function PasswordlessSignInUpFooter(_a) {
      var termsOfServiceLink = _a.termsOfServiceLink, privacyPolicyLink = _a.privacyPolicyLink;
      var t = translationContext.useTranslation();
      if (termsOfServiceLink === void 0 && privacyPolicyLink === void 0) {
        return null;
      }
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "secondaryText privacyPolicyAndTermsAndConditions" },
          {
            children: [
              t("PWLESS_SIGN_IN_UP_FOOTER_START"),
              termsOfServiceLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: termsOfServiceLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("PWLESS_SIGN_IN_UP_FOOTER_TOS") }
                )
              ),
              termsOfServiceLink !== void 0 && privacyPolicyLink !== void 0 && t("PWLESS_SIGN_IN_UP_FOOTER_AND"),
              privacyPolicyLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: privacyPolicyLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("PWLESS_SIGN_IN_UP_FOOTER_PP") }
                )
              ),
              t("PWLESS_SIGN_IN_UP_FOOTER_END")
            ]
          }
        )
      );
    });
    var EmailForm = uiEntry.withOverride("PasswordlessEmailForm", function PasswordlessEmailForm(props) {
      var _this = this;
      var userContext = uiEntry.useUserContext();
      return jsxRuntime.jsx(formBase.FormBase, {
        clearError: props.clearError,
        onError: props.onError,
        formFields: [
          {
            id: "email",
            label: "PWLESS_SIGN_IN_UP_EMAIL_LABEL",
            optional: false,
            autofocus: true,
            placeholder: "",
            validate: validators.defaultValidate
          }
        ],
        buttonLabel: "PWLESS_SIGN_IN_UP_CONTINUE_BUTTON",
        onSuccess: props.onSuccess,
        callAPI: function(formFields) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var email, validationRes, response;
            var _a;
            return genericComponentOverrideContext.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  email = (_a = formFields.find(function(field) {
                    return field.id === "email";
                  })) === null || _a === void 0 ? void 0 : _a.value;
                  if (email === void 0) {
                    throw new STGeneralError__default.default("GENERAL_ERROR_EMAIL_UNDEFINED");
                  }
                  return [4, props.config.validateEmailAddress(email)];
                case 1:
                  validationRes = _b.sent();
                  if (validationRes !== void 0) {
                    throw new STGeneralError__default.default(validationRes);
                  }
                  return [
                    4,
                    props.recipeImplementation.createCode({
                      email,
                      userContext
                    })
                  ];
                case 2:
                  response = _b.sent();
                  return [2, response];
              }
            });
          });
        },
        validateOnBlur: false,
        showLabels: true,
        footer: jsxRuntime.jsx(SignInUpFooter, {
          privacyPolicyLink: props.config.signInUpFeature.privacyPolicyLink,
          termsOfServiceLink: props.config.signInUpFeature.termsOfServiceLink
        })
      });
    });
    function getDefaultExportFromCjs(x) {
      return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
    }
    var intlTelInputExports$1 = {};
    var intlTelInput$2 = {
      get exports() {
        return intlTelInputExports$1;
      },
      set exports(v) {
        intlTelInputExports$1 = v;
      }
    };
    var intlTelInputExports = {};
    var intlTelInput$1 = {
      get exports() {
        return intlTelInputExports;
      },
      set exports(v) {
        intlTelInputExports = v;
      }
    };
    (function(module2) {
      (function(factory) {
        if (module2.exports)
          module2.exports = factory();
        else
          window.intlTelInput = factory();
      })(function(undefined$1) {
        return function() {
          var allCountries = [
            ["Afghanistan (\u202B\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646\u202C\u200E)", "af", "93"],
            ["Albania (Shqip\xEBri)", "al", "355"],
            ["Algeria (\u202B\u0627\u0644\u062C\u0632\u0627\u0626\u0631\u202C\u200E)", "dz", "213"],
            ["American Samoa", "as", "1", 5, ["684"]],
            ["Andorra", "ad", "376"],
            ["Angola", "ao", "244"],
            ["Anguilla", "ai", "1", 6, ["264"]],
            ["Antigua and Barbuda", "ag", "1", 7, ["268"]],
            ["Argentina", "ar", "54"],
            ["Armenia (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)", "am", "374"],
            ["Aruba", "aw", "297"],
            ["Ascension Island", "ac", "247"],
            ["Australia", "au", "61", 0],
            ["Austria (\xD6sterreich)", "at", "43"],
            ["Azerbaijan (Az\u0259rbaycan)", "az", "994"],
            ["Bahamas", "bs", "1", 8, ["242"]],
            ["Bahrain (\u202B\u0627\u0644\u0628\u062D\u0631\u064A\u0646\u202C\u200E)", "bh", "973"],
            ["Bangladesh (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)", "bd", "880"],
            ["Barbados", "bb", "1", 9, ["246"]],
            ["Belarus (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)", "by", "375"],
            ["Belgium (Belgi\xEB)", "be", "32"],
            ["Belize", "bz", "501"],
            ["Benin (B\xE9nin)", "bj", "229"],
            ["Bermuda", "bm", "1", 10, ["441"]],
            ["Bhutan (\u0F60\u0F56\u0FB2\u0F74\u0F42)", "bt", "975"],
            ["Bolivia", "bo", "591"],
            ["Bosnia and Herzegovina (\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)", "ba", "387"],
            ["Botswana", "bw", "267"],
            ["Brazil (Brasil)", "br", "55"],
            ["British Indian Ocean Territory", "io", "246"],
            ["British Virgin Islands", "vg", "1", 11, ["284"]],
            ["Brunei", "bn", "673"],
            ["Bulgaria (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)", "bg", "359"],
            ["Burkina Faso", "bf", "226"],
            ["Burundi (Uburundi)", "bi", "257"],
            ["Cambodia (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)", "kh", "855"],
            ["Cameroon (Cameroun)", "cm", "237"],
            [
              "Canada",
              "ca",
              "1",
              1,
              [
                "204",
                "226",
                "236",
                "249",
                "250",
                "289",
                "306",
                "343",
                "365",
                "387",
                "403",
                "416",
                "418",
                "431",
                "437",
                "438",
                "450",
                "506",
                "514",
                "519",
                "548",
                "579",
                "581",
                "587",
                "604",
                "613",
                "639",
                "647",
                "672",
                "705",
                "709",
                "742",
                "778",
                "780",
                "782",
                "807",
                "819",
                "825",
                "867",
                "873",
                "902",
                "905"
              ]
            ],
            ["Cape Verde (Kabu Verdi)", "cv", "238"],
            ["Caribbean Netherlands", "bq", "599", 1, ["3", "4", "7"]],
            ["Cayman Islands", "ky", "1", 12, ["345"]],
            ["Central African Republic (R\xE9publique centrafricaine)", "cf", "236"],
            ["Chad (Tchad)", "td", "235"],
            ["Chile", "cl", "56"],
            ["China (\u4E2D\u56FD)", "cn", "86"],
            ["Christmas Island", "cx", "61", 2, ["89164"]],
            ["Cocos (Keeling) Islands", "cc", "61", 1, ["89162"]],
            ["Colombia", "co", "57"],
            ["Comoros (\u202B\u062C\u0632\u0631 \u0627\u0644\u0642\u0645\u0631\u202C\u200E)", "km", "269"],
            ["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243"],
            ["Congo (Republic) (Congo-Brazzaville)", "cg", "242"],
            ["Cook Islands", "ck", "682"],
            ["Costa Rica", "cr", "506"],
            ["C\xF4te d\u2019Ivoire", "ci", "225"],
            ["Croatia (Hrvatska)", "hr", "385"],
            ["Cuba", "cu", "53"],
            ["Cura\xE7ao", "cw", "599", 0],
            ["Cyprus (\u039A\u03CD\u03C0\u03C1\u03BF\u03C2)", "cy", "357"],
            ["Czech Republic (\u010Cesk\xE1 republika)", "cz", "420"],
            ["Denmark (Danmark)", "dk", "45"],
            ["Djibouti", "dj", "253"],
            ["Dominica", "dm", "1", 13, ["767"]],
            ["Dominican Republic (Rep\xFAblica Dominicana)", "do", "1", 2, ["809", "829", "849"]],
            ["Ecuador", "ec", "593"],
            ["Egypt (\u202B\u0645\u0635\u0631\u202C\u200E)", "eg", "20"],
            ["El Salvador", "sv", "503"],
            ["Equatorial Guinea (Guinea Ecuatorial)", "gq", "240"],
            ["Eritrea", "er", "291"],
            ["Estonia (Eesti)", "ee", "372"],
            ["Eswatini", "sz", "268"],
            ["Ethiopia", "et", "251"],
            ["Falkland Islands (Islas Malvinas)", "fk", "500"],
            ["Faroe Islands (F\xF8royar)", "fo", "298"],
            ["Fiji", "fj", "679"],
            ["Finland (Suomi)", "fi", "358", 0],
            ["France", "fr", "33"],
            ["French Guiana (Guyane fran\xE7aise)", "gf", "594"],
            ["French Polynesia (Polyn\xE9sie fran\xE7aise)", "pf", "689"],
            ["Gabon", "ga", "241"],
            ["Gambia", "gm", "220"],
            ["Georgia (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)", "ge", "995"],
            ["Germany (Deutschland)", "de", "49"],
            ["Ghana (Gaana)", "gh", "233"],
            ["Gibraltar", "gi", "350"],
            ["Greece (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)", "gr", "30"],
            ["Greenland (Kalaallit Nunaat)", "gl", "299"],
            ["Grenada", "gd", "1", 14, ["473"]],
            ["Guadeloupe", "gp", "590", 0],
            ["Guam", "gu", "1", 15, ["671"]],
            ["Guatemala", "gt", "502"],
            ["Guernsey", "gg", "44", 1, ["1481", "7781", "7839", "7911"]],
            ["Guinea (Guin\xE9e)", "gn", "224"],
            ["Guinea-Bissau (Guin\xE9 Bissau)", "gw", "245"],
            ["Guyana", "gy", "592"],
            ["Haiti", "ht", "509"],
            ["Honduras", "hn", "504"],
            ["Hong Kong (\u9999\u6E2F)", "hk", "852"],
            ["Hungary (Magyarorsz\xE1g)", "hu", "36"],
            ["Iceland (\xCDsland)", "is", "354"],
            ["India (\u092D\u093E\u0930\u0924)", "in", "91"],
            ["Indonesia", "id", "62"],
            ["Iran (\u202B\u0627\u06CC\u0631\u0627\u0646\u202C\u200E)", "ir", "98"],
            ["Iraq (\u202B\u0627\u0644\u0639\u0631\u0627\u0642\u202C\u200E)", "iq", "964"],
            ["Ireland", "ie", "353"],
            ["Isle of Man", "im", "44", 2, ["1624", "74576", "7524", "7924", "7624"]],
            ["Israel (\u202B\u05D9\u05E9\u05E8\u05D0\u05DC\u202C\u200E)", "il", "972"],
            ["Italy (Italia)", "it", "39", 0],
            ["Jamaica", "jm", "1", 4, ["876", "658"]],
            ["Japan (\u65E5\u672C)", "jp", "81"],
            ["Jersey", "je", "44", 3, ["1534", "7509", "7700", "7797", "7829", "7937"]],
            ["Jordan (\u202B\u0627\u0644\u0623\u0631\u062F\u0646\u202C\u200E)", "jo", "962"],
            ["Kazakhstan (\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D)", "kz", "7", 1, ["33", "7"]],
            ["Kenya", "ke", "254"],
            ["Kiribati", "ki", "686"],
            ["Kosovo", "xk", "383"],
            ["Kuwait (\u202B\u0627\u0644\u0643\u0648\u064A\u062A\u202C\u200E)", "kw", "965"],
            ["Kyrgyzstan (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)", "kg", "996"],
            ["Laos (\u0EA5\u0EB2\u0EA7)", "la", "856"],
            ["Latvia (Latvija)", "lv", "371"],
            ["Lebanon (\u202B\u0644\u0628\u0646\u0627\u0646\u202C\u200E)", "lb", "961"],
            ["Lesotho", "ls", "266"],
            ["Liberia", "lr", "231"],
            ["Libya (\u202B\u0644\u064A\u0628\u064A\u0627\u202C\u200E)", "ly", "218"],
            ["Liechtenstein", "li", "423"],
            ["Lithuania (Lietuva)", "lt", "370"],
            ["Luxembourg", "lu", "352"],
            ["Macau (\u6FB3\u9580)", "mo", "853"],
            ["Madagascar (Madagasikara)", "mg", "261"],
            ["Malawi", "mw", "265"],
            ["Malaysia", "my", "60"],
            ["Maldives", "mv", "960"],
            ["Mali", "ml", "223"],
            ["Malta", "mt", "356"],
            ["Marshall Islands", "mh", "692"],
            ["Martinique", "mq", "596"],
            ["Mauritania (\u202B\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627\u202C\u200E)", "mr", "222"],
            ["Mauritius (Moris)", "mu", "230"],
            ["Mayotte", "yt", "262", 1, ["269", "639"]],
            ["Mexico (M\xE9xico)", "mx", "52"],
            ["Micronesia", "fm", "691"],
            ["Moldova (Republica Moldova)", "md", "373"],
            ["Monaco", "mc", "377"],
            ["Mongolia (\u041C\u043E\u043D\u0433\u043E\u043B)", "mn", "976"],
            ["Montenegro (Crna Gora)", "me", "382"],
            ["Montserrat", "ms", "1", 16, ["664"]],
            ["Morocco (\u202B\u0627\u0644\u0645\u063A\u0631\u0628\u202C\u200E)", "ma", "212", 0],
            ["Mozambique (Mo\xE7ambique)", "mz", "258"],
            ["Myanmar (Burma) (\u1019\u103C\u1014\u103A\u1019\u102C)", "mm", "95"],
            ["Namibia (Namibi\xEB)", "na", "264"],
            ["Nauru", "nr", "674"],
            ["Nepal (\u0928\u0947\u092A\u093E\u0932)", "np", "977"],
            ["Netherlands (Nederland)", "nl", "31"],
            ["New Caledonia (Nouvelle-Cal\xE9donie)", "nc", "687"],
            ["New Zealand", "nz", "64"],
            ["Nicaragua", "ni", "505"],
            ["Niger (Nijar)", "ne", "227"],
            ["Nigeria", "ng", "234"],
            ["Niue", "nu", "683"],
            ["Norfolk Island", "nf", "672"],
            ["North Korea (\uC870\uC120 \uBBFC\uC8FC\uC8FC\uC758 \uC778\uBBFC \uACF5\uD654\uAD6D)", "kp", "850"],
            ["North Macedonia (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)", "mk", "389"],
            ["Northern Mariana Islands", "mp", "1", 17, ["670"]],
            ["Norway (Norge)", "no", "47", 0],
            ["Oman (\u202B\u0639\u064F\u0645\u0627\u0646\u202C\u200E)", "om", "968"],
            ["Pakistan (\u202B\u067E\u0627\u06A9\u0633\u062A\u0627\u0646\u202C\u200E)", "pk", "92"],
            ["Palau", "pw", "680"],
            ["Palestine (\u202B\u0641\u0644\u0633\u0637\u064A\u0646\u202C\u200E)", "ps", "970"],
            ["Panama (Panam\xE1)", "pa", "507"],
            ["Papua New Guinea", "pg", "675"],
            ["Paraguay", "py", "595"],
            ["Peru (Per\xFA)", "pe", "51"],
            ["Philippines", "ph", "63"],
            ["Poland (Polska)", "pl", "48"],
            ["Portugal", "pt", "351"],
            ["Puerto Rico", "pr", "1", 3, ["787", "939"]],
            ["Qatar (\u202B\u0642\u0637\u0631\u202C\u200E)", "qa", "974"],
            ["R\xE9union (La R\xE9union)", "re", "262", 0],
            ["Romania (Rom\xE2nia)", "ro", "40"],
            ["Russia (\u0420\u043E\u0441\u0441\u0438\u044F)", "ru", "7", 0],
            ["Rwanda", "rw", "250"],
            ["Saint Barth\xE9lemy", "bl", "590", 1],
            ["Saint Helena", "sh", "290"],
            ["Saint Kitts and Nevis", "kn", "1", 18, ["869"]],
            ["Saint Lucia", "lc", "1", 19, ["758"]],
            ["Saint Martin (Saint-Martin (partie fran\xE7aise))", "mf", "590", 2],
            ["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", "pm", "508"],
            ["Saint Vincent and the Grenadines", "vc", "1", 20, ["784"]],
            ["Samoa", "ws", "685"],
            ["San Marino", "sm", "378"],
            ["S\xE3o Tom\xE9 and Pr\xEDncipe (S\xE3o Tom\xE9 e Pr\xEDncipe)", "st", "239"],
            ["Saudi Arabia (\u202B\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629\u202C\u200E)", "sa", "966"],
            ["Senegal (S\xE9n\xE9gal)", "sn", "221"],
            ["Serbia (\u0421\u0440\u0431\u0438\u0458\u0430)", "rs", "381"],
            ["Seychelles", "sc", "248"],
            ["Sierra Leone", "sl", "232"],
            ["Singapore", "sg", "65"],
            ["Sint Maarten", "sx", "1", 21, ["721"]],
            ["Slovakia (Slovensko)", "sk", "421"],
            ["Slovenia (Slovenija)", "si", "386"],
            ["Solomon Islands", "sb", "677"],
            ["Somalia (Soomaaliya)", "so", "252"],
            ["South Africa", "za", "27"],
            ["South Korea (\uB300\uD55C\uBBFC\uAD6D)", "kr", "82"],
            ["South Sudan (\u202B\u062C\u0646\u0648\u0628 \u0627\u0644\u0633\u0648\u062F\u0627\u0646\u202C\u200E)", "ss", "211"],
            ["Spain (Espa\xF1a)", "es", "34"],
            ["Sri Lanka (\u0DC1\u0DCA\u200D\u0DBB\u0DD3 \u0DBD\u0D82\u0D9A\u0DCF\u0DC0)", "lk", "94"],
            ["Sudan (\u202B\u0627\u0644\u0633\u0648\u062F\u0627\u0646\u202C\u200E)", "sd", "249"],
            ["Suriname", "sr", "597"],
            ["Svalbard and Jan Mayen", "sj", "47", 1, ["79"]],
            ["Sweden (Sverige)", "se", "46"],
            ["Switzerland (Schweiz)", "ch", "41"],
            ["Syria (\u202B\u0633\u0648\u0631\u064A\u0627\u202C\u200E)", "sy", "963"],
            ["Taiwan (\u53F0\u7063)", "tw", "886"],
            ["Tajikistan", "tj", "992"],
            ["Tanzania", "tz", "255"],
            ["Thailand (\u0E44\u0E17\u0E22)", "th", "66"],
            ["Timor-Leste", "tl", "670"],
            ["Togo", "tg", "228"],
            ["Tokelau", "tk", "690"],
            ["Tonga", "to", "676"],
            ["Trinidad and Tobago", "tt", "1", 22, ["868"]],
            ["Tunisia (\u202B\u062A\u0648\u0646\u0633\u202C\u200E)", "tn", "216"],
            ["Turkey (T\xFCrkiye)", "tr", "90"],
            ["Turkmenistan", "tm", "993"],
            ["Turks and Caicos Islands", "tc", "1", 23, ["649"]],
            ["Tuvalu", "tv", "688"],
            ["U.S. Virgin Islands", "vi", "1", 24, ["340"]],
            ["Uganda", "ug", "256"],
            ["Ukraine (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)", "ua", "380"],
            ["United Arab Emirates (\u202B\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629\u202C\u200E)", "ae", "971"],
            ["United Kingdom", "gb", "44", 0],
            ["United States", "us", "1", 0],
            ["Uruguay", "uy", "598"],
            ["Uzbekistan (O\u02BBzbekiston)", "uz", "998"],
            ["Vanuatu", "vu", "678"],
            ["Vatican City (Citt\xE0 del Vaticano)", "va", "39", 1, ["06698"]],
            ["Venezuela", "ve", "58"],
            ["Vietnam (Vi\u1EC7t Nam)", "vn", "84"],
            ["Wallis and Futuna (Wallis-et-Futuna)", "wf", "681"],
            ["Western Sahara (\u202B\u0627\u0644\u0635\u062D\u0631\u0627\u0621 \u0627\u0644\u063A\u0631\u0628\u064A\u0629\u202C\u200E)", "eh", "212", 1, ["5288", "5289"]],
            ["Yemen (\u202B\u0627\u0644\u064A\u0645\u0646\u202C\u200E)", "ye", "967"],
            ["Zambia", "zm", "260"],
            ["Zimbabwe", "zw", "263"],
            ["\xC5land Islands", "ax", "358", 1, ["18"]]
          ];
          for (var i = 0; i < allCountries.length; i++) {
            var c = allCountries[i];
            allCountries[i] = {
              name: c[0],
              iso2: c[1],
              dialCode: c[2],
              priority: c[3] || 0,
              areaCodes: c[4] || null
            };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          function _defineProperties(target, props) {
            for (var i2 = 0; i2 < props.length; i2++) {
              var descriptor = props[i2];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor)
                descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps)
              _defineProperties(Constructor.prototype, protoProps);
            if (staticProps)
              _defineProperties(Constructor, staticProps);
            return Constructor;
          }
          var intlTelInputGlobals = {
            getInstance: function getInstance(input) {
              var id2 = input.getAttribute("data-intl-tel-input-id");
              return window.intlTelInputGlobals.instances[id2];
            },
            instances: {},
            documentReady: function documentReady() {
              return document.readyState === "complete";
            }
          };
          if (typeof window === "object")
            window.intlTelInputGlobals = intlTelInputGlobals;
          var id = 0;
          var defaults = {
            allowDropdown: true,
            autoHideDialCode: true,
            autoPlaceholder: "polite",
            customContainer: "",
            customPlaceholder: null,
            dropdownContainer: null,
            excludeCountries: [],
            formatOnDisplay: true,
            geoIpLookup: null,
            hiddenInput: "",
            initialCountry: "",
            localizedCountries: null,
            nationalMode: true,
            onlyCountries: [],
            placeholderNumberType: "MOBILE",
            preferredCountries: ["us", "gb"],
            separateDialCode: false,
            utilsScript: ""
          };
          var regionlessNanpNumbers = [
            "800",
            "822",
            "833",
            "844",
            "855",
            "866",
            "877",
            "880",
            "881",
            "882",
            "883",
            "884",
            "885",
            "886",
            "887",
            "888",
            "889"
          ];
          var forEachProp = function forEachProp2(obj, callback) {
            var keys = Object.keys(obj);
            for (var i2 = 0; i2 < keys.length; i2++) {
              callback(keys[i2], obj[keys[i2]]);
            }
          };
          var forEachInstance = function forEachInstance2(method) {
            forEachProp(window.intlTelInputGlobals.instances, function(key) {
              window.intlTelInputGlobals.instances[key][method]();
            });
          };
          var Iti = function() {
            function Iti2(input, options) {
              var _this = this;
              _classCallCheck(this, Iti2);
              this.id = id++;
              this.telInput = input;
              this.activeItem = null;
              this.highlightedItem = null;
              var customOptions = options || {};
              this.options = {};
              forEachProp(defaults, function(key, value) {
                _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;
              });
              this.hadInitialPlaceholder = Boolean(input.getAttribute("placeholder"));
            }
            _createClass(Iti2, [
              {
                key: "_init",
                value: function _init() {
                  var _this2 = this;
                  if (this.options.nationalMode)
                    this.options.autoHideDialCode = false;
                  if (this.options.separateDialCode) {
                    this.options.autoHideDialCode = this.options.nationalMode = false;
                  }
                  this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                    navigator.userAgent
                  );
                  if (this.isMobile) {
                    document.body.classList.add("iti-mobile");
                    if (!this.options.dropdownContainer)
                      this.options.dropdownContainer = document.body;
                  }
                  if (typeof Promise !== "undefined") {
                    var autoCountryPromise = new Promise(function(resolve, reject) {
                      _this2.resolveAutoCountryPromise = resolve;
                      _this2.rejectAutoCountryPromise = reject;
                    });
                    var utilsScriptPromise = new Promise(function(resolve, reject) {
                      _this2.resolveUtilsScriptPromise = resolve;
                      _this2.rejectUtilsScriptPromise = reject;
                    });
                    this.promise = Promise.all([autoCountryPromise, utilsScriptPromise]);
                  } else {
                    this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {
                    };
                    this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {
                    };
                  }
                  this.selectedCountryData = {};
                  this._processCountryData();
                  this._generateMarkup();
                  this._setInitialState();
                  this._initListeners();
                  this._initRequests();
                }
              },
              {
                key: "_processCountryData",
                value: function _processCountryData() {
                  this._processAllCountries();
                  this._processCountryCodes();
                  this._processPreferredCountries();
                  if (this.options.localizedCountries)
                    this._translateCountriesByLocale();
                  if (this.options.onlyCountries.length || this.options.localizedCountries) {
                    this.countries.sort(this._countryNameSort);
                  }
                }
              },
              {
                key: "_addCountryCode",
                value: function _addCountryCode(iso2, countryCode, priority) {
                  if (countryCode.length > this.countryCodeMaxLen) {
                    this.countryCodeMaxLen = countryCode.length;
                  }
                  if (!this.countryCodes.hasOwnProperty(countryCode)) {
                    this.countryCodes[countryCode] = [];
                  }
                  for (var i2 = 0; i2 < this.countryCodes[countryCode].length; i2++) {
                    if (this.countryCodes[countryCode][i2] === iso2)
                      return;
                  }
                  var index = priority !== undefined$1 ? priority : this.countryCodes[countryCode].length;
                  this.countryCodes[countryCode][index] = iso2;
                }
              },
              {
                key: "_processAllCountries",
                value: function _processAllCountries() {
                  if (this.options.onlyCountries.length) {
                    var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {
                      return country.toLowerCase();
                    });
                    this.countries = allCountries.filter(function(country) {
                      return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;
                    });
                  } else if (this.options.excludeCountries.length) {
                    var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {
                      return country.toLowerCase();
                    });
                    this.countries = allCountries.filter(function(country) {
                      return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;
                    });
                  } else {
                    this.countries = allCountries;
                  }
                }
              },
              {
                key: "_translateCountriesByLocale",
                value: function _translateCountriesByLocale() {
                  for (var i2 = 0; i2 < this.countries.length; i2++) {
                    var iso = this.countries[i2].iso2.toLowerCase();
                    if (this.options.localizedCountries.hasOwnProperty(iso)) {
                      this.countries[i2].name = this.options.localizedCountries[iso];
                    }
                  }
                }
              },
              {
                key: "_countryNameSort",
                value: function _countryNameSort(a, b) {
                  return a.name.localeCompare(b.name);
                }
              },
              {
                key: "_processCountryCodes",
                value: function _processCountryCodes() {
                  this.countryCodeMaxLen = 0;
                  this.dialCodes = {};
                  this.countryCodes = {};
                  for (var i2 = 0; i2 < this.countries.length; i2++) {
                    var c2 = this.countries[i2];
                    if (!this.dialCodes[c2.dialCode])
                      this.dialCodes[c2.dialCode] = true;
                    this._addCountryCode(c2.iso2, c2.dialCode, c2.priority);
                  }
                  for (var _i = 0; _i < this.countries.length; _i++) {
                    var _c = this.countries[_i];
                    if (_c.areaCodes) {
                      var rootCountryCode = this.countryCodes[_c.dialCode][0];
                      for (var j = 0; j < _c.areaCodes.length; j++) {
                        var areaCode = _c.areaCodes[j];
                        for (var k = 1; k < areaCode.length; k++) {
                          var partialDialCode = _c.dialCode + areaCode.substr(0, k);
                          this._addCountryCode(rootCountryCode, partialDialCode);
                          this._addCountryCode(_c.iso2, partialDialCode);
                        }
                        this._addCountryCode(_c.iso2, _c.dialCode + areaCode);
                      }
                    }
                  }
                }
              },
              {
                key: "_processPreferredCountries",
                value: function _processPreferredCountries() {
                  this.preferredCountries = [];
                  for (var i2 = 0; i2 < this.options.preferredCountries.length; i2++) {
                    var countryCode = this.options.preferredCountries[i2].toLowerCase();
                    var countryData = this._getCountryData(countryCode, false, true);
                    if (countryData)
                      this.preferredCountries.push(countryData);
                  }
                }
              },
              {
                key: "_createEl",
                value: function _createEl(name, attrs, container) {
                  var el = document.createElement(name);
                  if (attrs)
                    forEachProp(attrs, function(key, value) {
                      return el.setAttribute(key, value);
                    });
                  if (container)
                    container.appendChild(el);
                  return el;
                }
              },
              {
                key: "_generateMarkup",
                value: function _generateMarkup() {
                  if (!this.telInput.hasAttribute("autocomplete") && !(this.telInput.form && this.telInput.form.hasAttribute("autocomplete"))) {
                    this.telInput.setAttribute("autocomplete", "off");
                  }
                  var parentClass = "iti";
                  if (this.options.allowDropdown)
                    parentClass += " iti--allow-dropdown";
                  if (this.options.separateDialCode)
                    parentClass += " iti--separate-dial-code";
                  if (this.options.customContainer) {
                    parentClass += " ";
                    parentClass += this.options.customContainer;
                  }
                  var wrapper = this._createEl("div", {
                    class: parentClass
                  });
                  this.telInput.parentNode.insertBefore(wrapper, this.telInput);
                  this.flagsContainer = this._createEl(
                    "div",
                    {
                      class: "iti__flag-container"
                    },
                    wrapper
                  );
                  wrapper.appendChild(this.telInput);
                  this.selectedFlag = this._createEl(
                    "div",
                    {
                      class: "iti__selected-flag",
                      role: "combobox",
                      "aria-controls": "iti-".concat(this.id, "__country-listbox"),
                      "aria-owns": "iti-".concat(this.id, "__country-listbox"),
                      "aria-expanded": "false"
                    },
                    this.flagsContainer
                  );
                  this.selectedFlagInner = this._createEl(
                    "div",
                    {
                      class: "iti__flag"
                    },
                    this.selectedFlag
                  );
                  if (this.options.separateDialCode) {
                    this.selectedDialCode = this._createEl(
                      "div",
                      {
                        class: "iti__selected-dial-code"
                      },
                      this.selectedFlag
                    );
                  }
                  if (this.options.allowDropdown) {
                    this.selectedFlag.setAttribute("tabindex", "0");
                    this.dropdownArrow = this._createEl(
                      "div",
                      {
                        class: "iti__arrow"
                      },
                      this.selectedFlag
                    );
                    this.countryList = this._createEl("ul", {
                      class: "iti__country-list iti__hide",
                      id: "iti-".concat(this.id, "__country-listbox"),
                      role: "listbox",
                      "aria-label": "List of countries"
                    });
                    if (this.preferredCountries.length) {
                      this._appendListItems(this.preferredCountries, "iti__preferred", true);
                      this._createEl(
                        "li",
                        {
                          class: "iti__divider",
                          role: "separator",
                          "aria-disabled": "true"
                        },
                        this.countryList
                      );
                    }
                    this._appendListItems(this.countries, "iti__standard");
                    if (this.options.dropdownContainer) {
                      this.dropdown = this._createEl("div", {
                        class: "iti iti--container"
                      });
                      this.dropdown.appendChild(this.countryList);
                    } else {
                      this.flagsContainer.appendChild(this.countryList);
                    }
                  }
                  if (this.options.hiddenInput) {
                    var hiddenInputName = this.options.hiddenInput;
                    var name = this.telInput.getAttribute("name");
                    if (name) {
                      var i2 = name.lastIndexOf("[");
                      if (i2 !== -1)
                        hiddenInputName = "".concat(name.substr(0, i2), "[").concat(hiddenInputName, "]");
                    }
                    this.hiddenInput = this._createEl("input", {
                      type: "hidden",
                      name: hiddenInputName
                    });
                    wrapper.appendChild(this.hiddenInput);
                  }
                }
              },
              {
                key: "_appendListItems",
                value: function _appendListItems(countries, className, preferred) {
                  var tmp = "";
                  for (var i2 = 0; i2 < countries.length; i2++) {
                    var c2 = countries[i2];
                    var idSuffix = preferred ? "-preferred" : "";
                    tmp += "<li class='iti__country ".concat(className, "' tabIndex='-1' id='iti-").concat(this.id, "__item-").concat(c2.iso2).concat(idSuffix, "' role='option' data-dial-code='").concat(c2.dialCode, "' data-country-code='").concat(c2.iso2, "' aria-selected='false'>");
                    tmp += "<div class='iti__flag-box'><div class='iti__flag iti__".concat(
                      c2.iso2,
                      "'></div></div>"
                    );
                    tmp += "<span class='iti__country-name'>".concat(c2.name, "</span>");
                    tmp += "<span class='iti__dial-code'>+".concat(c2.dialCode, "</span>");
                    tmp += "</li>";
                  }
                  this.countryList.insertAdjacentHTML("beforeend", tmp);
                }
              },
              {
                key: "_setInitialState",
                value: function _setInitialState() {
                  var attributeValue = this.telInput.getAttribute("value");
                  var inputValue = this.telInput.value;
                  var useAttribute = attributeValue && attributeValue.charAt(0) === "+" && (!inputValue || inputValue.charAt(0) !== "+");
                  var val = useAttribute ? attributeValue : inputValue;
                  var dialCode = this._getDialCode(val);
                  var isRegionlessNanp = this._isRegionlessNanp(val);
                  var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;
                  if (dialCode && !isRegionlessNanp) {
                    this._updateFlagFromNumber(val);
                  } else if (initialCountry !== "auto") {
                    if (initialCountry) {
                      this._setFlag(initialCountry.toLowerCase());
                    } else {
                      if (dialCode && isRegionlessNanp) {
                        this._setFlag("us");
                      } else {
                        this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;
                        if (!val) {
                          this._setFlag(this.defaultCountry);
                        }
                      }
                    }
                    if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {
                      this.telInput.value = "+".concat(this.selectedCountryData.dialCode);
                    }
                  }
                  if (val)
                    this._updateValFromNumber(val);
                }
              },
              {
                key: "_initListeners",
                value: function _initListeners() {
                  this._initKeyListeners();
                  if (this.options.autoHideDialCode)
                    this._initBlurListeners();
                  if (this.options.allowDropdown)
                    this._initDropdownListeners();
                  if (this.hiddenInput)
                    this._initHiddenInputListener();
                }
              },
              {
                key: "_initHiddenInputListener",
                value: function _initHiddenInputListener() {
                  var _this3 = this;
                  this._handleHiddenInputSubmit = function() {
                    _this3.hiddenInput.value = _this3.getNumber();
                  };
                  if (this.telInput.form)
                    this.telInput.form.addEventListener("submit", this._handleHiddenInputSubmit);
                }
              },
              {
                key: "_getClosestLabel",
                value: function _getClosestLabel() {
                  var el = this.telInput;
                  while (el && el.tagName !== "LABEL") {
                    el = el.parentNode;
                  }
                  return el;
                }
              },
              {
                key: "_initDropdownListeners",
                value: function _initDropdownListeners() {
                  var _this4 = this;
                  this._handleLabelClick = function(e) {
                    if (_this4.countryList.classList.contains("iti__hide"))
                      _this4.telInput.focus();
                    else
                      e.preventDefault();
                  };
                  var label = this._getClosestLabel();
                  if (label)
                    label.addEventListener("click", this._handleLabelClick);
                  this._handleClickSelectedFlag = function() {
                    if (_this4.countryList.classList.contains("iti__hide") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {
                      _this4._showDropdown();
                    }
                  };
                  this.selectedFlag.addEventListener("click", this._handleClickSelectedFlag);
                  this._handleFlagsContainerKeydown = function(e) {
                    var isDropdownHidden = _this4.countryList.classList.contains("iti__hide");
                    if (isDropdownHidden && ["ArrowUp", "Up", "ArrowDown", "Down", " ", "Enter"].indexOf(e.key) !== -1) {
                      e.preventDefault();
                      e.stopPropagation();
                      _this4._showDropdown();
                    }
                    if (e.key === "Tab")
                      _this4._closeDropdown();
                  };
                  this.flagsContainer.addEventListener("keydown", this._handleFlagsContainerKeydown);
                }
              },
              {
                key: "_initRequests",
                value: function _initRequests() {
                  var _this5 = this;
                  if (this.options.utilsScript && !window.intlTelInputUtils) {
                    if (window.intlTelInputGlobals.documentReady()) {
                      window.intlTelInputGlobals.loadUtils(this.options.utilsScript);
                    } else {
                      window.addEventListener("load", function() {
                        window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);
                      });
                    }
                  } else
                    this.resolveUtilsScriptPromise();
                  if (this.options.initialCountry === "auto")
                    this._loadAutoCountry();
                  else
                    this.resolveAutoCountryPromise();
                }
              },
              {
                key: "_loadAutoCountry",
                value: function _loadAutoCountry() {
                  if (window.intlTelInputGlobals.autoCountry) {
                    this.handleAutoCountry();
                  } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {
                    window.intlTelInputGlobals.startedLoadingAutoCountry = true;
                    if (typeof this.options.geoIpLookup === "function") {
                      this.options.geoIpLookup(
                        function(countryCode) {
                          window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();
                          setTimeout(function() {
                            return forEachInstance("handleAutoCountry");
                          });
                        },
                        function() {
                          return forEachInstance("rejectAutoCountryPromise");
                        }
                      );
                    }
                  }
                }
              },
              {
                key: "_initKeyListeners",
                value: function _initKeyListeners() {
                  var _this6 = this;
                  this._handleKeyupEvent = function() {
                    if (_this6._updateFlagFromNumber(_this6.telInput.value)) {
                      _this6._triggerCountryChange();
                    }
                  };
                  this.telInput.addEventListener("keyup", this._handleKeyupEvent);
                  this._handleClipboardEvent = function() {
                    setTimeout(_this6._handleKeyupEvent);
                  };
                  this.telInput.addEventListener("cut", this._handleClipboardEvent);
                  this.telInput.addEventListener("paste", this._handleClipboardEvent);
                }
              },
              {
                key: "_cap",
                value: function _cap(number) {
                  var max = this.telInput.getAttribute("maxlength");
                  return max && number.length > max ? number.substr(0, max) : number;
                }
              },
              {
                key: "_initBlurListeners",
                value: function _initBlurListeners() {
                  var _this7 = this;
                  this._handleSubmitOrBlurEvent = function() {
                    _this7._removeEmptyDialCode();
                  };
                  if (this.telInput.form)
                    this.telInput.form.addEventListener("submit", this._handleSubmitOrBlurEvent);
                  this.telInput.addEventListener("blur", this._handleSubmitOrBlurEvent);
                }
              },
              {
                key: "_removeEmptyDialCode",
                value: function _removeEmptyDialCode() {
                  if (this.telInput.value.charAt(0) === "+") {
                    var numeric = this._getNumeric(this.telInput.value);
                    if (!numeric || this.selectedCountryData.dialCode === numeric) {
                      this.telInput.value = "";
                    }
                  }
                }
              },
              {
                key: "_getNumeric",
                value: function _getNumeric(s) {
                  return s.replace(/\D/g, "");
                }
              },
              {
                key: "_trigger",
                value: function _trigger(name) {
                  var e = document.createEvent("Event");
                  e.initEvent(name, true, true);
                  this.telInput.dispatchEvent(e);
                }
              },
              {
                key: "_showDropdown",
                value: function _showDropdown() {
                  this.countryList.classList.remove("iti__hide");
                  this.selectedFlag.setAttribute("aria-expanded", "true");
                  this._setDropdownPosition();
                  if (this.activeItem) {
                    this._highlightListItem(this.activeItem, false);
                    this._scrollTo(this.activeItem, true);
                  }
                  this._bindDropdownListeners();
                  this.dropdownArrow.classList.add("iti__arrow--up");
                  this._trigger("open:countrydropdown");
                }
              },
              {
                key: "_toggleClass",
                value: function _toggleClass(el, className, shouldHaveClass) {
                  if (shouldHaveClass && !el.classList.contains(className))
                    el.classList.add(className);
                  else if (!shouldHaveClass && el.classList.contains(className))
                    el.classList.remove(className);
                }
              },
              {
                key: "_setDropdownPosition",
                value: function _setDropdownPosition() {
                  var _this8 = this;
                  if (this.options.dropdownContainer) {
                    this.options.dropdownContainer.appendChild(this.dropdown);
                  }
                  if (!this.isMobile) {
                    var pos = this.telInput.getBoundingClientRect();
                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;
                    var inputTop = pos.top + windowTop;
                    var dropdownHeight = this.countryList.offsetHeight;
                    var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;
                    var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;
                    this._toggleClass(
                      this.countryList,
                      "iti__country-list--dropup",
                      !dropdownFitsBelow && dropdownFitsAbove
                    );
                    if (this.options.dropdownContainer) {
                      var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;
                      this.dropdown.style.top = "".concat(inputTop + extraTop, "px");
                      this.dropdown.style.left = "".concat(pos.left + document.body.scrollLeft, "px");
                      this._handleWindowScroll = function() {
                        return _this8._closeDropdown();
                      };
                      window.addEventListener("scroll", this._handleWindowScroll);
                    }
                  }
                }
              },
              {
                key: "_getClosestListItem",
                value: function _getClosestListItem(target) {
                  var el = target;
                  while (el && el !== this.countryList && !el.classList.contains("iti__country")) {
                    el = el.parentNode;
                  }
                  return el === this.countryList ? null : el;
                }
              },
              {
                key: "_bindDropdownListeners",
                value: function _bindDropdownListeners() {
                  var _this9 = this;
                  this._handleMouseoverCountryList = function(e) {
                    var listItem = _this9._getClosestListItem(e.target);
                    if (listItem)
                      _this9._highlightListItem(listItem, false);
                  };
                  this.countryList.addEventListener("mouseover", this._handleMouseoverCountryList);
                  this._handleClickCountryList = function(e) {
                    var listItem = _this9._getClosestListItem(e.target);
                    if (listItem)
                      _this9._selectListItem(listItem);
                  };
                  this.countryList.addEventListener("click", this._handleClickCountryList);
                  var isOpening = true;
                  this._handleClickOffToClose = function() {
                    if (!isOpening)
                      _this9._closeDropdown();
                    isOpening = false;
                  };
                  document.documentElement.addEventListener("click", this._handleClickOffToClose);
                  var query = "";
                  var queryTimer = null;
                  this._handleKeydownOnDropdown = function(e) {
                    e.preventDefault();
                    if (e.key === "ArrowUp" || e.key === "Up" || e.key === "ArrowDown" || e.key === "Down")
                      _this9._handleUpDownKey(e.key);
                    else if (e.key === "Enter")
                      _this9._handleEnterKey();
                    else if (e.key === "Escape")
                      _this9._closeDropdown();
                    else if (/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {
                      if (queryTimer)
                        clearTimeout(queryTimer);
                      query += e.key.toLowerCase();
                      _this9._searchForCountry(query);
                      queryTimer = setTimeout(function() {
                        query = "";
                      }, 1e3);
                    }
                  };
                  document.addEventListener("keydown", this._handleKeydownOnDropdown);
                }
              },
              {
                key: "_handleUpDownKey",
                value: function _handleUpDownKey(key) {
                  var next = key === "ArrowUp" || key === "Up" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;
                  if (next) {
                    if (next.classList.contains("iti__divider")) {
                      next = key === "ArrowUp" || key === "Up" ? next.previousElementSibling : next.nextElementSibling;
                    }
                    this._highlightListItem(next, true);
                  }
                }
              },
              {
                key: "_handleEnterKey",
                value: function _handleEnterKey() {
                  if (this.highlightedItem)
                    this._selectListItem(this.highlightedItem);
                }
              },
              {
                key: "_searchForCountry",
                value: function _searchForCountry(query) {
                  for (var i2 = 0; i2 < this.countries.length; i2++) {
                    if (this._startsWith(this.countries[i2].name, query)) {
                      var listItem = this.countryList.querySelector(
                        "#iti-".concat(this.id, "__item-").concat(this.countries[i2].iso2)
                      );
                      this._highlightListItem(listItem, false);
                      this._scrollTo(listItem, true);
                      break;
                    }
                  }
                }
              },
              {
                key: "_startsWith",
                value: function _startsWith(a, b) {
                  return a.substr(0, b.length).toLowerCase() === b;
                }
              },
              {
                key: "_updateValFromNumber",
                value: function _updateValFromNumber(originalNumber) {
                  var number = originalNumber;
                  if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {
                    var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== "+");
                    var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;
                    var format = useNational ? NATIONAL : INTERNATIONAL;
                    number = intlTelInputUtils.formatNumber(
                      number,
                      this.selectedCountryData.iso2,
                      format
                    );
                  }
                  number = this._beforeSetNumber(number);
                  this.telInput.value = number;
                }
              },
              {
                key: "_updateFlagFromNumber",
                value: function _updateFlagFromNumber(originalNumber) {
                  var number = originalNumber;
                  var selectedDialCode = this.selectedCountryData.dialCode;
                  var isNanp = selectedDialCode === "1";
                  if (number && this.options.nationalMode && isNanp && number.charAt(0) !== "+") {
                    if (number.charAt(0) !== "1")
                      number = "1".concat(number);
                    number = "+".concat(number);
                  }
                  if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== "+") {
                    number = "+".concat(selectedDialCode).concat(number);
                  }
                  var dialCode = this._getDialCode(number, true);
                  var numeric = this._getNumeric(number);
                  var countryCode = null;
                  if (dialCode) {
                    var countryCodes = this.countryCodes[this._getNumeric(dialCode)];
                    var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;
                    var isRegionlessNanpNumber = selectedDialCode === "1" && this._isRegionlessNanp(numeric);
                    if (!isRegionlessNanpNumber && !alreadySelected) {
                      for (var j = 0; j < countryCodes.length; j++) {
                        if (countryCodes[j]) {
                          countryCode = countryCodes[j];
                          break;
                        }
                      }
                    }
                  } else if (number.charAt(0) === "+" && numeric.length) {
                    countryCode = "";
                  } else if (!number || number === "+") {
                    countryCode = this.defaultCountry;
                  }
                  if (countryCode !== null) {
                    return this._setFlag(countryCode);
                  }
                  return false;
                }
              },
              {
                key: "_isRegionlessNanp",
                value: function _isRegionlessNanp(number) {
                  var numeric = this._getNumeric(number);
                  if (numeric.charAt(0) === "1") {
                    var areaCode = numeric.substr(1, 3);
                    return regionlessNanpNumbers.indexOf(areaCode) !== -1;
                  }
                  return false;
                }
              },
              {
                key: "_highlightListItem",
                value: function _highlightListItem(listItem, shouldFocus) {
                  var prevItem = this.highlightedItem;
                  if (prevItem)
                    prevItem.classList.remove("iti__highlight");
                  this.highlightedItem = listItem;
                  this.highlightedItem.classList.add("iti__highlight");
                  if (shouldFocus)
                    this.highlightedItem.focus();
                }
              },
              {
                key: "_getCountryData",
                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {
                  var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;
                  for (var i2 = 0; i2 < countryList.length; i2++) {
                    if (countryList[i2].iso2 === countryCode) {
                      return countryList[i2];
                    }
                  }
                  if (allowFail) {
                    return null;
                  }
                  throw new Error("No country data for '".concat(countryCode, "'"));
                }
              },
              {
                key: "_setFlag",
                value: function _setFlag(countryCode) {
                  var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};
                  this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};
                  if (this.selectedCountryData.iso2) {
                    this.defaultCountry = this.selectedCountryData.iso2;
                  }
                  this.selectedFlagInner.setAttribute("class", "iti__flag iti__".concat(countryCode));
                  var title = countryCode ? "".concat(this.selectedCountryData.name, ": +").concat(this.selectedCountryData.dialCode) : "Unknown";
                  this.selectedFlag.setAttribute("title", title);
                  if (this.options.separateDialCode) {
                    var dialCode = this.selectedCountryData.dialCode ? "+".concat(this.selectedCountryData.dialCode) : "";
                    this.selectedDialCode.innerHTML = dialCode;
                    var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();
                    this.telInput.style.paddingLeft = "".concat(selectedFlagWidth + 6, "px");
                  }
                  this._updatePlaceholder();
                  if (this.options.allowDropdown) {
                    var prevItem = this.activeItem;
                    if (prevItem) {
                      prevItem.classList.remove("iti__active");
                      prevItem.setAttribute("aria-selected", "false");
                    }
                    if (countryCode) {
                      var nextItem = this.countryList.querySelector(
                        "#iti-".concat(this.id, "__item-").concat(countryCode, "-preferred")
                      ) || this.countryList.querySelector(
                        "#iti-".concat(this.id, "__item-").concat(countryCode)
                      );
                      nextItem.setAttribute("aria-selected", "true");
                      nextItem.classList.add("iti__active");
                      this.activeItem = nextItem;
                      this.selectedFlag.setAttribute(
                        "aria-activedescendant",
                        nextItem.getAttribute("id")
                      );
                    }
                  }
                  return prevCountry.iso2 !== countryCode;
                }
              },
              {
                key: "_getHiddenSelectedFlagWidth",
                value: function _getHiddenSelectedFlagWidth() {
                  var containerClone = this.telInput.parentNode.cloneNode();
                  containerClone.style.visibility = "hidden";
                  document.body.appendChild(containerClone);
                  var flagsContainerClone = this.flagsContainer.cloneNode();
                  containerClone.appendChild(flagsContainerClone);
                  var selectedFlagClone = this.selectedFlag.cloneNode(true);
                  flagsContainerClone.appendChild(selectedFlagClone);
                  var width = selectedFlagClone.offsetWidth;
                  containerClone.parentNode.removeChild(containerClone);
                  return width;
                }
              },
              {
                key: "_updatePlaceholder",
                value: function _updatePlaceholder() {
                  var shouldSetPlaceholder = this.options.autoPlaceholder === "aggressive" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === "polite";
                  if (window.intlTelInputUtils && shouldSetPlaceholder) {
                    var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];
                    var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(
                      this.selectedCountryData.iso2,
                      this.options.nationalMode,
                      numberType
                    ) : "";
                    placeholder = this._beforeSetNumber(placeholder);
                    if (typeof this.options.customPlaceholder === "function") {
                      placeholder = this.options.customPlaceholder(
                        placeholder,
                        this.selectedCountryData
                      );
                    }
                    this.telInput.setAttribute("placeholder", placeholder);
                  }
                }
              },
              {
                key: "_selectListItem",
                value: function _selectListItem(listItem) {
                  var flagChanged = this._setFlag(listItem.getAttribute("data-country-code"));
                  this._closeDropdown();
                  this._updateDialCode(listItem.getAttribute("data-dial-code"), true);
                  this.telInput.focus();
                  var len = this.telInput.value.length;
                  this.telInput.setSelectionRange(len, len);
                  if (flagChanged) {
                    this._triggerCountryChange();
                  }
                }
              },
              {
                key: "_closeDropdown",
                value: function _closeDropdown() {
                  this.countryList.classList.add("iti__hide");
                  this.selectedFlag.setAttribute("aria-expanded", "false");
                  this.dropdownArrow.classList.remove("iti__arrow--up");
                  document.removeEventListener("keydown", this._handleKeydownOnDropdown);
                  document.documentElement.removeEventListener("click", this._handleClickOffToClose);
                  this.countryList.removeEventListener("mouseover", this._handleMouseoverCountryList);
                  this.countryList.removeEventListener("click", this._handleClickCountryList);
                  if (this.options.dropdownContainer) {
                    if (!this.isMobile)
                      window.removeEventListener("scroll", this._handleWindowScroll);
                    if (this.dropdown.parentNode)
                      this.dropdown.parentNode.removeChild(this.dropdown);
                  }
                  this._trigger("close:countrydropdown");
                }
              },
              {
                key: "_scrollTo",
                value: function _scrollTo(element, middle) {
                  var container = this.countryList;
                  var windowTop = window.pageYOffset || document.documentElement.scrollTop;
                  var containerHeight = container.offsetHeight;
                  var containerTop = container.getBoundingClientRect().top + windowTop;
                  var containerBottom = containerTop + containerHeight;
                  var elementHeight = element.offsetHeight;
                  var elementTop = element.getBoundingClientRect().top + windowTop;
                  var elementBottom = elementTop + elementHeight;
                  var newScrollTop = elementTop - containerTop + container.scrollTop;
                  var middleOffset = containerHeight / 2 - elementHeight / 2;
                  if (elementTop < containerTop) {
                    if (middle)
                      newScrollTop -= middleOffset;
                    container.scrollTop = newScrollTop;
                  } else if (elementBottom > containerBottom) {
                    if (middle)
                      newScrollTop += middleOffset;
                    var heightDifference = containerHeight - elementHeight;
                    container.scrollTop = newScrollTop - heightDifference;
                  }
                }
              },
              {
                key: "_updateDialCode",
                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {
                  var inputVal = this.telInput.value;
                  var newDialCode = "+".concat(newDialCodeBare);
                  var newNumber;
                  if (inputVal.charAt(0) === "+") {
                    var prevDialCode = this._getDialCode(inputVal);
                    if (prevDialCode) {
                      newNumber = inputVal.replace(prevDialCode, newDialCode);
                    } else {
                      newNumber = newDialCode;
                    }
                  } else if (this.options.nationalMode || this.options.separateDialCode) {
                    return;
                  } else {
                    if (inputVal) {
                      newNumber = newDialCode + inputVal;
                    } else if (hasSelectedListItem || !this.options.autoHideDialCode) {
                      newNumber = newDialCode;
                    } else {
                      return;
                    }
                  }
                  this.telInput.value = newNumber;
                }
              },
              {
                key: "_getDialCode",
                value: function _getDialCode(number, includeAreaCode) {
                  var dialCode = "";
                  if (number.charAt(0) === "+") {
                    var numericChars = "";
                    for (var i2 = 0; i2 < number.length; i2++) {
                      var c2 = number.charAt(i2);
                      if (!isNaN(parseInt(c2, 10))) {
                        numericChars += c2;
                        if (includeAreaCode) {
                          if (this.countryCodes[numericChars]) {
                            dialCode = number.substr(0, i2 + 1);
                          }
                        } else {
                          if (this.dialCodes[numericChars]) {
                            dialCode = number.substr(0, i2 + 1);
                            break;
                          }
                        }
                        if (numericChars.length === this.countryCodeMaxLen) {
                          break;
                        }
                      }
                    }
                  }
                  return dialCode;
                }
              },
              {
                key: "_getFullNumber",
                value: function _getFullNumber() {
                  var val = this.telInput.value.trim();
                  var dialCode = this.selectedCountryData.dialCode;
                  var prefix;
                  var numericVal = this._getNumeric(val);
                  if (this.options.separateDialCode && val.charAt(0) !== "+" && dialCode && numericVal) {
                    prefix = "+".concat(dialCode);
                  } else {
                    prefix = "";
                  }
                  return prefix + val;
                }
              },
              {
                key: "_beforeSetNumber",
                value: function _beforeSetNumber(originalNumber) {
                  var number = originalNumber;
                  if (this.options.separateDialCode) {
                    var dialCode = this._getDialCode(number);
                    if (dialCode) {
                      dialCode = "+".concat(this.selectedCountryData.dialCode);
                      var start = number[dialCode.length] === " " || number[dialCode.length] === "-" ? dialCode.length + 1 : dialCode.length;
                      number = number.substr(start);
                    }
                  }
                  return this._cap(number);
                }
              },
              {
                key: "_triggerCountryChange",
                value: function _triggerCountryChange() {
                  this._trigger("countrychange");
                }
              },
              {
                key: "handleAutoCountry",
                value: function handleAutoCountry() {
                  if (this.options.initialCountry === "auto") {
                    this.defaultCountry = window.intlTelInputGlobals.autoCountry;
                    if (!this.telInput.value) {
                      this.setCountry(this.defaultCountry);
                    }
                    this.resolveAutoCountryPromise();
                  }
                }
              },
              {
                key: "handleUtils",
                value: function handleUtils() {
                  if (window.intlTelInputUtils) {
                    if (this.telInput.value) {
                      this._updateValFromNumber(this.telInput.value);
                    }
                    this._updatePlaceholder();
                  }
                  this.resolveUtilsScriptPromise();
                }
              },
              {
                key: "destroy",
                value: function destroy() {
                  var form = this.telInput.form;
                  if (this.options.allowDropdown) {
                    this._closeDropdown();
                    this.selectedFlag.removeEventListener("click", this._handleClickSelectedFlag);
                    this.flagsContainer.removeEventListener(
                      "keydown",
                      this._handleFlagsContainerKeydown
                    );
                    var label = this._getClosestLabel();
                    if (label)
                      label.removeEventListener("click", this._handleLabelClick);
                  }
                  if (this.hiddenInput && form)
                    form.removeEventListener("submit", this._handleHiddenInputSubmit);
                  if (this.options.autoHideDialCode) {
                    if (form)
                      form.removeEventListener("submit", this._handleSubmitOrBlurEvent);
                    this.telInput.removeEventListener("blur", this._handleSubmitOrBlurEvent);
                  }
                  this.telInput.removeEventListener("keyup", this._handleKeyupEvent);
                  this.telInput.removeEventListener("cut", this._handleClipboardEvent);
                  this.telInput.removeEventListener("paste", this._handleClipboardEvent);
                  this.telInput.removeAttribute("data-intl-tel-input-id");
                  var wrapper = this.telInput.parentNode;
                  wrapper.parentNode.insertBefore(this.telInput, wrapper);
                  wrapper.parentNode.removeChild(wrapper);
                  delete window.intlTelInputGlobals.instances[this.id];
                }
              },
              {
                key: "getExtension",
                value: function getExtension() {
                  if (window.intlTelInputUtils) {
                    return intlTelInputUtils.getExtension(
                      this._getFullNumber(),
                      this.selectedCountryData.iso2
                    );
                  }
                  return "";
                }
              },
              {
                key: "getNumber",
                value: function getNumber(format) {
                  if (window.intlTelInputUtils) {
                    var iso2 = this.selectedCountryData.iso2;
                    return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);
                  }
                  return "";
                }
              },
              {
                key: "getNumberType",
                value: function getNumberType() {
                  if (window.intlTelInputUtils) {
                    return intlTelInputUtils.getNumberType(
                      this._getFullNumber(),
                      this.selectedCountryData.iso2
                    );
                  }
                  return -99;
                }
              },
              {
                key: "getSelectedCountryData",
                value: function getSelectedCountryData() {
                  return this.selectedCountryData;
                }
              },
              {
                key: "getValidationError",
                value: function getValidationError() {
                  if (window.intlTelInputUtils) {
                    var iso2 = this.selectedCountryData.iso2;
                    return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);
                  }
                  return -99;
                }
              },
              {
                key: "isValidNumber",
                value: function isValidNumber() {
                  var val = this._getFullNumber().trim();
                  var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : "";
                  return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;
                }
              },
              {
                key: "setCountry",
                value: function setCountry(originalCountryCode) {
                  var countryCode = originalCountryCode.toLowerCase();
                  if (!this.selectedFlagInner.classList.contains("iti__".concat(countryCode))) {
                    this._setFlag(countryCode);
                    this._updateDialCode(this.selectedCountryData.dialCode, false);
                    this._triggerCountryChange();
                  }
                }
              },
              {
                key: "setNumber",
                value: function setNumber(number) {
                  var flagChanged = this._updateFlagFromNumber(number);
                  this._updateValFromNumber(number);
                  if (flagChanged) {
                    this._triggerCountryChange();
                  }
                }
              },
              {
                key: "setPlaceholderNumberType",
                value: function setPlaceholderNumberType(type) {
                  this.options.placeholderNumberType = type;
                  this._updatePlaceholder();
                }
              }
            ]);
            return Iti2;
          }();
          intlTelInputGlobals.getCountryData = function() {
            return allCountries;
          };
          var injectScript = function injectScript2(path, handleSuccess, handleFailure) {
            var script = document.createElement("script");
            script.onload = function() {
              forEachInstance("handleUtils");
              if (handleSuccess)
                handleSuccess();
            };
            script.onerror = function() {
              forEachInstance("rejectUtilsScriptPromise");
              if (handleFailure)
                handleFailure();
            };
            script.className = "iti-load-utils";
            script.async = true;
            script.src = path;
            document.body.appendChild(script);
          };
          intlTelInputGlobals.loadUtils = function(path) {
            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {
              window.intlTelInputGlobals.startedLoadingUtilsScript = true;
              if (typeof Promise !== "undefined") {
                return new Promise(function(resolve, reject) {
                  return injectScript(path, resolve, reject);
                });
              }
              injectScript(path);
            }
            return null;
          };
          intlTelInputGlobals.defaults = defaults;
          intlTelInputGlobals.version = "17.0.21";
          return function(input, options) {
            var iti = new Iti(input, options);
            iti._init();
            input.setAttribute("data-intl-tel-input-id", iti.id);
            window.intlTelInputGlobals.instances[iti.id] = iti;
            return iti;
          };
        }();
      });
    })(intlTelInput$1);
    (function(module2) {
      module2.exports = intlTelInputExports;
    })(intlTelInput$2);
    var intlTelInput = getDefaultExportFromCjs(intlTelInputExports$1);
    var phoneNumberInputLibStyles = '.iti {\n  position: relative;\n  display: inline-block; }\n  .iti * {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box; }\n  .iti__hide {\n    display: none; }\n  .iti__v-hide {\n    visibility: hidden; }\n  .iti input, .iti input[type=text], .iti input[type=tel] {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important; }\n  .iti input, .iti input[type=text], .iti input[type=tel] {\n    position: relative;\n    z-index: 0;\n    padding-right: 36px;\n    margin-right: 0; }\n  .iti__flag-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    padding: 1px; }\n  .iti__selected-flag {\n    z-index: 1;\n    position: relative;\n    display: flex;\n    align-items: center;\n    height: 100%;\n    padding: 0 6px 0 8px; }\n  .iti__arrow {\n    margin-left: 6px;\n    width: 0;\n    height: 0;\n    border-left: 3px solid transparent;\n    border-right: 3px solid transparent;\n    border-top: 4px solid #555; }\n  .iti__arrow--up {\n      border-top: none;\n      border-bottom: 4px solid #555; }\n  .iti__country-list {\n    position: absolute;\n    z-index: 2;\n    list-style: none;\n    text-align: left;\n    padding: 0;\n    margin: 0 0 0 -1px;\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);\n    background-color: white;\n    border: 1px solid #CCC;\n    white-space: nowrap;\n    max-height: 200px;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch; }\n  .iti__country-list--dropup {\n      bottom: 100%;\n      margin-bottom: -1px; }\n  @media (max-width: 500px) {\n      .iti__country-list {\n        white-space: normal; } }\n  .iti__flag-box {\n    display: inline-block;\n    width: 20px; }\n  .iti__divider {\n    padding-bottom: 5px;\n    margin-bottom: 5px;\n    border-bottom: 1px solid #CCC; }\n  .iti__country {\n    padding: 5px 10px;\n    outline: none; }\n  .iti__dial-code {\n    color: #999; }\n  .iti__country.iti__highlight {\n    background-color: rgba(0, 0, 0, 0.05); }\n  .iti__flag-box, .iti__country-name, .iti__dial-code {\n    vertical-align: middle; }\n  .iti__flag-box, .iti__country-name {\n    margin-right: 6px; }\n  .iti--allow-dropdown input, .iti--allow-dropdown input[type=text], .iti--allow-dropdown input[type=tel], .iti--separate-dial-code input, .iti--separate-dial-code input[type=text], .iti--separate-dial-code input[type=tel] {\n    padding-right: 6px;\n    padding-left: 52px;\n    margin-left: 0; }\n  .iti--allow-dropdown .iti__flag-container, .iti--separate-dial-code .iti__flag-container {\n    right: auto;\n    left: 0; }\n  .iti--allow-dropdown .iti__flag-container:hover {\n    cursor: pointer; }\n  .iti--allow-dropdown .iti__flag-container:hover .iti__selected-flag {\n      background-color: rgba(0, 0, 0, 0.05); }\n  .iti--allow-dropdown input[disabled] + .iti__flag-container:hover,\n  .iti--allow-dropdown input[readonly] + .iti__flag-container:hover {\n    cursor: default; }\n  .iti--allow-dropdown input[disabled] + .iti__flag-container:hover .iti__selected-flag,\n    .iti--allow-dropdown input[readonly] + .iti__flag-container:hover .iti__selected-flag {\n      background-color: transparent; }\n  .iti--separate-dial-code .iti__selected-flag {\n    background-color: rgba(0, 0, 0, 0.05); }\n  .iti--separate-dial-code .iti__selected-dial-code {\n    margin-left: 6px; }\n  .iti--container {\n    position: absolute;\n    top: -1000px;\n    left: -1000px;\n    z-index: 1060;\n    padding: 1px; }\n  .iti--container:hover {\n      cursor: pointer; }\n  .iti-mobile .iti--container {\n  top: 30px;\n  bottom: 30px;\n  left: 30px;\n  right: 30px;\n  position: fixed; }\n  .iti-mobile .iti__country-list {\n  max-height: 100%;\n  width: 100%; }\n  .iti-mobile .iti__country {\n  padding: 10px 10px;\n  line-height: 1.5em; }\n  .iti__flag {\n  width: 20px; }\n  .iti__flag.iti__be {\n    width: 18px; }\n  .iti__flag.iti__ch {\n    width: 15px; }\n  .iti__flag.iti__mc {\n    width: 19px; }\n  .iti__flag.iti__ne {\n    width: 18px; }\n  .iti__flag.iti__np {\n    width: 13px; }\n  .iti__flag.iti__va {\n    width: 15px; }\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    .iti__flag {\n      background-size: 5652px 15px; } }\n  .iti__flag.iti__ac {\n    height: 10px;\n    background-position: 0px 0px; }\n  .iti__flag.iti__ad {\n    height: 14px;\n    background-position: -22px 0px; }\n  .iti__flag.iti__ae {\n    height: 10px;\n    background-position: -44px 0px; }\n  .iti__flag.iti__af {\n    height: 14px;\n    background-position: -66px 0px; }\n  .iti__flag.iti__ag {\n    height: 14px;\n    background-position: -88px 0px; }\n  .iti__flag.iti__ai {\n    height: 10px;\n    background-position: -110px 0px; }\n  .iti__flag.iti__al {\n    height: 15px;\n    background-position: -132px 0px; }\n  .iti__flag.iti__am {\n    height: 10px;\n    background-position: -154px 0px; }\n  .iti__flag.iti__ao {\n    height: 14px;\n    background-position: -176px 0px; }\n  .iti__flag.iti__aq {\n    height: 14px;\n    background-position: -198px 0px; }\n  .iti__flag.iti__ar {\n    height: 13px;\n    background-position: -220px 0px; }\n  .iti__flag.iti__as {\n    height: 10px;\n    background-position: -242px 0px; }\n  .iti__flag.iti__at {\n    height: 14px;\n    background-position: -264px 0px; }\n  .iti__flag.iti__au {\n    height: 10px;\n    background-position: -286px 0px; }\n  .iti__flag.iti__aw {\n    height: 14px;\n    background-position: -308px 0px; }\n  .iti__flag.iti__ax {\n    height: 13px;\n    background-position: -330px 0px; }\n  .iti__flag.iti__az {\n    height: 10px;\n    background-position: -352px 0px; }\n  .iti__flag.iti__ba {\n    height: 10px;\n    background-position: -374px 0px; }\n  .iti__flag.iti__bb {\n    height: 14px;\n    background-position: -396px 0px; }\n  .iti__flag.iti__bd {\n    height: 12px;\n    background-position: -418px 0px; }\n  .iti__flag.iti__be {\n    height: 15px;\n    background-position: -440px 0px; }\n  .iti__flag.iti__bf {\n    height: 14px;\n    background-position: -460px 0px; }\n  .iti__flag.iti__bg {\n    height: 12px;\n    background-position: -482px 0px; }\n  .iti__flag.iti__bh {\n    height: 12px;\n    background-position: -504px 0px; }\n  .iti__flag.iti__bi {\n    height: 12px;\n    background-position: -526px 0px; }\n  .iti__flag.iti__bj {\n    height: 14px;\n    background-position: -548px 0px; }\n  .iti__flag.iti__bl {\n    height: 14px;\n    background-position: -570px 0px; }\n  .iti__flag.iti__bm {\n    height: 10px;\n    background-position: -592px 0px; }\n  .iti__flag.iti__bn {\n    height: 10px;\n    background-position: -614px 0px; }\n  .iti__flag.iti__bo {\n    height: 14px;\n    background-position: -636px 0px; }\n  .iti__flag.iti__bq {\n    height: 14px;\n    background-position: -658px 0px; }\n  .iti__flag.iti__br {\n    height: 14px;\n    background-position: -680px 0px; }\n  .iti__flag.iti__bs {\n    height: 10px;\n    background-position: -702px 0px; }\n  .iti__flag.iti__bt {\n    height: 14px;\n    background-position: -724px 0px; }\n  .iti__flag.iti__bv {\n    height: 15px;\n    background-position: -746px 0px; }\n  .iti__flag.iti__bw {\n    height: 14px;\n    background-position: -768px 0px; }\n  .iti__flag.iti__by {\n    height: 10px;\n    background-position: -790px 0px; }\n  .iti__flag.iti__bz {\n    height: 14px;\n    background-position: -812px 0px; }\n  .iti__flag.iti__ca {\n    height: 10px;\n    background-position: -834px 0px; }\n  .iti__flag.iti__cc {\n    height: 10px;\n    background-position: -856px 0px; }\n  .iti__flag.iti__cd {\n    height: 15px;\n    background-position: -878px 0px; }\n  .iti__flag.iti__cf {\n    height: 14px;\n    background-position: -900px 0px; }\n  .iti__flag.iti__cg {\n    height: 14px;\n    background-position: -922px 0px; }\n  .iti__flag.iti__ch {\n    height: 15px;\n    background-position: -944px 0px; }\n  .iti__flag.iti__ci {\n    height: 14px;\n    background-position: -961px 0px; }\n  .iti__flag.iti__ck {\n    height: 10px;\n    background-position: -983px 0px; }\n  .iti__flag.iti__cl {\n    height: 14px;\n    background-position: -1005px 0px; }\n  .iti__flag.iti__cm {\n    height: 14px;\n    background-position: -1027px 0px; }\n  .iti__flag.iti__cn {\n    height: 14px;\n    background-position: -1049px 0px; }\n  .iti__flag.iti__co {\n    height: 14px;\n    background-position: -1071px 0px; }\n  .iti__flag.iti__cp {\n    height: 14px;\n    background-position: -1093px 0px; }\n  .iti__flag.iti__cr {\n    height: 12px;\n    background-position: -1115px 0px; }\n  .iti__flag.iti__cu {\n    height: 10px;\n    background-position: -1137px 0px; }\n  .iti__flag.iti__cv {\n    height: 12px;\n    background-position: -1159px 0px; }\n  .iti__flag.iti__cw {\n    height: 14px;\n    background-position: -1181px 0px; }\n  .iti__flag.iti__cx {\n    height: 10px;\n    background-position: -1203px 0px; }\n  .iti__flag.iti__cy {\n    height: 14px;\n    background-position: -1225px 0px; }\n  .iti__flag.iti__cz {\n    height: 14px;\n    background-position: -1247px 0px; }\n  .iti__flag.iti__de {\n    height: 12px;\n    background-position: -1269px 0px; }\n  .iti__flag.iti__dg {\n    height: 10px;\n    background-position: -1291px 0px; }\n  .iti__flag.iti__dj {\n    height: 14px;\n    background-position: -1313px 0px; }\n  .iti__flag.iti__dk {\n    height: 15px;\n    background-position: -1335px 0px; }\n  .iti__flag.iti__dm {\n    height: 10px;\n    background-position: -1357px 0px; }\n  .iti__flag.iti__do {\n    height: 14px;\n    background-position: -1379px 0px; }\n  .iti__flag.iti__dz {\n    height: 14px;\n    background-position: -1401px 0px; }\n  .iti__flag.iti__ea {\n    height: 14px;\n    background-position: -1423px 0px; }\n  .iti__flag.iti__ec {\n    height: 14px;\n    background-position: -1445px 0px; }\n  .iti__flag.iti__ee {\n    height: 13px;\n    background-position: -1467px 0px; }\n  .iti__flag.iti__eg {\n    height: 14px;\n    background-position: -1489px 0px; }\n  .iti__flag.iti__eh {\n    height: 10px;\n    background-position: -1511px 0px; }\n  .iti__flag.iti__er {\n    height: 10px;\n    background-position: -1533px 0px; }\n  .iti__flag.iti__es {\n    height: 14px;\n    background-position: -1555px 0px; }\n  .iti__flag.iti__et {\n    height: 10px;\n    background-position: -1577px 0px; }\n  .iti__flag.iti__eu {\n    height: 14px;\n    background-position: -1599px 0px; }\n  .iti__flag.iti__fi {\n    height: 12px;\n    background-position: -1621px 0px; }\n  .iti__flag.iti__fj {\n    height: 10px;\n    background-position: -1643px 0px; }\n  .iti__flag.iti__fk {\n    height: 10px;\n    background-position: -1665px 0px; }\n  .iti__flag.iti__fm {\n    height: 11px;\n    background-position: -1687px 0px; }\n  .iti__flag.iti__fo {\n    height: 15px;\n    background-position: -1709px 0px; }\n  .iti__flag.iti__fr {\n    height: 14px;\n    background-position: -1731px 0px; }\n  .iti__flag.iti__ga {\n    height: 15px;\n    background-position: -1753px 0px; }\n  .iti__flag.iti__gb {\n    height: 10px;\n    background-position: -1775px 0px; }\n  .iti__flag.iti__gd {\n    height: 12px;\n    background-position: -1797px 0px; }\n  .iti__flag.iti__ge {\n    height: 14px;\n    background-position: -1819px 0px; }\n  .iti__flag.iti__gf {\n    height: 14px;\n    background-position: -1841px 0px; }\n  .iti__flag.iti__gg {\n    height: 14px;\n    background-position: -1863px 0px; }\n  .iti__flag.iti__gh {\n    height: 14px;\n    background-position: -1885px 0px; }\n  .iti__flag.iti__gi {\n    height: 10px;\n    background-position: -1907px 0px; }\n  .iti__flag.iti__gl {\n    height: 14px;\n    background-position: -1929px 0px; }\n  .iti__flag.iti__gm {\n    height: 14px;\n    background-position: -1951px 0px; }\n  .iti__flag.iti__gn {\n    height: 14px;\n    background-position: -1973px 0px; }\n  .iti__flag.iti__gp {\n    height: 14px;\n    background-position: -1995px 0px; }\n  .iti__flag.iti__gq {\n    height: 14px;\n    background-position: -2017px 0px; }\n  .iti__flag.iti__gr {\n    height: 14px;\n    background-position: -2039px 0px; }\n  .iti__flag.iti__gs {\n    height: 10px;\n    background-position: -2061px 0px; }\n  .iti__flag.iti__gt {\n    height: 13px;\n    background-position: -2083px 0px; }\n  .iti__flag.iti__gu {\n    height: 11px;\n    background-position: -2105px 0px; }\n  .iti__flag.iti__gw {\n    height: 10px;\n    background-position: -2127px 0px; }\n  .iti__flag.iti__gy {\n    height: 12px;\n    background-position: -2149px 0px; }\n  .iti__flag.iti__hk {\n    height: 14px;\n    background-position: -2171px 0px; }\n  .iti__flag.iti__hm {\n    height: 10px;\n    background-position: -2193px 0px; }\n  .iti__flag.iti__hn {\n    height: 10px;\n    background-position: -2215px 0px; }\n  .iti__flag.iti__hr {\n    height: 10px;\n    background-position: -2237px 0px; }\n  .iti__flag.iti__ht {\n    height: 12px;\n    background-position: -2259px 0px; }\n  .iti__flag.iti__hu {\n    height: 10px;\n    background-position: -2281px 0px; }\n  .iti__flag.iti__ic {\n    height: 14px;\n    background-position: -2303px 0px; }\n  .iti__flag.iti__id {\n    height: 14px;\n    background-position: -2325px 0px; }\n  .iti__flag.iti__ie {\n    height: 10px;\n    background-position: -2347px 0px; }\n  .iti__flag.iti__il {\n    height: 15px;\n    background-position: -2369px 0px; }\n  .iti__flag.iti__im {\n    height: 10px;\n    background-position: -2391px 0px; }\n  .iti__flag.iti__in {\n    height: 14px;\n    background-position: -2413px 0px; }\n  .iti__flag.iti__io {\n    height: 10px;\n    background-position: -2435px 0px; }\n  .iti__flag.iti__iq {\n    height: 14px;\n    background-position: -2457px 0px; }\n  .iti__flag.iti__ir {\n    height: 12px;\n    background-position: -2479px 0px; }\n  .iti__flag.iti__is {\n    height: 15px;\n    background-position: -2501px 0px; }\n  .iti__flag.iti__it {\n    height: 14px;\n    background-position: -2523px 0px; }\n  .iti__flag.iti__je {\n    height: 12px;\n    background-position: -2545px 0px; }\n  .iti__flag.iti__jm {\n    height: 10px;\n    background-position: -2567px 0px; }\n  .iti__flag.iti__jo {\n    height: 10px;\n    background-position: -2589px 0px; }\n  .iti__flag.iti__jp {\n    height: 14px;\n    background-position: -2611px 0px; }\n  .iti__flag.iti__ke {\n    height: 14px;\n    background-position: -2633px 0px; }\n  .iti__flag.iti__kg {\n    height: 12px;\n    background-position: -2655px 0px; }\n  .iti__flag.iti__kh {\n    height: 13px;\n    background-position: -2677px 0px; }\n  .iti__flag.iti__ki {\n    height: 10px;\n    background-position: -2699px 0px; }\n  .iti__flag.iti__km {\n    height: 12px;\n    background-position: -2721px 0px; }\n  .iti__flag.iti__kn {\n    height: 14px;\n    background-position: -2743px 0px; }\n  .iti__flag.iti__kp {\n    height: 10px;\n    background-position: -2765px 0px; }\n  .iti__flag.iti__kr {\n    height: 14px;\n    background-position: -2787px 0px; }\n  .iti__flag.iti__kw {\n    height: 10px;\n    background-position: -2809px 0px; }\n  .iti__flag.iti__ky {\n    height: 10px;\n    background-position: -2831px 0px; }\n  .iti__flag.iti__kz {\n    height: 10px;\n    background-position: -2853px 0px; }\n  .iti__flag.iti__la {\n    height: 14px;\n    background-position: -2875px 0px; }\n  .iti__flag.iti__lb {\n    height: 14px;\n    background-position: -2897px 0px; }\n  .iti__flag.iti__lc {\n    height: 10px;\n    background-position: -2919px 0px; }\n  .iti__flag.iti__li {\n    height: 12px;\n    background-position: -2941px 0px; }\n  .iti__flag.iti__lk {\n    height: 10px;\n    background-position: -2963px 0px; }\n  .iti__flag.iti__lr {\n    height: 11px;\n    background-position: -2985px 0px; }\n  .iti__flag.iti__ls {\n    height: 14px;\n    background-position: -3007px 0px; }\n  .iti__flag.iti__lt {\n    height: 12px;\n    background-position: -3029px 0px; }\n  .iti__flag.iti__lu {\n    height: 12px;\n    background-position: -3051px 0px; }\n  .iti__flag.iti__lv {\n    height: 10px;\n    background-position: -3073px 0px; }\n  .iti__flag.iti__ly {\n    height: 10px;\n    background-position: -3095px 0px; }\n  .iti__flag.iti__ma {\n    height: 14px;\n    background-position: -3117px 0px; }\n  .iti__flag.iti__mc {\n    height: 15px;\n    background-position: -3139px 0px; }\n  .iti__flag.iti__md {\n    height: 10px;\n    background-position: -3160px 0px; }\n  .iti__flag.iti__me {\n    height: 10px;\n    background-position: -3182px 0px; }\n  .iti__flag.iti__mf {\n    height: 14px;\n    background-position: -3204px 0px; }\n  .iti__flag.iti__mg {\n    height: 14px;\n    background-position: -3226px 0px; }\n  .iti__flag.iti__mh {\n    height: 11px;\n    background-position: -3248px 0px; }\n  .iti__flag.iti__mk {\n    height: 10px;\n    background-position: -3270px 0px; }\n  .iti__flag.iti__ml {\n    height: 14px;\n    background-position: -3292px 0px; }\n  .iti__flag.iti__mm {\n    height: 14px;\n    background-position: -3314px 0px; }\n  .iti__flag.iti__mn {\n    height: 10px;\n    background-position: -3336px 0px; }\n  .iti__flag.iti__mo {\n    height: 14px;\n    background-position: -3358px 0px; }\n  .iti__flag.iti__mp {\n    height: 10px;\n    background-position: -3380px 0px; }\n  .iti__flag.iti__mq {\n    height: 14px;\n    background-position: -3402px 0px; }\n  .iti__flag.iti__mr {\n    height: 14px;\n    background-position: -3424px 0px; }\n  .iti__flag.iti__ms {\n    height: 10px;\n    background-position: -3446px 0px; }\n  .iti__flag.iti__mt {\n    height: 14px;\n    background-position: -3468px 0px; }\n  .iti__flag.iti__mu {\n    height: 14px;\n    background-position: -3490px 0px; }\n  .iti__flag.iti__mv {\n    height: 14px;\n    background-position: -3512px 0px; }\n  .iti__flag.iti__mw {\n    height: 14px;\n    background-position: -3534px 0px; }\n  .iti__flag.iti__mx {\n    height: 12px;\n    background-position: -3556px 0px; }\n  .iti__flag.iti__my {\n    height: 10px;\n    background-position: -3578px 0px; }\n  .iti__flag.iti__mz {\n    height: 14px;\n    background-position: -3600px 0px; }\n  .iti__flag.iti__na {\n    height: 14px;\n    background-position: -3622px 0px; }\n  .iti__flag.iti__nc {\n    height: 10px;\n    background-position: -3644px 0px; }\n  .iti__flag.iti__ne {\n    height: 15px;\n    background-position: -3666px 0px; }\n  .iti__flag.iti__nf {\n    height: 10px;\n    background-position: -3686px 0px; }\n  .iti__flag.iti__ng {\n    height: 10px;\n    background-position: -3708px 0px; }\n  .iti__flag.iti__ni {\n    height: 12px;\n    background-position: -3730px 0px; }\n  .iti__flag.iti__nl {\n    height: 14px;\n    background-position: -3752px 0px; }\n  .iti__flag.iti__no {\n    height: 15px;\n    background-position: -3774px 0px; }\n  .iti__flag.iti__np {\n    height: 15px;\n    background-position: -3796px 0px; }\n  .iti__flag.iti__nr {\n    height: 10px;\n    background-position: -3811px 0px; }\n  .iti__flag.iti__nu {\n    height: 10px;\n    background-position: -3833px 0px; }\n  .iti__flag.iti__nz {\n    height: 10px;\n    background-position: -3855px 0px; }\n  .iti__flag.iti__om {\n    height: 10px;\n    background-position: -3877px 0px; }\n  .iti__flag.iti__pa {\n    height: 14px;\n    background-position: -3899px 0px; }\n  .iti__flag.iti__pe {\n    height: 14px;\n    background-position: -3921px 0px; }\n  .iti__flag.iti__pf {\n    height: 14px;\n    background-position: -3943px 0px; }\n  .iti__flag.iti__pg {\n    height: 15px;\n    background-position: -3965px 0px; }\n  .iti__flag.iti__ph {\n    height: 10px;\n    background-position: -3987px 0px; }\n  .iti__flag.iti__pk {\n    height: 14px;\n    background-position: -4009px 0px; }\n  .iti__flag.iti__pl {\n    height: 13px;\n    background-position: -4031px 0px; }\n  .iti__flag.iti__pm {\n    height: 14px;\n    background-position: -4053px 0px; }\n  .iti__flag.iti__pn {\n    height: 10px;\n    background-position: -4075px 0px; }\n  .iti__flag.iti__pr {\n    height: 14px;\n    background-position: -4097px 0px; }\n  .iti__flag.iti__ps {\n    height: 10px;\n    background-position: -4119px 0px; }\n  .iti__flag.iti__pt {\n    height: 14px;\n    background-position: -4141px 0px; }\n  .iti__flag.iti__pw {\n    height: 13px;\n    background-position: -4163px 0px; }\n  .iti__flag.iti__py {\n    height: 11px;\n    background-position: -4185px 0px; }\n  .iti__flag.iti__qa {\n    height: 8px;\n    background-position: -4207px 0px; }\n  .iti__flag.iti__re {\n    height: 14px;\n    background-position: -4229px 0px; }\n  .iti__flag.iti__ro {\n    height: 14px;\n    background-position: -4251px 0px; }\n  .iti__flag.iti__rs {\n    height: 14px;\n    background-position: -4273px 0px; }\n  .iti__flag.iti__ru {\n    height: 14px;\n    background-position: -4295px 0px; }\n  .iti__flag.iti__rw {\n    height: 14px;\n    background-position: -4317px 0px; }\n  .iti__flag.iti__sa {\n    height: 14px;\n    background-position: -4339px 0px; }\n  .iti__flag.iti__sb {\n    height: 10px;\n    background-position: -4361px 0px; }\n  .iti__flag.iti__sc {\n    height: 10px;\n    background-position: -4383px 0px; }\n  .iti__flag.iti__sd {\n    height: 10px;\n    background-position: -4405px 0px; }\n  .iti__flag.iti__se {\n    height: 13px;\n    background-position: -4427px 0px; }\n  .iti__flag.iti__sg {\n    height: 14px;\n    background-position: -4449px 0px; }\n  .iti__flag.iti__sh {\n    height: 10px;\n    background-position: -4471px 0px; }\n  .iti__flag.iti__si {\n    height: 10px;\n    background-position: -4493px 0px; }\n  .iti__flag.iti__sj {\n    height: 15px;\n    background-position: -4515px 0px; }\n  .iti__flag.iti__sk {\n    height: 14px;\n    background-position: -4537px 0px; }\n  .iti__flag.iti__sl {\n    height: 14px;\n    background-position: -4559px 0px; }\n  .iti__flag.iti__sm {\n    height: 15px;\n    background-position: -4581px 0px; }\n  .iti__flag.iti__sn {\n    height: 14px;\n    background-position: -4603px 0px; }\n  .iti__flag.iti__so {\n    height: 14px;\n    background-position: -4625px 0px; }\n  .iti__flag.iti__sr {\n    height: 14px;\n    background-position: -4647px 0px; }\n  .iti__flag.iti__ss {\n    height: 10px;\n    background-position: -4669px 0px; }\n  .iti__flag.iti__st {\n    height: 10px;\n    background-position: -4691px 0px; }\n  .iti__flag.iti__sv {\n    height: 12px;\n    background-position: -4713px 0px; }\n  .iti__flag.iti__sx {\n    height: 14px;\n    background-position: -4735px 0px; }\n  .iti__flag.iti__sy {\n    height: 14px;\n    background-position: -4757px 0px; }\n  .iti__flag.iti__sz {\n    height: 14px;\n    background-position: -4779px 0px; }\n  .iti__flag.iti__ta {\n    height: 10px;\n    background-position: -4801px 0px; }\n  .iti__flag.iti__tc {\n    height: 10px;\n    background-position: -4823px 0px; }\n  .iti__flag.iti__td {\n    height: 14px;\n    background-position: -4845px 0px; }\n  .iti__flag.iti__tf {\n    height: 14px;\n    background-position: -4867px 0px; }\n  .iti__flag.iti__tg {\n    height: 13px;\n    background-position: -4889px 0px; }\n  .iti__flag.iti__th {\n    height: 14px;\n    background-position: -4911px 0px; }\n  .iti__flag.iti__tj {\n    height: 10px;\n    background-position: -4933px 0px; }\n  .iti__flag.iti__tk {\n    height: 10px;\n    background-position: -4955px 0px; }\n  .iti__flag.iti__tl {\n    height: 10px;\n    background-position: -4977px 0px; }\n  .iti__flag.iti__tm {\n    height: 14px;\n    background-position: -4999px 0px; }\n  .iti__flag.iti__tn {\n    height: 14px;\n    background-position: -5021px 0px; }\n  .iti__flag.iti__to {\n    height: 10px;\n    background-position: -5043px 0px; }\n  .iti__flag.iti__tr {\n    height: 14px;\n    background-position: -5065px 0px; }\n  .iti__flag.iti__tt {\n    height: 12px;\n    background-position: -5087px 0px; }\n  .iti__flag.iti__tv {\n    height: 10px;\n    background-position: -5109px 0px; }\n  .iti__flag.iti__tw {\n    height: 14px;\n    background-position: -5131px 0px; }\n  .iti__flag.iti__tz {\n    height: 14px;\n    background-position: -5153px 0px; }\n  .iti__flag.iti__ua {\n    height: 14px;\n    background-position: -5175px 0px; }\n  .iti__flag.iti__ug {\n    height: 14px;\n    background-position: -5197px 0px; }\n  .iti__flag.iti__um {\n    height: 11px;\n    background-position: -5219px 0px; }\n  .iti__flag.iti__un {\n    height: 14px;\n    background-position: -5241px 0px; }\n  .iti__flag.iti__us {\n    height: 11px;\n    background-position: -5263px 0px; }\n  .iti__flag.iti__uy {\n    height: 14px;\n    background-position: -5285px 0px; }\n  .iti__flag.iti__uz {\n    height: 10px;\n    background-position: -5307px 0px; }\n  .iti__flag.iti__va {\n    height: 15px;\n    background-position: -5329px 0px; }\n  .iti__flag.iti__vc {\n    height: 14px;\n    background-position: -5346px 0px; }\n  .iti__flag.iti__ve {\n    height: 14px;\n    background-position: -5368px 0px; }\n  .iti__flag.iti__vg {\n    height: 10px;\n    background-position: -5390px 0px; }\n  .iti__flag.iti__vi {\n    height: 14px;\n    background-position: -5412px 0px; }\n  .iti__flag.iti__vn {\n    height: 14px;\n    background-position: -5434px 0px; }\n  .iti__flag.iti__vu {\n    height: 12px;\n    background-position: -5456px 0px; }\n  .iti__flag.iti__wf {\n    height: 14px;\n    background-position: -5478px 0px; }\n  .iti__flag.iti__ws {\n    height: 10px;\n    background-position: -5500px 0px; }\n  .iti__flag.iti__xk {\n    height: 15px;\n    background-position: -5522px 0px; }\n  .iti__flag.iti__ye {\n    height: 14px;\n    background-position: -5544px 0px; }\n  .iti__flag.iti__yt {\n    height: 14px;\n    background-position: -5566px 0px; }\n  .iti__flag.iti__za {\n    height: 14px;\n    background-position: -5588px 0px; }\n  .iti__flag.iti__zm {\n    height: 14px;\n    background-position: -5610px 0px; }\n  .iti__flag.iti__zw {\n    height: 10px;\n    background-position: -5632px 0px; }\n  .iti__flag {\n  height: 15px;\n  box-shadow: 0px 0px 1px 0px #888;\n  background-image: url("../img/flags.png");\n  background-repeat: no-repeat;\n  background-color: #DBDBDB;\n  background-position: 20px 0; }\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    .iti__flag {\n      background-image: url("../img/flags@2x.png"); } }\n  .iti__flag.iti__np {\n  background-color: transparent; }\n';
    function PhoneNumberInput(_a) {
      var defaultCountry = _a.defaultCountry, autoComplete = _a.autoComplete, autofocus = _a.autofocus, name = _a.name, onInputBlur = _a.onInputBlur, onInputFocus = _a.onInputFocus, onChange = _a.onChange, hasError = _a.hasError, value = _a.value;
      function handleFocus() {
        if (onInputFocus !== void 0) {
          onInputFocus({
            id: name,
            value
          });
        }
      }
      function handleBlur() {
        if (onInputBlur !== void 0) {
          onInputBlur({
            id: name,
            value
          });
        }
      }
      var _b = React.useState(), phoneInputInstance = _b[0], setPhoneInputInstance = _b[1];
      var onChangeRef = React.useRef();
      React.useEffect(
        function() {
          onChangeRef.current = onChange;
        },
        [onChange]
      );
      var handleChange = React.useCallback(
        function(newValue) {
          if (onChangeRef.current !== void 0) {
            onChangeRef.current({
              id: name,
              value: newValue
            });
          }
        },
        [onChangeRef]
      );
      var handleCountryChange = React.useCallback(
        function(ev) {
          if (onChangeRef.current !== void 0 && phoneInputInstance !== void 0) {
            onChangeRef.current({
              id: name,
              value: ev.target.value
            });
          }
        },
        [onChangeRef]
      );
      var inputRef = React.useRef(null);
      React.useEffect(
        function() {
          if (inputRef.current !== null && inputRef.current.value !== value && phoneInputInstance) {
            phoneInputInstance.setNumber(value);
          }
        },
        [phoneInputInstance, value]
      );
      React.useEffect(function() {
        if (inputRef.current !== null && inputRef.current.dataset["intl-tel-input-id"] === void 0) {
          var iti = intlTelInput(inputRef.current, {
            initialCountry: defaultCountry,
            nationalMode: false,
            preferredCountries: defaultCountry ? [defaultCountry] : []
          });
          if (value.length > 0) {
            iti.setNumber(value);
          } else if (defaultCountry === void 0) {
            iti.setCountry("");
          } else {
            var data = iti.getSelectedCountryData();
            handleChange("+" + data.dialCode);
          }
          var anyIti = iti;
          if (anyIti.isMobile) {
            var root = document.getElementById(genericComponentOverrideContext.ST_ROOT_ID);
            if (root === null || root === void 0 ? void 0 : root.shadowRoot) {
              var container = root.shadowRoot.querySelector("[data-supertokens~=container]");
              if (!container) {
                throw new Error("Should never happen: container element not found");
              }
              container.classList.add("iti-mobile");
              anyIti.options.dropdownContainer = container;
            }
          }
          inputRef.current.addEventListener("countrychange", handleCountryChange);
          setPhoneInputInstance(iti);
        }
      }, []);
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "inputContainer" },
          {
            children: [
              jsxRuntime.jsxs(
                "style",
                genericComponentOverrideContext.__assign(
                  { type: "text/css" },
                  {
                    children: [
                      phoneNumberInputLibStyles,
                      '\n                    .iti__flag {background-image: url("https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/img/flags.png");}\n\n                    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n                        .iti__flag {background-image: url("https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/img/flags@2x.png");}\n                    }\n                '
                    ]
                  }
                )
              ),
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "phoneInputWrapper inputWrapper ".concat(
                      hasError ? "inputError" : ""
                    )
                  },
                  {
                    children: [
                      jsxRuntime.jsx("input", {
                        type: "tel",
                        "data-supertokens": "input",
                        name: name + "_text",
                        autoFocus: autofocus,
                        autoComplete,
                        onChange: function(ev) {
                          if (ev.target.value.trim().length > 0 && !ev.target.value.trim().startsWith("+")) {
                            ev.target.value = "+" + ev.target.value.trim();
                          }
                          handleChange(ev.target.value);
                        },
                        onFocus: handleFocus,
                        onBlur: handleBlur,
                        ref: inputRef
                      }),
                      hasError === true && jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "inputAdornment inputAdornmentError" },
                          { children: jsxRuntime.jsx(formBase.ErrorIcon, {}) }
                        )
                      )
                    ]
                  }
                )
              )
            ]
          }
        )
      );
    }
    var phoneNumberInputWithInjectedProps = function(injectedProps) {
      return function(props) {
        return jsxRuntime.jsx(PhoneNumberInput, genericComponentOverrideContext.__assign({}, injectedProps, props));
      };
    };
    var EmailOrPhoneForm = uiEntry.withOverride(
      "PasswordlessEmailOrPhoneForm",
      function PasswordlessEmailOrPhoneForm(props) {
        var _this = this;
        var _a = React.useState(false), isPhoneNumber = _a[0], setIsPhoneNumber = _a[1];
        var userContext = uiEntry.useUserContext();
        React.useEffect(function() {
          void recipe$1.preloadPhoneNumberUtils();
        }, []);
        var emailOrPhoneInput = React.useMemo(
          function() {
            return isPhoneNumber ? phoneNumberInputWithInjectedProps({
              defaultCountry: props.config.signInUpFeature.defaultCountry
            }) : void 0;
          },
          [props.config.signInUpFeature.defaultCountry, isPhoneNumber]
        );
        return jsxRuntime.jsx(formBase.FormBase, {
          clearError: props.clearError,
          onError: props.onError,
          formFields: [
            {
              id: "emailOrPhone",
              label: "PWLESS_SIGN_IN_UP_EMAIL_OR_PHONE_LABEL",
              inputComponent: emailOrPhoneInput,
              optional: false,
              autofocus: true,
              placeholder: "",
              validate: recipe$1.defaultValidate
            }
          ],
          buttonLabel: "PWLESS_SIGN_IN_UP_CONTINUE_BUTTON",
          onSuccess: props.onSuccess,
          callAPI: function(formFields, setValue) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              var emailOrPhone, emailValidationRes, response, phoneValidationRes, response, intPhoneNumber, phoneValidationResAfterGuess, ex_1;
              var _a2;
              return genericComponentOverrideContext.__generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    emailOrPhone = (_a2 = formFields.find(function(field) {
                      return field.id === "emailOrPhone";
                    })) === null || _a2 === void 0 ? void 0 : _a2.value;
                    if (emailOrPhone === void 0) {
                      throw new STGeneralError__default.default("GENERAL_ERROR_EMAIL_OR_PHONE_UNDEFINED");
                    }
                    return [4, recipe$1.defaultEmailValidator(emailOrPhone)];
                  case 1:
                    if (!(_b.sent() === void 0))
                      return [3, 6];
                    return [4, props.config.validateEmailAddress(emailOrPhone)];
                  case 2:
                    emailValidationRes = _b.sent();
                    if (!(emailValidationRes === void 0))
                      return [3, 4];
                    return [
                      4,
                      props.recipeImplementation.createCode({
                        email: emailOrPhone,
                        userContext
                      })
                    ];
                  case 3:
                    response = _b.sent();
                    return [2, response];
                  case 4:
                    throw new STGeneralError__default.default(emailValidationRes);
                  case 5:
                    return [3, 19];
                  case 6:
                    return [4, props.config.validatePhoneNumber(emailOrPhone)];
                  case 7:
                    phoneValidationRes = _b.sent();
                    if (!(phoneValidationRes === void 0))
                      return [3, 9];
                    return [
                      4,
                      props.recipeImplementation.createCode({
                        phoneNumber: emailOrPhone,
                        userContext
                      })
                    ];
                  case 8:
                    response = _b.sent();
                    return [2, response];
                  case 9:
                    return [
                      4,
                      props.config.signInUpFeature.guessInternationPhoneNumberFromInputPhoneNumber(
                        emailOrPhone,
                        props.config.signInUpFeature.defaultCountry
                      )
                    ];
                  case 10:
                    intPhoneNumber = _b.sent();
                    if (!(intPhoneNumber && isPhoneNumber !== true))
                      return [3, 18];
                    return [4, props.config.validatePhoneNumber(intPhoneNumber)];
                  case 11:
                    phoneValidationResAfterGuess = _b.sent();
                    if (!(phoneValidationResAfterGuess === void 0))
                      return [3, 16];
                    _b.label = 12;
                  case 12:
                    _b.trys.push([12, 14, , 15]);
                    return [
                      4,
                      props.recipeImplementation.createCode({
                        phoneNumber: intPhoneNumber,
                        userContext
                      })
                    ];
                  case 13:
                    return [2, _b.sent()];
                  case 14:
                    ex_1 = _b.sent();
                    setValue("emailOrPhone", intPhoneNumber);
                    setIsPhoneNumber(true);
                    throw ex_1;
                  case 15:
                    return [3, 17];
                  case 16:
                    setValue("emailOrPhone", intPhoneNumber);
                    setIsPhoneNumber(true);
                    throw new STGeneralError__default.default(
                      "PWLESS_EMAIL_OR_PHONE_INVALID_INPUT_GUESS_PHONE_ERR"
                    );
                  case 17:
                    return [3, 19];
                  case 18:
                    throw new STGeneralError__default.default(phoneValidationRes);
                  case 19:
                    return [2];
                }
              });
            });
          },
          validateOnBlur: false,
          showLabels: true,
          footer: jsxRuntime.jsx(SignInUpFooter, {
            privacyPolicyLink: props.config.signInUpFeature.privacyPolicyLink,
            termsOfServiceLink: props.config.signInUpFeature.termsOfServiceLink
          })
        });
      }
    );
    function SMSLargeIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          { xmlns: "http://www.w3.org/2000/svg", width: "52.013", height: "41.889", viewBox: "0 0 52.013 41.889" },
          {
            children: jsxRuntime.jsx(
              "g",
              genericComponentOverrideContext.__assign(
                { id: "Group_10400", "data-name": "Group 10400", transform: "translate(-724.625 -241.125)" },
                {
                  children: jsxRuntime.jsxs(
                    "g",
                    genericComponentOverrideContext.__assign(
                      { id: "Group_10399", "data-name": "Group 10399" },
                      {
                        children: [
                          jsxRuntime.jsxs(
                            "g",
                            genericComponentOverrideContext.__assign(
                              { id: "Group_10398", "data-name": "Group 10398" },
                              {
                                children: [
                                  jsxRuntime.jsxs(
                                    "g",
                                    genericComponentOverrideContext.__assign(
                                      {
                                        id: "_2639922_sms_icon",
                                        "data-name": "2639922_sms_icon",
                                        transform: "translate(732.916 242)"
                                      },
                                      {
                                        children: [
                                          jsxRuntime.jsx("path", {
                                            id: "Union_52",
                                            "data-name": "Union 52",
                                            d: "M7.124 37.96a6.26 6.26 0 0 0 3.652-5H6.593A6.592 6.592 0 0 1 0 26.367V6.592A6.592 6.592 0 0 1 6.593 0h29.664a6.592 6.592 0 0 1 6.593 6.592v19.775a6.592 6.592 0 0 1-6.593 6.592h-17.68a13.355 13.355 0 0 1-11.159 6.576zm20.893-21.48a3.3 3.3 0 1 0 3.3-3.3 3.3 3.3 0 0 0-3.3 3.3zm-9.887 0a3.3 3.3 0 1 0 3.3-3.3 3.295 3.295 0 0 0-3.3 3.3zm-9.888 0a3.3 3.3 0 1 0 3.3-3.3 3.3 3.3 0 0 0-3.301 3.3z",
                                            transform: "translate(-.001)",
                                            strokeWidth: "1.75px",
                                            stroke: "#000",
                                            fill: "#c4f3ff"
                                          }),
                                          jsxRuntime.jsx("ellipse", {
                                            id: "Ellipse_3013",
                                            "data-name": "Ellipse 3013",
                                            cy: ".917",
                                            ry: ".917",
                                            transform: "translate(7.335 38.506)",
                                            stroke: "#000",
                                            fill: "#c4f3ff"
                                          })
                                        ]
                                      }
                                    )
                                  ),
                                  jsxRuntime.jsx("path", {
                                    id: "Intersection_2",
                                    "data-name": "Intersection 2",
                                    fill: "#8ae7ff",
                                    d: "M177.409-21836.576v-.33l-.214-1.131a6.271 6.271 0 0 0 3.651-5h-4.184a6.59 6.59 0 0 1-6.512-5.588h42.495a7.846 7.846 0 0 1-1.607 3.605 6.576 6.576 0 0 1-4.712 1.982h-14.845c-1.545-.09-2.537-.164-2.537-.164l-.077.164h-.219a13.342 13.342 0 0 1-11.156 6.572l-.082-.439z",
                                    transform: "translate(562.766 22118)"
                                  }),
                                  jsxRuntime.jsx("path", {
                                    id: "Intersection_1",
                                    "data-name": "Intersection 1",
                                    fill: "#8ae7ff",
                                    d: "M209.246-21846.41s.494-22.641 0-25.178a8.7 8.7 0 0 0-2.767-4.41 6.6 6.6 0 0 1 6.369 6.59v19.775a6.6 6.6 0 0 1-5.724 6.537 6.213 6.213 0 0 0 2.122-3.314z",
                                    transform: "translate(561.882 22118.172)"
                                  })
                                ]
                              }
                            )
                          ),
                          jsxRuntime.jsxs(
                            "g",
                            genericComponentOverrideContext.__assign(
                              {
                                id: "_2639922_sms_icon-2",
                                "data-name": "2639922_sms_icon",
                                transform: "translate(732.916 242.174)"
                              },
                              {
                                children: [
                                  jsxRuntime.jsx("path", {
                                    id: "Union_52-2",
                                    "data-name": "Union 52",
                                    d: "M7.124 37.96a6.26 6.26 0 0 0 3.652-5H6.593A6.592 6.592 0 0 1 0 26.367V6.592A6.592 6.592 0 0 1 6.593 0h29.664a6.592 6.592 0 0 1 6.593 6.592v19.775a6.592 6.592 0 0 1-6.593 6.592h-17.68a13.355 13.355 0 0 1-11.159 6.576zm20.893-21.48a3.3 3.3 0 1 0 3.3-3.3 3.3 3.3 0 0 0-3.3 3.3zm-9.887 0a3.3 3.3 0 1 0 3.3-3.3 3.295 3.295 0 0 0-3.3 3.3zm-9.888 0a3.3 3.3 0 1 0 3.3-3.3 3.3 3.3 0 0 0-3.301 3.3z",
                                    transform: "translate(-.001)",
                                    fill: "none",
                                    strokeWidth: "1.75px",
                                    stroke: "#000"
                                  }),
                                  jsxRuntime.jsx("ellipse", {
                                    id: "Ellipse_3013-2",
                                    "data-name": "Ellipse 3013",
                                    cy: ".917",
                                    ry: ".917",
                                    transform: "translate(7.335 38.506)",
                                    fill: "none",
                                    stroke: "#000"
                                  })
                                ]
                              }
                            )
                          ),
                          jsxRuntime.jsxs(
                            "g",
                            genericComponentOverrideContext.__assign(
                              { id: "Group_10397", "data-name": "Group 10397" },
                              {
                                children: [
                                  jsxRuntime.jsx("path", {
                                    id: "Line_104",
                                    "data-name": "Line 104",
                                    strokeWidth: "1.75px",
                                    fill: "none",
                                    strokeLinecap: "round",
                                    stroke: "#000",
                                    transform: "translate(725.5 266.84)",
                                    d: "M0 0h9.872"
                                  }),
                                  jsxRuntime.jsx("path", {
                                    id: "Line_105",
                                    "data-name": "Line 105",
                                    strokeWidth: "1.75px",
                                    fill: "none",
                                    strokeLinecap: "round",
                                    stroke: "#fff",
                                    transform: "translate(725.5 268.59)",
                                    d: "M0 0h9.872"
                                  })
                                ]
                              }
                            )
                          ),
                          jsxRuntime.jsxs(
                            "g",
                            genericComponentOverrideContext.__assign(
                              { id: "Group_10396", "data-name": "Group 10396" },
                              {
                                children: [
                                  jsxRuntime.jsx("path", {
                                    id: "Line_103",
                                    "data-name": "Line 103",
                                    strokeWidth: "1.75px",
                                    fill: "none",
                                    strokeLinecap: "round",
                                    stroke: "#000",
                                    transform: "translate(725.5 260.17)",
                                    d: "M0 0h12.461"
                                  }),
                                  jsxRuntime.jsx("path", {
                                    id: "Line_102",
                                    "data-name": "Line 102",
                                    strokeWidth: "1.75px",
                                    fill: "none",
                                    strokeLinecap: "round",
                                    stroke: "#fff",
                                    transform: "translate(725.5 261.92)",
                                    d: "M0 0h12.461"
                                  })
                                ]
                              }
                            )
                          ),
                          jsxRuntime.jsx("path", {
                            id: "Path_91918",
                            "data-name": "Path 91918",
                            fill: "#8ae7ff",
                            d: "M599.827 22145.373a1.62 1.62 0 0 0 1.38-1.336c.247-1.234.267 1.752.267 1.752l-1.647-.178z",
                            transform: "translate(170 -21876)"
                          }),
                          jsxRuntime.jsxs(
                            "g",
                            genericComponentOverrideContext.__assign(
                              { id: "Group_10395", "data-name": "Group 10395" },
                              {
                                children: [
                                  jsxRuntime.jsx("path", {
                                    id: "Line_100",
                                    "data-name": "Line 100",
                                    strokeWidth: "1.75px",
                                    fill: "none",
                                    strokeLinecap: "round",
                                    stroke: "#000",
                                    transform: "translate(725.5 253.5)",
                                    d: "M0 0h9.872"
                                  }),
                                  jsxRuntime.jsx("path", {
                                    id: "Line_101",
                                    "data-name": "Line 101",
                                    strokeWidth: "1.75px",
                                    fill: "none",
                                    strokeLinecap: "round",
                                    stroke: "#fff",
                                    transform: "translate(725.5 255.25)",
                                    d: "M0 0h9.872"
                                  })
                                ]
                              }
                            )
                          )
                        ]
                      }
                    )
                  )
                }
              )
            )
          }
        )
      );
    }
    var ResendButton = uiEntry.withOverride("PasswordlessResendButton", function PasswordlessResendButton(_a) {
      var loginAttemptInfo = _a.loginAttemptInfo, resendEmailOrSMSGapInSeconds = _a.resendEmailOrSMSGapInSeconds, onClick = _a.onClick;
      var t = translationContext.useTranslation();
      var getTimeLeft = React.useCallback(
        function() {
          var timeLeft = loginAttemptInfo.lastResend + resendEmailOrSMSGapInSeconds * 1e3 - Date.now();
          return timeLeft < 0 ? void 0 : Math.ceil(timeLeft / 1e3);
        },
        [loginAttemptInfo, resendEmailOrSMSGapInSeconds]
      );
      var _b = React.useState(getTimeLeft()), secsUntilResend = _b[0], setSecsUntilResend = _b[1];
      React.useEffect(
        function() {
          var interval = setInterval(function() {
            var timeLeft = getTimeLeft();
            if (timeLeft === void 0) {
              clearInterval(interval);
            }
            setSecsUntilResend(timeLeft);
          }, 500);
          return function() {
            clearInterval(interval);
          };
        },
        [getTimeLeft, setSecsUntilResend]
      );
      return jsxRuntime.jsx(
        "button",
        genericComponentOverrideContext.__assign(
          {
            type: "button",
            disabled: secsUntilResend !== void 0,
            onClick,
            "data-supertokens": "link linkButton resendCodeBtn"
          },
          {
            children: secsUntilResend !== void 0 ? jsxRuntime.jsxs(React__namespace.default.Fragment, {
              children: [
                t("PWLESS_RESEND_BTN_DISABLED_START"),
                jsxRuntime.jsxs("strong", {
                  children: [
                    Math.floor(secsUntilResend / 60).toString().padStart(2, "0"),
                    ":",
                    (secsUntilResend % 60).toString().padStart(2, "0")
                  ]
                }),
                t("PWLESS_RESEND_BTN_DISABLED_END")
              ]
            }) : loginAttemptInfo.contactMethod === "EMAIL" ? t("PWLESS_RESEND_BTN_EMAIL") : t("PWLESS_RESEND_BTN_PHONE")
          }
        )
      );
    });
    var PasswordlessLinkSent = function(props) {
      var t = translationContext.useTranslation();
      var userContext = uiEntry.useUserContext();
      var _a = React.useState(props.error !== void 0 ? "ERROR" : "READY"), status = _a[0], setStatus = _a[1];
      var resendNotifTimeout = React.useRef();
      React.useEffect(function() {
        return function() {
          if (resendNotifTimeout.current) {
            clearTimeout(resendNotifTimeout.current);
          }
        };
      }, []);
      var resendEmail = React.useCallback(
        function() {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var response, generalError2, e_1;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  _a2.trys.push([0, 5, , 6]);
                  props.clearError();
                  response = void 0;
                  generalError2 = void 0;
                  _a2.label = 1;
                case 1:
                  _a2.trys.push([1, 3, , 4]);
                  return [
                    4,
                    props.recipeImplementation.resendCode({
                      userContext
                    })
                  ];
                case 2:
                  response = _a2.sent();
                  return [3, 4];
                case 3:
                  e_1 = _a2.sent();
                  if (STGeneralError__default.default.isThisError(e_1)) {
                    generalError2 = e_1;
                  } else {
                    throw e_1;
                  }
                  return [3, 4];
                case 4:
                  if (response !== void 0 && response.status === "OK") {
                    setStatus("LINK_RESENT");
                    resendNotifTimeout.current = setTimeout(function() {
                      setStatus(function(status2) {
                        return status2 === "LINK_RESENT" ? "READY" : status2;
                      });
                      resendNotifTimeout.current = void 0;
                    }, 2e3);
                  } else {
                    setStatus("ERROR");
                    if (generalError2 !== void 0) {
                      props.onError(generalError2.message);
                    }
                  }
                  return [3, 6];
                case 5:
                  _a2.sent();
                  setStatus("ERROR");
                  return [3, 6];
                case 6:
                  return [2];
              }
            });
          });
        },
        [props.recipeImplementation, props.loginAttemptInfo, props.config, setStatus]
      );
      var resendActive = status === "LINK_RESENT";
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row" },
                {
                  children: [
                    status === "ERROR" && jsxRuntime.jsx(generalError.GeneralError, {
                      error: props.error === void 0 ? "SOMETHING_WENT_WRONG_ERROR" : props.error
                    }),
                    resendActive && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "generalSuccess" },
                        { children: t("PWLESS_LINK_SENT_RESEND_SUCCESS") }
                      )
                    ),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "sendCodeIcon" },
                        {
                          children: props.loginAttemptInfo.contactMethod === "EMAIL" ? jsxRuntime.jsx(checkedRoundIcon.EmailLargeIcon, {}) : jsxRuntime.jsx(SMSLargeIcon, {})
                        }
                      )
                    ),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerTitle headerTinyTitle" },
                        { children: t("PWLESS_LINK_SENT_RESEND_TITLE") }
                      )
                    ),
                    jsxRuntime.jsxs(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "primaryText sendCodeText" },
                        {
                          children: [
                            props.loginAttemptInfo.contactMethod === "EMAIL" ? t("PWLESS_LINK_SENT_RESEND_DESC_START_EMAIL") : t("PWLESS_LINK_SENT_RESEND_DESC_START_PHONE"),
                            jsxRuntime.jsx("strong", {
                              children: props.loginAttemptInfo.contactInfo
                            }),
                            props.loginAttemptInfo.contactMethod === "EMAIL" ? t("PWLESS_LINK_SENT_RESEND_DESC_END_EMAIL") : t("PWLESS_LINK_SENT_RESEND_DESC_END_PHONE")
                          ]
                        }
                      )
                    ),
                    jsxRuntime.jsx(ResendButton, {
                      loginAttemptInfo: props.loginAttemptInfo,
                      resendEmailOrSMSGapInSeconds: props.config.signInUpFeature.resendEmailOrSMSGapInSeconds,
                      onClick: resendEmail
                    }),
                    jsxRuntime.jsxs(
                      "div",
                      genericComponentOverrideContext.__assign(
                        {
                          "data-supertokens": "secondaryText secondaryLinkWithLeftArrow",
                          onClick: function() {
                            return props.recipeImplementation.clearLoginAttemptInfo({
                              userContext
                            });
                          }
                        },
                        {
                          children: [
                            jsxRuntime.jsx(arrowLeftIcon.ArrowLeftIcon, {
                              color: "rgb(var(--palette-textPrimary))"
                            }),
                            props.loginAttemptInfo.contactMethod === "EMAIL" ? t("PWLESS_SIGN_IN_UP_CHANGE_CONTACT_INFO_EMAIL") : t("PWLESS_SIGN_IN_UP_CHANGE_CONTACT_INFO_PHONE")
                          ]
                        }
                      )
                    )
                  ]
                }
              )
            )
          }
        )
      );
    };
    var LinkSent = uiEntry.withOverride("PasswordlessLinkSent", PasswordlessLinkSent);
    var PhoneForm = uiEntry.withOverride("PasswordlessPhoneForm", function PasswordlessPhoneForm(props) {
      var _this = this;
      var userContext = uiEntry.useUserContext();
      React.useEffect(function() {
        void recipe$1.preloadPhoneNumberUtils();
      }, []);
      var phoneInput = React.useMemo(
        function() {
          return phoneNumberInputWithInjectedProps({
            defaultCountry: props.config.signInUpFeature.defaultCountry
          });
        },
        [props.config.signInUpFeature.defaultCountry]
      );
      return jsxRuntime.jsx(formBase.FormBase, {
        clearError: props.clearError,
        onError: props.onError,
        formFields: [
          {
            id: "phoneNumber",
            label: "PWLESS_SIGN_IN_UP_PHONE_LABEL",
            inputComponent: phoneInput,
            optional: false,
            autofocus: true,
            placeholder: "",
            validate: validators.defaultValidate
          }
        ],
        buttonLabel: "PWLESS_SIGN_IN_UP_CONTINUE_BUTTON",
        onSuccess: props.onSuccess,
        callAPI: function(formFields) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var phoneNumber, validationRes, response;
            var _a;
            return genericComponentOverrideContext.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  phoneNumber = (_a = formFields.find(function(field) {
                    return field.id === "phoneNumber";
                  })) === null || _a === void 0 ? void 0 : _a.value;
                  if (phoneNumber === void 0) {
                    throw new STGeneralError__default.default("GENERAL_ERROR_PHONE_UNDEFINED");
                  }
                  return [4, props.config.validatePhoneNumber(phoneNumber)];
                case 1:
                  validationRes = _b.sent();
                  if (validationRes !== void 0) {
                    throw new STGeneralError__default.default(validationRes);
                  }
                  return [
                    4,
                    props.recipeImplementation.createCode({
                      phoneNumber,
                      userContext
                    })
                  ];
                case 2:
                  response = _b.sent();
                  return [2, response];
              }
            });
          });
        },
        validateOnBlur: false,
        showLabels: true,
        footer: jsxRuntime.jsx(SignInUpFooter, {
          privacyPolicyLink: props.config.signInUpFeature.privacyPolicyLink,
          termsOfServiceLink: props.config.signInUpFeature.termsOfServiceLink
        })
      });
    });
    var SignInUpHeader = uiEntry.withOverride("PasswordlessSignInUpHeader", function PasswordlessSignInUpHeader() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "headerTitle" },
              { children: t("PWLESS_SIGN_IN_UP_HEADER_TITLE") }
            )
          ),
          jsxRuntime.jsx("div", { "data-supertokens": "divider" })
        ]
      });
    });
    var UserInputCodeFormFooter = uiEntry.withOverride(
      "PasswordlessUserInputCodeFormFooter",
      function PasswordlessUserInputCodeFormFooter(_a) {
        var loginAttemptInfo = _a.loginAttemptInfo, recipeImplementation = _a.recipeImplementation;
        var t = translationContext.useTranslation();
        var userContext = uiEntry.useUserContext();
        return jsxRuntime.jsx(React.Fragment, {
          children: jsxRuntime.jsxs(
            "div",
            genericComponentOverrideContext.__assign(
              {
                "data-supertokens": "secondaryText secondaryLinkWithLeftArrow",
                onClick: function() {
                  return recipeImplementation.clearLoginAttemptInfo({
                    userContext
                  });
                }
              },
              {
                children: [
                  jsxRuntime.jsx(arrowLeftIcon.ArrowLeftIcon, { color: "rgb(var(--palette-textPrimary))" }),
                  loginAttemptInfo.contactMethod === "EMAIL" ? t("PWLESS_SIGN_IN_UP_CHANGE_CONTACT_INFO_EMAIL") : t("PWLESS_SIGN_IN_UP_CHANGE_CONTACT_INFO_PHONE")
                ]
              }
            )
          )
        });
      }
    );
    var UserInputCodeForm = uiEntry.withOverride(
      "PasswordlessUserInputCodeForm",
      function PasswordlessUserInputCodeForm(props) {
        var _this = this;
        var t = translationContext.useTranslation();
        var userContext = uiEntry.useUserContext();
        var _a = React.useState(), clearResendNotifTimeout = _a[0], setClearResendNotifTimeout = _a[1];
        React.useEffect(
          function() {
            return function() {
              clearTimeout(clearResendNotifTimeout);
            };
          },
          [clearResendNotifTimeout]
        );
        function resend() {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            var response, generalError2, e_1;
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  _a2.trys.push([0, 5, , 6]);
                  response = void 0;
                  generalError2 = void 0;
                  _a2.label = 1;
                case 1:
                  _a2.trys.push([1, 3, , 4]);
                  return [
                    4,
                    props.recipeImplementation.resendCode({
                      userContext
                    })
                  ];
                case 2:
                  response = _a2.sent();
                  return [3, 4];
                case 3:
                  e_1 = _a2.sent();
                  if (STGeneralError__default.default.isThisError(e_1)) {
                    generalError2 = e_1;
                  } else {
                    throw e_1;
                  }
                  return [3, 4];
                case 4:
                  if (generalError2 !== void 0) {
                    props.onError(generalError2.message);
                  } else {
                    if (response === void 0) {
                      throw new Error("Should not come here");
                    }
                    if (response.status === "OK") {
                      setClearResendNotifTimeout(
                        setTimeout(function() {
                          setClearResendNotifTimeout(void 0);
                        }, 2e3)
                      );
                    }
                  }
                  return [3, 6];
                case 5:
                  _a2.sent();
                  props.onError("SOMETHING_WENT_WRONG_ERROR");
                  return [3, 6];
                case 6:
                  return [2];
              }
            });
          });
        }
        return jsxRuntime.jsxs(React__namespace.default.Fragment, {
          children: [
            clearResendNotifTimeout !== void 0 && jsxRuntime.jsx(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "generalSuccess" },
                {
                  children: props.loginAttemptInfo.contactMethod === "EMAIL" ? t("PWLESS_RESEND_SUCCESS_EMAIL") : t("PWLESS_RESEND_SUCCESS_PHONE")
                }
              )
            ),
            jsxRuntime.jsx(formBase.FormBase, {
              clearError: props.clearError,
              onError: props.onError,
              formFields: [
                {
                  id: "userInputCode",
                  label: "",
                  labelComponent: jsxRuntime.jsxs(
                    "div",
                    genericComponentOverrideContext.__assign(
                      { "data-supertokens": "codeInputLabelWrapper" },
                      {
                        children: [
                          jsxRuntime.jsx(formBase.Label, {
                            value: "PWLESS_USER_INPUT_CODE_INPUT_LABEL",
                            "data-supertokens": "codeInputLabel"
                          }),
                          jsxRuntime.jsx(ResendButton, {
                            loginAttemptInfo: props.loginAttemptInfo,
                            resendEmailOrSMSGapInSeconds: props.config.signInUpFeature.resendEmailOrSMSGapInSeconds,
                            onClick: resend
                          })
                        ]
                      }
                    )
                  ),
                  autofocus: true,
                  optional: false,
                  clearOnSubmit: true,
                  placeholder: "",
                  validate: recipe$1.userInputCodeValidate
                }
              ],
              onSuccess: props.onSuccess,
              buttonLabel: "PWLESS_SIGN_IN_UP_CONTINUE_BUTTON",
              callAPI: function(formFields) {
                return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
                  var userInputCode, response;
                  var _a2;
                  return genericComponentOverrideContext.__generator(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        userInputCode = (_a2 = formFields.find(function(field) {
                          return field.id === "userInputCode";
                        })) === null || _a2 === void 0 ? void 0 : _a2.value;
                        if (userInputCode === void 0 || userInputCode.length === 0) {
                          throw new STGeneralError__default.default("GENERAL_ERROR_OTP_UNDEFINED");
                        }
                        return [
                          4,
                          props.recipeImplementation.consumeCode({
                            userInputCode,
                            userContext
                          })
                        ];
                      case 1:
                        response = _b.sent();
                        if (response.status === "OK" || response.status === "RESTART_FLOW_ERROR") {
                          return [2, response];
                        }
                        if (response.status === "INCORRECT_USER_INPUT_CODE_ERROR") {
                          throw new STGeneralError__default.default("GENERAL_ERROR_OTP_INVALID");
                        }
                        if (response.status === "EXPIRED_USER_INPUT_CODE_ERROR") {
                          throw new STGeneralError__default.default("GENERAL_ERROR_OTP_EXPIRED");
                        }
                        throw new STGeneralError__default.default("SOMETHING_WENT_WRONG_ERROR");
                    }
                  });
                });
              },
              validateOnBlur: false,
              showLabels: true,
              footer: jsxRuntime.jsx(
                UserInputCodeFormFooter,
                genericComponentOverrideContext.__assign({}, props, {
                  loginAttemptInfo: props.loginAttemptInfo
                })
              )
            })
          ]
        });
      }
    );
    var UserInputCodeFormHeader = uiEntry.withOverride(
      "PasswordlessUserInputCodeFormHeader",
      function PasswordlessUserInputCodeFormHeader(_a) {
        var loginAttemptInfo = _a.loginAttemptInfo;
        var t = translationContext.useTranslation();
        return jsxRuntime.jsxs(React.Fragment, {
          children: [
            jsxRuntime.jsx(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "headerTitle" },
                { children: t("PWLESS_USER_INPUT_CODE_HEADER_TITLE") }
              )
            ),
            jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "headerSubtitle secondaryText" },
                {
                  children: [
                    loginAttemptInfo.flowType === "USER_INPUT_CODE" ? t("PWLESS_USER_INPUT_CODE_HEADER_SUBTITLE") : t("PWLESS_USER_INPUT_CODE_HEADER_SUBTITLE_LINK"),
                    jsxRuntime.jsx("br", {}),
                    jsxRuntime.jsx("strong", { children: loginAttemptInfo.contactInfo })
                  ]
                }
              )
            ),
            jsxRuntime.jsx("div", { "data-supertokens": "divider" })
          ]
        });
      }
    );
    exports.SignInUpScreens = void 0;
    (function(SignInUpScreens) {
      SignInUpScreens[SignInUpScreens["CloseTab"] = 0] = "CloseTab";
      SignInUpScreens[SignInUpScreens["LinkSent"] = 1] = "LinkSent";
      SignInUpScreens[SignInUpScreens["EmailForm"] = 2] = "EmailForm";
      SignInUpScreens[SignInUpScreens["PhoneForm"] = 3] = "PhoneForm";
      SignInUpScreens[SignInUpScreens["EmailOrPhoneForm"] = 4] = "EmailOrPhoneForm";
      SignInUpScreens[SignInUpScreens["UserInputCodeForm"] = 5] = "UserInputCodeForm";
    })(exports.SignInUpScreens || (exports.SignInUpScreens = {}));
    var SignInUpTheme = function(_a) {
      var activeScreen = _a.activeScreen, featureState = _a.featureState, props = genericComponentOverrideContext.__rest(_a, ["activeScreen", "featureState"]);
      var commonProps = {
        recipeImplementation: props.recipeImplementation,
        config: props.config,
        clearError: function() {
          return props.dispatch({ type: "setError", error: void 0 });
        },
        onError: function(error) {
          return props.dispatch({ type: "setError", error });
        },
        error: featureState.error
      };
      return activeScreen === exports.SignInUpScreens.CloseTab ? jsxRuntime.jsx(CloseTabScreen, genericComponentOverrideContext.__assign({}, commonProps)) : activeScreen === exports.SignInUpScreens.LinkSent ? jsxRuntime.jsx(
        LinkSent,
        genericComponentOverrideContext.__assign({}, commonProps, {
          loginAttemptInfo: featureState.loginAttemptInfo
        })
      ) : jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsx(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: featureState.loaded && jsxRuntime.jsxs(React__namespace.default.Fragment, {
                      children: [
                        activeScreen === exports.SignInUpScreens.UserInputCodeForm ? jsxRuntime.jsx(
                          UserInputCodeFormHeader,
                          genericComponentOverrideContext.__assign({}, commonProps, {
                            loginAttemptInfo: featureState.loginAttemptInfo
                          })
                        ) : jsxRuntime.jsx(SignInUpHeader, {}),
                        featureState.error !== void 0 && jsxRuntime.jsx(generalError.GeneralError, {
                          error: featureState.error
                        }),
                        activeScreen === exports.SignInUpScreens.EmailForm ? jsxRuntime.jsx(
                          EmailForm,
                          genericComponentOverrideContext.__assign({}, commonProps)
                        ) : activeScreen === exports.SignInUpScreens.PhoneForm ? jsxRuntime.jsx(
                          PhoneForm,
                          genericComponentOverrideContext.__assign({}, commonProps)
                        ) : activeScreen === exports.SignInUpScreens.EmailOrPhoneForm ? jsxRuntime.jsx(
                          EmailOrPhoneForm,
                          genericComponentOverrideContext.__assign({}, commonProps)
                        ) : activeScreen === exports.SignInUpScreens.UserInputCodeForm ? jsxRuntime.jsx(
                          UserInputCodeForm,
                          genericComponentOverrideContext.__assign({}, commonProps, {
                            loginAttemptInfo: featureState.loginAttemptInfo,
                            onSuccess: props.onSuccess
                          })
                        ) : null
                      ]
                    })
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    };
    function SignInUpThemeWrapper(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      var activeScreen = getActiveScreen(props);
      var activeStyle;
      if (activeScreen === exports.SignInUpScreens.CloseTab) {
        activeStyle = props.config.signInUpFeature.closeTabScreenStyle;
      } else if (activeScreen === exports.SignInUpScreens.LinkSent) {
        activeStyle = props.config.signInUpFeature.linkSentScreenStyle;
      } else if (activeScreen === exports.SignInUpScreens.UserInputCodeForm) {
        activeStyle = props.config.signInUpFeature.userInputCodeFormStyle;
      } else if (activeScreen === exports.SignInUpScreens.EmailForm) {
        activeStyle = props.config.signInUpFeature.emailOrPhoneFormStyle;
      } else if (activeScreen === exports.SignInUpScreens.PhoneForm) {
        activeStyle = props.config.signInUpFeature.emailOrPhoneFormStyle;
      } else if (activeScreen === exports.SignInUpScreens.EmailOrPhoneForm) {
        activeStyle = props.config.signInUpFeature.emailOrPhoneFormStyle;
      }
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              ThemeBase,
              genericComponentOverrideContext.__assign(
                { loadDefaultFont: !hasFont, userStyles: [props.config.rootStyle, activeStyle] },
                {
                  children: jsxRuntime.jsx(
                    SignInUpTheme,
                    genericComponentOverrideContext.__assign({}, props, { activeScreen })
                  )
                }
              )
            )
          }
        )
      );
    }
    function getActiveScreen(props) {
      if (props.featureState.successInAnotherTab) {
        return exports.SignInUpScreens.CloseTab;
      } else if (props.featureState.loginAttemptInfo && props.featureState.loginAttemptInfo.flowType === "MAGIC_LINK") {
        return exports.SignInUpScreens.LinkSent;
      } else if (props.featureState.loginAttemptInfo) {
        return exports.SignInUpScreens.UserInputCodeForm;
      } else if (props.config.contactMethod === "EMAIL") {
        return exports.SignInUpScreens.EmailForm;
      } else if (props.config.contactMethod === "PHONE") {
        return exports.SignInUpScreens.PhoneForm;
      } else if (props.config.contactMethod === "EMAIL_OR_PHONE") {
        return exports.SignInUpScreens.EmailOrPhoneForm;
      }
      throw new Error("Couldn't choose active screen; Should never happen");
    }
    var useSuccessInAnotherTabChecker = function(state, dispatch, userContext) {
      var callingConsumeCodeRef = React.useRef(false);
      React.useEffect(
        function() {
          if (state.loginAttemptInfo && !state.successInAnotherTab) {
            var checkSessionIntervalHandle_1 = setInterval(function() {
              return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
                var hasSession;
                return genericComponentOverrideContext.__generator(this, function(_a) {
                  switch (_a.label) {
                    case 0:
                      if (!(callingConsumeCodeRef.current === false))
                        return [3, 2];
                      return [
                        4,
                        session.SessionAPIWrapper.doesSessionExist({
                          userContext
                        })
                      ];
                    case 1:
                      hasSession = _a.sent();
                      if (hasSession) {
                        dispatch({ type: "successInAnotherTab" });
                      }
                      _a.label = 2;
                    case 2:
                      return [2];
                  }
                });
              });
            }, 2e3);
            return function() {
              clearInterval(checkSessionIntervalHandle_1);
            };
          }
          return;
        },
        [state.loginAttemptInfo, state.successInAnotherTab]
      );
      return callingConsumeCodeRef;
    };
    var useFeatureReducer = function(recipeImpl, userContext) {
      var _a = React__namespace.useReducer(
        function(oldState, action) {
          switch (action.type) {
            case "load":
              return {
                loaded: true,
                error: action.error,
                loginAttemptInfo: action.loginAttemptInfo,
                successInAnotherTab: false
              };
            case "resendCode":
              if (!oldState.loginAttemptInfo) {
                return oldState;
              }
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                {
                  error: void 0,
                  loginAttemptInfo: genericComponentOverrideContext.__assign(
                    genericComponentOverrideContext.__assign({}, oldState.loginAttemptInfo),
                    { lastResend: action.timestamp }
                  )
                }
              );
            case "restartFlow":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: action.error, loginAttemptInfo: void 0 }
              );
            case "setError":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: action.error }
              );
            case "startLogin":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { loginAttemptInfo: action.loginAttemptInfo, error: void 0 }
              );
            case "successInAnotherTab":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { successInAnotherTab: true }
              );
            default:
              return oldState;
          }
        },
        {
          error: void 0,
          loaded: false,
          loginAttemptInfo: void 0,
          successInAnotherTab: false
        },
        function(initArg) {
          var error = void 0;
          var errorQueryParam = genericComponentOverrideContext.getQueryParams("error");
          var messageQueryParam = genericComponentOverrideContext.getQueryParams("message");
          if (errorQueryParam !== null) {
            if (errorQueryParam === "signin") {
              error = "SOMETHING_WENT_WRONG_ERROR";
            } else if (errorQueryParam === "restart_link") {
              error = "ERROR_SIGN_IN_UP_LINK";
            } else if (errorQueryParam === "custom" && messageQueryParam !== null) {
              error = messageQueryParam;
            }
          }
          return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, initArg), {
            error
          });
        }
      ), state = _a[0], dispatch = _a[1];
      React.useEffect(
        function() {
          if (recipeImpl === void 0) {
            return;
          }
          function load() {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var error, errorQueryParam, messageQueryParam, loginAttemptInfo;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    error = void 0;
                    errorQueryParam = genericComponentOverrideContext.getQueryParams("error");
                    messageQueryParam = genericComponentOverrideContext.getQueryParams("message");
                    if (errorQueryParam !== null) {
                      if (errorQueryParam === "signin") {
                        error = "SOMETHING_WENT_WRONG_ERROR";
                      } else if (errorQueryParam === "restart_link") {
                        error = "ERROR_SIGN_IN_UP_LINK";
                      } else if (errorQueryParam === "custom" && messageQueryParam !== null) {
                        error = messageQueryParam;
                      }
                    }
                    return [
                      4,
                      recipeImpl === null || recipeImpl === void 0 ? void 0 : recipeImpl.getLoginAttemptInfo({
                        userContext
                      })
                    ];
                  case 1:
                    loginAttemptInfo = _a2.sent();
                    dispatch({ type: "load", loginAttemptInfo, error });
                    return [2];
                }
              });
            });
          }
          if (state.loaded === false) {
            void load();
          }
        },
        [state.loaded, recipeImpl, userContext]
      );
      return [state, dispatch];
    };
    function useChildProps(recipe$12, dispatch, state, callingConsumeCodeRef, userContext, history) {
      var recipeImplementation = React__namespace.useMemo(
        function() {
          return recipe$12 && getModifiedRecipeImplementation(recipe$12.webJSRecipe, recipe$12.config, dispatch, callingConsumeCodeRef);
        },
        [recipe$12]
      );
      return React.useMemo(
        function() {
          if (!recipe$12 || !recipeImplementation) {
            return void 0;
          }
          return {
            onSuccess: function(result) {
              return recipe.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                {
                  rid: recipe$12.config.recipeId,
                  successRedirectContext: {
                    action: "SUCCESS",
                    isNewUser: result.createdNewUser,
                    redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL()
                  }
                },
                userContext,
                history
              );
            },
            recipeImplementation,
            config: recipe$12.config
          };
        },
        [state, recipeImplementation]
      );
    }
    var SignInUpFeature = function(props) {
      var recipeComponentOverrides = props.useComponentOverrides();
      var userContext = uiEntry.useUserContext();
      var _a = useFeatureReducer(props.recipe.webJSRecipe, userContext), state = _a[0], dispatch = _a[1];
      var callingConsumeCodeRef = useSuccessInAnotherTabChecker(state, dispatch, userContext);
      var childProps = useChildProps(props.recipe, dispatch, state, callingConsumeCodeRef, userContext, props.history);
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: props.recipe.config.useShadowDom,
                  defaultStore: defaultTranslationsPasswordless
                },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(
                        SignInUpThemeWrapper,
                        genericComponentOverrideContext.__assign({}, childProps, {
                          featureState: state,
                          dispatch
                        })
                      ),
                      props.children && React__namespace.Children.map(props.children, function(child) {
                        if (React__namespace.isValidElement(child)) {
                          return React__namespace.cloneElement(
                            child,
                            genericComponentOverrideContext.__assign(
                              genericComponentOverrideContext.__assign({}, childProps),
                              { featureState: state, dispatch }
                            )
                          );
                        }
                        return child;
                      })
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    function getModifiedRecipeImplementation(originalImpl, config, dispatch, callingConsumeCodeRef) {
      var _this = this;
      return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, originalImpl), {
        createCode: function(input) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var contactInfo, phoneNumberUtils, contactMethod, additionalAttemptInfo, res, loginAttemptInfo;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, recipe$1.getPhoneNumberUtils()];
                case 1:
                  phoneNumberUtils = _a.sent();
                  if ("email" in input) {
                    contactInfo = input.email;
                  } else {
                    contactInfo = phoneNumberUtils.formatNumber(
                      input.phoneNumber,
                      config.signInUpFeature.defaultCountry || "",
                      phoneNumberUtils.numberFormat.E164
                    );
                  }
                  contactMethod = "email" in input ? "EMAIL" : "PHONE";
                  additionalAttemptInfo = {
                    lastResend: Date.now(),
                    contactMethod,
                    contactInfo,
                    redirectToPath: genericComponentOverrideContext.getRedirectToPathFromURL()
                  };
                  return [
                    4,
                    originalImpl.createCode(
                      genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, input),
                        {
                          userContext: genericComponentOverrideContext.__assign(
                            genericComponentOverrideContext.__assign({}, input.userContext),
                            { additionalAttemptInfo }
                          )
                        }
                      )
                    )
                  ];
                case 2:
                  res = _a.sent();
                  if (!(res.status === "OK"))
                    return [3, 4];
                  return [
                    4,
                    originalImpl.getLoginAttemptInfo({
                      userContext: input.userContext
                    })
                  ];
                case 3:
                  loginAttemptInfo = _a.sent();
                  dispatch({ type: "startLogin", loginAttemptInfo });
                  _a.label = 4;
                case 4:
                  return [2, res];
              }
            });
          });
        },
        resendCode: function(input) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var res, loginAttemptInfo, timestamp;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [4, originalImpl.resendCode(input)];
                case 1:
                  res = _a.sent();
                  if (!(res.status === "OK"))
                    return [3, 5];
                  return [
                    4,
                    originalImpl.getLoginAttemptInfo({
                      userContext: input.userContext
                    })
                  ];
                case 2:
                  loginAttemptInfo = _a.sent();
                  if (!(loginAttemptInfo !== void 0))
                    return [3, 4];
                  timestamp = Date.now();
                  return [
                    4,
                    originalImpl.setLoginAttemptInfo({
                      userContext: input.userContext,
                      attemptInfo: genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, loginAttemptInfo),
                        { lastResend: timestamp }
                      )
                    })
                  ];
                case 3:
                  _a.sent();
                  dispatch({ type: "resendCode", timestamp });
                  _a.label = 4;
                case 4:
                  return [3, 7];
                case 5:
                  if (!(res.status === "RESTART_FLOW_ERROR"))
                    return [3, 7];
                  return [
                    4,
                    originalImpl.clearLoginAttemptInfo({
                      userContext: input.userContext
                    })
                  ];
                case 6:
                  _a.sent();
                  dispatch({ type: "restartFlow", error: "ERROR_SIGN_IN_UP_RESEND_RESTART_FLOW" });
                  _a.label = 7;
                case 7:
                  return [2, res];
              }
            });
          });
        },
        consumeCode: function(input) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var res;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  callingConsumeCodeRef.current = true;
                  return [4, originalImpl.consumeCode(input)];
                case 1:
                  res = _a.sent();
                  if (!(res.status === "RESTART_FLOW_ERROR"))
                    return [3, 3];
                  return [
                    4,
                    originalImpl.clearLoginAttemptInfo({
                      userContext: input.userContext
                    })
                  ];
                case 2:
                  _a.sent();
                  dispatch({ type: "restartFlow", error: "ERROR_SIGN_IN_UP_CODE_CONSUME_RESTART_FLOW" });
                  return [3, 5];
                case 3:
                  if (!(res.status === "OK"))
                    return [3, 5];
                  return [
                    4,
                    originalImpl.clearLoginAttemptInfo({
                      userContext: input.userContext
                    })
                  ];
                case 4:
                  _a.sent();
                  _a.label = 5;
                case 5:
                  callingConsumeCodeRef.current = false;
                  return [2, res];
              }
            });
          });
        },
        clearLoginAttemptInfo: function(input) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    originalImpl.clearLoginAttemptInfo({
                      userContext: input.userContext
                    })
                  ];
                case 1:
                  _a.sent();
                  genericComponentOverrideContext.clearErrorQueryParam();
                  dispatch({ type: "restartFlow", error: void 0 });
                  return [2];
              }
            });
          });
        }
      });
    }
    var PasswordlessPreBuiltUI = function(_super) {
      genericComponentOverrideContext.__extends(PasswordlessPreBuiltUI2, _super);
      function PasswordlessPreBuiltUI2(recipeInstance) {
        var _this = _super.call(this) || this;
        _this.recipeInstance = recipeInstance;
        _this.getFeatures = function(useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = componentOverrideContext.useContext;
          }
          var features = {};
          if (_this.recipeInstance.config.signInUpFeature.disableDefaultUI !== true) {
            var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
              new NormalisedURLPath__default.default("/")
            );
            features[normalisedFullPath.getAsStringDangerous()] = {
              matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                _this.recipeInstance.config.recipeId
              ),
              component: function(props) {
                return _this.getFeatureComponent("signInUp", props, useComponentOverrides);
              },
              recipeID: recipe$1.Passwordless.RECIPE_ID
            };
          }
          if (_this.recipeInstance.config.linkClickedScreenFeature.disableDefaultUI !== true) {
            var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
              new NormalisedURLPath__default.default("/verify")
            );
            features[normalisedFullPath.getAsStringDangerous()] = {
              matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                _this.recipeInstance.config.recipeId
              ),
              component: function(props) {
                return _this.getFeatureComponent("linkClickedScreen", props, useComponentOverrides);
              },
              recipeID: recipe$1.Passwordless.RECIPE_ID
            };
          }
          return features;
        };
        _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = componentOverrideContext.useContext;
          }
          if (componentName === "signInUp") {
            if (props.redirectOnSessionExists !== false) {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SuperTokensBranding.AuthWidgetWrapper,
                      genericComponentOverrideContext.__assign(
                        { authRecipe: _this.recipeInstance, history: props.history },
                        {
                          children: jsxRuntime.jsx(
                            SignInUpFeature,
                            genericComponentOverrideContext.__assign(
                              {
                                recipe: _this.recipeInstance,
                                useComponentOverrides
                              },
                              props
                            )
                          )
                        }
                      )
                    )
                  }
                )
              );
            } else {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SignInUpFeature,
                      genericComponentOverrideContext.__assign(
                        { recipe: _this.recipeInstance, useComponentOverrides },
                        props
                      )
                    )
                  }
                )
              );
            }
          }
          if (componentName === "linkClickedScreen") {
            return jsxRuntime.jsx(
              uiEntry.UserContextWrapper,
              genericComponentOverrideContext.__assign(
                { userContext: props.userContext },
                {
                  children: jsxRuntime.jsx(
                    LinkClickedScreen,
                    genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                      useComponentOverrides
                    })
                  )
                }
              )
            );
          } else {
            throw new Error("Should never come here.");
          }
        };
        return _this;
      }
      PasswordlessPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
        if (PasswordlessPreBuiltUI2.instance === void 0) {
          var recipeInstance = recipe$1.Passwordless.getInstanceOrThrow();
          PasswordlessPreBuiltUI2.instance = new PasswordlessPreBuiltUI2(recipeInstance);
        }
        return PasswordlessPreBuiltUI2.instance;
      };
      PasswordlessPreBuiltUI2.getFeatures = function(useComponentOverrides) {
        if (useComponentOverrides === void 0) {
          useComponentOverrides = componentOverrideContext.useContext;
        }
        return PasswordlessPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
      };
      PasswordlessPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
        if (useComponentOverrides === void 0) {
          useComponentOverrides = componentOverrideContext.useContext;
        }
        return PasswordlessPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
          componentName,
          props,
          useComponentOverrides
        );
      };
      PasswordlessPreBuiltUI2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        PasswordlessPreBuiltUI2.instance = void 0;
        return;
      };
      var _a;
      _a = PasswordlessPreBuiltUI2;
      PasswordlessPreBuiltUI2.SignInUp = function(prop) {
        if (prop === void 0) {
          prop = {};
        }
        return _a.getFeatureComponent("signInUp", prop);
      };
      PasswordlessPreBuiltUI2.LinkClicked = function(prop) {
        return _a.getFeatureComponent("linkClickedScreen", prop);
      };
      PasswordlessPreBuiltUI2.SignInUpTheme = SignInUpThemeWrapper;
      return PasswordlessPreBuiltUI2;
    }(uiEntry.RecipeRouter);
    var SignInUp = PasswordlessPreBuiltUI.SignInUp;
    var LinkClicked = PasswordlessPreBuiltUI.LinkClicked;
    exports.CloseTabScreen = CloseTabScreen;
    exports.EmailForm = EmailForm;
    exports.EmailOrPhoneForm = EmailOrPhoneForm;
    exports.LinkClicked = LinkClicked;
    exports.LinkSent = LinkSent;
    exports.PasswordlessPreBuiltUI = PasswordlessPreBuiltUI;
    exports.PhoneForm = PhoneForm;
    exports.SignInUp = SignInUp;
    exports.SignInUpThemeWrapper = SignInUpThemeWrapper;
    exports.UserInputCodeForm = UserInputCodeForm;
    exports.UserInputCodeFormHeader = UserInputCodeFormHeader;
    exports.defaultTranslationsPasswordless = defaultTranslationsPasswordless;
    exports.getActiveScreen = getActiveScreen;
    exports.useChildProps = useChildProps;
    exports.useFeatureReducer = useFeatureReducer;
    exports.useSuccessInAnotherTabChecker = useSuccessInAnotherTabChecker;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdparty-shared2.js
var require_thirdparty_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdparty-shared2.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    var SuperTokensBranding = require_SuperTokensBranding();
    var recipe = require_thirdparty_shared();
    var React = require_react();
    var translations = require_translations();
    var generalError = require_emailpassword_shared();
    var STGeneralError = require_error2();
    var translationContext = require_translationContext();
    var recipe$1 = require_session_shared2();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var STGeneralError__default = _interopDefault(STGeneralError);
    var styles = '[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 255, 155, 51;\n    --palette-primaryBorder: 238, 141, 35;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 34, 34, 34;\n    --palette-textLabel: 34, 34, 34;\n    --palette-textInput: 34, 34, 34;\n    --palette-textPrimary: 101, 101, 101;\n    --palette-textLink: 0, 118, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 128, 128, 128;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n}\n/*\n * Default styles.\n */\n@-webkit-keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@-webkit-keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n@keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n[data-supertokens~="container"] {\n    font-family: "Rubik", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 0 auto;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 300;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 40px;\n    letter-spacing: 0.58px;\n    font-weight: 800;\n    margin-bottom: 2px;\n    color: rgb(var(--palette-textTitle));\n}\n[data-supertokens~="headerSubtitle"] {\n    margin-bottom: 21px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n/* TODO: split the link style into separate things*/\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 500;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 300;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n[data-supertokens~="divider"] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n}\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n[data-supertokens~="linkButton"] {\n    background-color: transparent;\n    border: 0;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n[data-supertokens~="button"] {\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 700;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    -webkit-filter: brightness(0.85);\n            filter: brightness(0.85);\n}\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n[data-supertokens~="row"] {\n    padding-bottom: 30px;\n}\n[data-supertokens~="providerContainer"] {\n    padding-top: 9px;\n    padding-bottom: 9px;\n}\n[data-supertokens~="providerButton"] {\n    border-color: rgb(221, 221, 221) !important;\n}\n[data-supertokens~="providerButton"] {\n    min-height: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 2px 8px;\n\n    background-color: white;\n    color: black;\n}\n[data-supertokens~="providerButton"]:hover {\n    -webkit-filter: none !important;\n            filter: none !important;\n}\n[data-supertokens~="providerButton"]:hover {\n    background-color: #fafafa;\n}\n[data-supertokens~="providerButtonLeft"] {\n    min-width: 34px;\n    margin-left: 66px;\n}\n[data-supertokens~="providerButtonLogo"] {\n    height: 30px;\n    display: flex;\n}\n[data-supertokens~="providerButtonLogoCenter"] {\n    display: flex;\n    margin: auto;\n}\n[data-supertokens~="providerButtonText"] {\n    font-weight: 400;\n    text-align: center;\n    justify-content: center;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-block;\n}\n[data-supertokens~="providerButtonText"]:only-child {\n    margin: 0 auto;\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles, loadDefaultFont = _a.loadDefaultFont;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          children,
          loadDefaultFont && jsxRuntime.jsx("link", {
            href: "//fonts.googleapis.com/css?family=Rubik:wght@300;400;600;500;700",
            rel: "stylesheet",
            type: "text/css"
          }),
          jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })
        ]
      });
    };
    var ThirdPartySignInAndUpProvidersForm = function(props) {
      var userContext = uiEntry.useUserContext();
      var signInClick = function(providerId) {
        return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
          var response, generalError2, e_1;
          return genericComponentOverrideContext.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                _a.trys.push([0, 5, , 6]);
                response = void 0;
                generalError2 = void 0;
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [
                  4,
                  recipe.redirectToThirdPartyLogin({
                    recipeImplementation: props.recipeImplementation,
                    thirdPartyId: providerId,
                    config: props.config,
                    userContext
                  })
                ];
              case 2:
                response = _a.sent();
                return [3, 4];
              case 3:
                e_1 = _a.sent();
                if (STGeneralError__default.default.isThisError(e_1)) {
                  generalError2 = e_1;
                } else {
                  throw e_1;
                }
                return [3, 4];
              case 4:
                if (generalError2 !== void 0) {
                  props.dispatch({
                    type: "setError",
                    error: generalError2.message
                  });
                } else {
                  if (response === void 0) {
                    throw new Error("Should not come here");
                  }
                  if (response.status === "ERROR") {
                    props.dispatch({ type: "setError", error: "SOMETHING_WENT_WRONG_ERROR" });
                  }
                }
                return [3, 6];
              case 5:
                _a.sent();
                props.dispatch({ type: "setError", error: "SOMETHING_WENT_WRONG_ERROR" });
                return [3, 6];
              case 6:
                return [2];
            }
          });
        });
      };
      return jsxRuntime.jsx(React.Fragment, {
        children: props.providers.map(function(provider) {
          return jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "providerContainer" },
              {
                children: jsxRuntime.jsx(
                  "span",
                  genericComponentOverrideContext.__assign(
                    {
                      onClick: function() {
                        return signInClick(provider.id);
                      }
                    },
                    { children: provider.getButton() }
                  )
                )
              }
            ),
            "provider-".concat(provider.id)
          );
        })
      });
    };
    var ProvidersForm = uiEntry.withOverride("ThirdPartySignInAndUpProvidersForm", ThirdPartySignInAndUpProvidersForm);
    var SignInAndUpHeader = uiEntry.withOverride("ThirdPartySignInAndUpHeader", function ThirdPartySignInAndUpHeader() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "headerTitle" },
          { children: t("THIRD_PARTY_SIGN_IN_AND_UP_HEADER_TITLE") }
        )
      );
    });
    var SignUpFooter = uiEntry.withOverride("ThirdPartySignUpFooter", function ThirdPartySignUpFooter(_a) {
      var termsOfServiceLink = _a.termsOfServiceLink, privacyPolicyLink = _a.privacyPolicyLink;
      var t = translationContext.useTranslation();
      if (termsOfServiceLink === void 0 && privacyPolicyLink === void 0) {
        return null;
      }
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "secondaryText privacyPolicyAndTermsAndConditions" },
          {
            children: [
              t("THIRD_PARTY_SIGN_IN_UP_FOOTER_START"),
              termsOfServiceLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: termsOfServiceLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("THIRD_PARTY_SIGN_IN_UP_FOOTER_TOS") }
                )
              ),
              termsOfServiceLink !== void 0 && privacyPolicyLink !== void 0 && t("THIRD_PARTY_SIGN_IN_UP_FOOTER_AND"),
              privacyPolicyLink !== void 0 && jsxRuntime.jsx(
                "a",
                genericComponentOverrideContext.__assign(
                  {
                    "data-supertokens": "link",
                    href: privacyPolicyLink,
                    target: "_blank",
                    rel: "noopener noreferer"
                  },
                  { children: t("THIRD_PARTY_SIGN_IN_UP_FOOTER_PP") }
                )
              ),
              t("THIRD_PARTY_SIGN_IN_UP_FOOTER_END")
            ]
          }
        )
      );
    });
    var SignInAndUpTheme = function(props) {
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(SignInAndUpHeader, {}),
                      jsxRuntime.jsx("div", { "data-supertokens": "divider" }),
                      props.featureState.error && jsxRuntime.jsx(generalError.GeneralError, { error: props.featureState.error }),
                      jsxRuntime.jsx(ProvidersForm, genericComponentOverrideContext.__assign({}, props)),
                      jsxRuntime.jsx(SignUpFooter, {
                        privacyPolicyLink: props.config.signInAndUpFeature.privacyPolicyLink,
                        termsOfServiceLink: props.config.signInAndUpFeature.termsOfServiceLink
                      })
                    ]
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    };
    var SignInAndUpThemeWrapper = function(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              ThemeBase,
              genericComponentOverrideContext.__assign(
                {
                  loadDefaultFont: !hasFont,
                  userStyles: [props.config.rootStyle, props.config.signInAndUpFeature.style]
                },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpTheme,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    };
    var defaultTranslationsThirdParty = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, translations.defaultTranslationsCommon.en),
        {
          THIRD_PARTY_SIGN_IN_AND_UP_HEADER_TITLE: "Sign Up / Sign In",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_START: "By continuing, you agree to our ",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_TOS: "Terms of Service",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_AND: " and ",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_PP: "Privacy Policy",
          THIRD_PARTY_SIGN_IN_UP_FOOTER_END: "",
          THIRD_PARTY_PROVIDER_DEFAULT_BTN_START: "Continue with ",
          THIRD_PARTY_PROVIDER_DEFAULT_BTN_END: "",
          THIRD_PARTY_ERROR_NO_EMAIL: "Could not retrieve email. Please try a different method."
        }
      )
    };
    var useFeatureReducer = function() {
      return React__namespace.useReducer(
        function(oldState, action) {
          switch (action.type) {
            case "setError":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, oldState),
                { error: action.error }
              );
            default:
              return oldState;
          }
        },
        {},
        function() {
          var error = void 0;
          var errorQueryParam = genericComponentOverrideContext.getQueryParams("error");
          if (errorQueryParam !== null) {
            if (errorQueryParam === "signin") {
              error = "SOMETHING_WENT_WRONG_ERROR";
            } else if (errorQueryParam === "no_email_present") {
              error = "THIRD_PARTY_ERROR_NO_EMAIL";
            } else {
              var customError = genericComponentOverrideContext.getQueryParams("message");
              if (customError === null) {
                error = "SOMETHING_WENT_WRONG_ERROR";
              } else {
                error = customError;
              }
            }
          }
          return {
            error
          };
        }
      );
    };
    function useChildProps(recipe$12) {
      var recipeImplementation = React.useMemo(
        function() {
          return recipe$12 && getModifiedRecipeImplementation(recipe$12.webJSRecipe);
        },
        [recipe$12]
      );
      var dynamicLoginMethods = uiEntry.useDynamicLoginMethods();
      return React.useMemo(
        function() {
          if (!recipe$12 || !recipeImplementation) {
            return void 0;
          }
          var tenantProviders;
          if (genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods) {
            if (dynamicLoginMethods.loaded === false) {
              throw new Error("Component requiring dynamicLoginMethods rendered without FeatureWrapper.");
            } else {
              tenantProviders = dynamicLoginMethods.loginMethods.thirdparty.enabled ? dynamicLoginMethods.loginMethods.thirdparty.providers : [];
            }
          }
          return {
            providers: recipe.mergeProviders({
              tenantProviders,
              clientProviders: recipe$12.config.signInAndUpFeature.providers
            }),
            recipeImplementation,
            config: recipe$12.config,
            recipe: recipe$12
          };
        },
        [recipe$12, recipeImplementation]
      );
    }
    var SignInAndUpFeature = function(props) {
      var _a = useFeatureReducer(), state = _a[0], dispatch = _a[1];
      var childProps = useChildProps(props.recipe);
      var themeProps = genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, childProps),
        { providers: childProps.providers }
      );
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          props.children === void 0 && jsxRuntime.jsx(
            SignInAndUpThemeWrapper,
            genericComponentOverrideContext.__assign({}, themeProps, {
              featureState: state,
              dispatch
            })
          ),
          props.children && React__namespace.Children.map(props.children, function(child) {
            if (React__namespace.isValidElement(child)) {
              return React__namespace.cloneElement(
                child,
                genericComponentOverrideContext.__assign(
                  genericComponentOverrideContext.__assign({}, childProps),
                  { featureState: state, dispatch }
                )
              );
            }
            return child;
          })
        ]
      });
    };
    var SignInAndUpFeatureWrapper = function(props) {
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                { useShadowDom: props.recipe.config.useShadowDom, defaultStore: defaultTranslationsThirdParty },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpFeature,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    };
    var getModifiedRecipeImplementation = function(origImpl) {
      return genericComponentOverrideContext.__assign({}, origImpl);
    };
    var ThirdPartySignInAndUpCallbackTheme = function(_super) {
      genericComponentOverrideContext.__extends(ThirdPartySignInAndUpCallbackTheme2, _super);
      function ThirdPartySignInAndUpCallbackTheme2() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.render = function() {
          return jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "container" },
              {
                children: jsxRuntime.jsx(
                  "div",
                  genericComponentOverrideContext.__assign(
                    { "data-supertokens": "row" },
                    {
                      children: jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "spinner" },
                          { children: jsxRuntime.jsx(uiEntry.SpinnerIcon, {}) }
                        )
                      )
                    }
                  )
                )
              }
            )
          );
        };
        return _this;
      }
      return ThirdPartySignInAndUpCallbackTheme2;
    }(React.PureComponent);
    var SignInAndUpCallbackThemeWithOverride = uiEntry.withOverride(
      "ThirdPartySignInAndUpCallbackTheme",
      ThirdPartySignInAndUpCallbackTheme
    );
    var SignInAndUpCallbackTheme = function(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      return jsxRuntime.jsx(
        ThemeBase,
        genericComponentOverrideContext.__assign(
          { loadDefaultFont: !hasFont, userStyles: [props.config.rootStyle, props.config.signInAndUpFeature.style] },
          { children: jsxRuntime.jsx(SignInAndUpCallbackThemeWithOverride, {}) }
        )
      );
    };
    var SignInAndUpCallback$1 = function(props) {
      var userContext = uiEntry.useUserContext();
      var verifyCode = React.useCallback(
        function() {
          return props.recipe.webJSRecipe.signInAndUp({
            userContext
          });
        },
        [props.recipe, props.history, userContext]
      );
      var handleVerifyResponse = React.useCallback(
        function(response) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var stateResponse, redirectToPath;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              if (response.status === "NO_EMAIL_GIVEN_BY_PROVIDER") {
                return [
                  2,
                  genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
                    history: props.history,
                    queryParams: {
                      error: "no_email_present"
                    },
                    redirectBack: false
                  })
                ];
              }
              if (response.status === "OK") {
                stateResponse = props.recipe.webJSRecipe.getStateAndOtherInfoFromStorage({
                  userContext
                });
                redirectToPath = stateResponse === void 0 ? void 0 : stateResponse.redirectToPath;
                return [
                  2,
                  recipe$1.Session.getInstanceOrThrow().validateGlobalClaimsAndHandleSuccessRedirection(
                    {
                      rid: props.recipe.config.recipeId,
                      successRedirectContext: {
                        action: "SUCCESS",
                        isNewUser: response.createdNewUser,
                        redirectToPath
                      }
                    },
                    userContext,
                    props.history
                  )
                ];
              }
              return [2];
            });
          });
        },
        [props.recipe, props.history, userContext]
      );
      var handleError = React.useCallback(
        function(err) {
          if (STGeneralError__default.default.isThisError(err)) {
            return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
              history: props.history,
              queryParams: {
                error: "custom",
                message: err.message
              },
              redirectBack: false
            });
          }
          return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
            history: props.history,
            queryParams: {
              error: "signin"
            },
            redirectBack: false
          });
        },
        [props.recipe, props.history]
      );
      genericComponentOverrideContext.useOnMountAPICall(verifyCode, handleVerifyResponse, handleError);
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                { useShadowDom: props.recipe.config.useShadowDom, defaultStore: defaultTranslationsThirdParty },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(SignInAndUpCallbackTheme, { config: props.recipe.config }),
                      props.children
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    var ThirdPartyPreBuiltUI = function(_super) {
      genericComponentOverrideContext.__extends(ThirdPartyPreBuiltUI2, _super);
      function ThirdPartyPreBuiltUI2(recipeInstance) {
        var _this = _super.call(this) || this;
        _this.recipeInstance = recipeInstance;
        _this.getFeatures = function(useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          var features = {};
          if (_this.recipeInstance.config.signInAndUpFeature.disableDefaultUI !== true) {
            var normalisedFullPath_1 = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
              new NormalisedURLPath__default.default("/")
            );
            features[normalisedFullPath_1.getAsStringDangerous()] = {
              matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                _this.recipeInstance.config.recipeId
              ),
              component: function(prop) {
                return _this.getFeatureComponent("signinup", prop, useComponentOverrides);
              },
              recipeID: recipe.ThirdParty.RECIPE_ID
            };
          }
          var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
            new NormalisedURLPath__default.default("/callback/:id")
          );
          features[normalisedFullPath.getAsStringDangerous()] = {
            matches: function() {
              return recipe.matchRecipeIdUsingState(_this.recipeInstance, {});
            },
            component: function(prop) {
              return _this.getFeatureComponent("signinupcallback", prop, useComponentOverrides);
            },
            recipeID: recipe.ThirdParty.RECIPE_ID
          };
          return features;
        };
        _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          if (componentName === "signinup") {
            if (props.redirectOnSessionExists !== false) {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SuperTokensBranding.AuthWidgetWrapper,
                      genericComponentOverrideContext.__assign(
                        { authRecipe: _this.recipeInstance, history: props.history },
                        {
                          children: jsxRuntime.jsx(
                            SignInAndUpFeatureWrapper,
                            genericComponentOverrideContext.__assign(
                              { recipe: _this.recipeInstance },
                              props,
                              { useComponentOverrides }
                            )
                          )
                        }
                      )
                    )
                  }
                )
              );
            } else {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SignInAndUpFeatureWrapper,
                      genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                        useComponentOverrides
                      })
                    )
                  }
                )
              );
            }
          } else if (componentName === "signinupcallback") {
            return jsxRuntime.jsx(
              uiEntry.UserContextWrapper,
              genericComponentOverrideContext.__assign(
                { userContext: props.userContext },
                {
                  children: jsxRuntime.jsx(
                    SignInAndUpCallback$1,
                    genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                      useComponentOverrides
                    })
                  )
                }
              )
            );
          } else {
            throw new Error("Should never come here");
          }
        };
        return _this;
      }
      ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
        if (ThirdPartyPreBuiltUI2.instance === void 0) {
          var recipeInstace = recipe.ThirdParty.getInstanceOrThrow();
          ThirdPartyPreBuiltUI2.instance = new ThirdPartyPreBuiltUI2(recipeInstace);
        }
        return ThirdPartyPreBuiltUI2.instance;
      };
      ThirdPartyPreBuiltUI2.getFeatures = function(useComponentOverrides) {
        if (useComponentOverrides === void 0) {
          useComponentOverrides = recipe.useContext;
        }
        return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
      };
      ThirdPartyPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
        if (useComponentOverrides === void 0) {
          useComponentOverrides = recipe.useContext;
        }
        return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
          componentName,
          props,
          useComponentOverrides
        );
      };
      ThirdPartyPreBuiltUI2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        ThirdPartyPreBuiltUI2.instance = void 0;
        return;
      };
      ThirdPartyPreBuiltUI2.SignInAndUp = function(prop) {
        if (prop === void 0) {
          prop = {};
        }
        return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("signinup", prop);
      };
      ThirdPartyPreBuiltUI2.SignInAndUpCallback = function(prop) {
        return ThirdPartyPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("signinupcallback", prop);
      };
      ThirdPartyPreBuiltUI2.SignInAndUpTheme = SignInAndUpThemeWrapper;
      ThirdPartyPreBuiltUI2.SignInAndUpCallbackTheme = SignInAndUpCallbackTheme;
      return ThirdPartyPreBuiltUI2;
    }(uiEntry.RecipeRouter);
    var SignInAndUp = ThirdPartyPreBuiltUI.SignInAndUp;
    var SignInAndUpCallback = ThirdPartyPreBuiltUI.SignInAndUpCallback;
    exports.ProvidersForm = ProvidersForm;
    exports.SignInAndUp = SignInAndUp;
    exports.SignInAndUpCallback = SignInAndUpCallback;
    exports.SignInAndUpCallbackTheme = SignInAndUpCallbackTheme;
    exports.SignInAndUpThemeWrapper = SignInAndUpThemeWrapper;
    exports.ThirdPartyPreBuiltUI = ThirdPartyPreBuiltUI;
    exports.defaultTranslationsThirdParty = defaultTranslationsThirdParty;
    exports.useChildProps = useChildProps;
    exports.useFeatureReducer = useFeatureReducer;
  }
});

// node_modules/supertokens-auth-react/lib/build/thirdpartypasswordlessprebuiltui.js
var require_thirdpartypasswordlessprebuiltui = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/thirdpartypasswordlessprebuiltui.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    var SuperTokensBranding = require_SuperTokensBranding();
    var passwordlessprebuiltui = require_passwordless_shared3();
    var thirdpartyprebuiltui = require_thirdparty_shared2();
    var recipe = require_thirdpartypasswordless_shared();
    var React = require_react();
    var translations = require_translations();
    var generalError = require_emailpassword_shared();
    var translationContext = require_translationContext();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks();
    require_windowHandler();
    require_multitenancy();
    require_utils();
    require_normalisedURLDomain();
    require_react_dom();
    require_multitenancy_shared();
    require_session_shared2();
    require_session();
    require_recipeModule_shared();
    require_session_shared3();
    require_session_shared();
    require_passwordless_shared();
    require_error2();
    require_emailpassword_shared2();
    require_passwordless_shared2();
    require_passwordless();
    require_authRecipe_shared();
    require_checkedRoundIcon();
    require_emailpassword_shared7();
    require_emailpassword_shared5();
    require_arrowLeftIcon();
    require_thirdparty_shared();
    require_thirdparty();
    require_normalisedURLPath();
    require_thirdpartypasswordless();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var styles = '/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 255, 155, 51;\n    --palette-primaryBorder: 238, 141, 35;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 34, 34, 34;\n    --palette-textLabel: 34, 34, 34;\n    --palette-textInput: 34, 34, 34;\n    --palette-textPrimary: 101, 101, 101;\n    --palette-textLink: 0, 118, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 128, 128, 128;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n}\n/*\n * Default styles.\n */\n@-webkit-keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@keyframes slideTop {\n    0% {\n        -webkit-transform: translateY(-5px);\n                transform: translateY(-5px);\n    }\n    100% {\n        -webkit-transform: translateY(0px);\n                transform: translateY(0px);\n    }\n}\n@-webkit-keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n@keyframes swing-in-top-fwd {\n    0% {\n        -webkit-transform: rotateX(-100deg);\n        transform: rotateX(-100deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        -webkit-transform: rotateX(0deg);\n        transform: rotateX(0deg);\n        -webkit-transform-origin: top;\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n[data-supertokens~="container"] {\n    font-family: "Rubik", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 0 auto;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 300;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 15px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 40px;\n    letter-spacing: 0.58px;\n    font-weight: 800;\n    margin-bottom: 2px;\n    color: rgb(var(--palette-textTitle));\n}\n[data-supertokens~="headerSubtitle"] {\n    margin-bottom: 21px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n/* TODO: split the link style into separate things*/\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 500;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 300;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n[data-supertokens~="divider"] {\n    margin-top: 1em;\n    margin-bottom: 1em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n}\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    -webkit-animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n            animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n[data-supertokens~="linkButton"] {\n    background-color: transparent;\n    border: 0;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n[data-supertokens~="button"] {\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 700;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    -webkit-filter: brightness(0.85);\n            filter: brightness(0.85);\n}\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n[data-supertokens~="inputContainer"] {\n    margin-top: 6px;\n}\n[data-supertokens~="inputWrapper"] {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    background-color: rgb(var(--palette-inputBackground));\n    height: 34px;\n    border-radius: 6px;\n    border: 1px solid rgb(var(--palette-inputBorder));\n}\n[data-supertokens~="inputWrapper"][focus-within] {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputWrapper"]:focus-within {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputError"] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputError"][focus-within] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n[data-supertokens~="inputError"]:focus-within {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n[data-supertokens~="input"] {\n    box-sizing: border-box;\n    padding-left: 15px;\n    -webkit-filter: none;\n            filter: none;\n    color: rgb(var(--palette-textInput));\n    background-color: transparent;\n    border-radius: 6px;\n    font-size: var(--font-size-1);\n    border: none;\n    padding-right: 25px;\n    letter-spacing: 1.2px;\n    flex: 9 1 75%;\n    width: 75%;\n    height: 32px;\n}\n[data-supertokens~="input"]:focus {\n    border: none;\n    outline: none;\n}\n[data-supertokens~="input"]:-webkit-autofill,\n[data-supertokens~="input"]:-webkit-autofill:hover,\n[data-supertokens~="input"]:-webkit-autofill:focus,\n[data-supertokens~="input"]:-webkit-autofill:active {\n    -webkit-text-fill-color: rgb(var(--palette-textInput));\n    box-shadow: 0 0 0 30px rgb(var(--palette-inputBackground)) inset;\n}\n[data-supertokens~="inputAdornment"] {\n    justify-content: center;\n    margin-right: 5px;\n}\n[data-supertokens~="showPassword"] {\n    cursor: pointer;\n}\n[data-supertokens~="forgotPasswordLink"] {\n    margin-top: 10px;\n}\n[data-supertokens~="enterEmailSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    word-break: break-word;\n}\n[data-supertokens~="submitNewPasswordSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n[data-supertokens~="inputErrorMessage"] {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: rgb(var(--palette-error));\n    line-height: 24px;\n    font-weight: 400;\n    font-size: var(--font-size-1);\n    text-align: left;\n    -webkit-animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n            animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n    max-width: 330px;\n}\n@media (max-width: 440px) {\n    [data-supertokens~="inputErrorMessage"] {\n        max-width: 250px;\n    }\n}\n[data-supertokens~="inputErrorSymbol"] {\n    margin-right: 5px;\n    top: 1px;\n    position: relative;\n    left: 2px;\n}\n[data-supertokens~="label"] {\n    text-align: left;\n    font-weight: 600;\n    font-size: var(--font-size-1);\n    line-height: 24px;\n    color: rgb(var(--palette-textLabel));\n}\n[data-supertokens~="formRow"] {\n    display: flex;\n    flex-direction: column;\n    padding-top: 0px;\n    padding-bottom: 34px;\n}\n[data-supertokens~="formRow"][data-supertokens~="hasError"] {\n    padding-bottom: 0;\n}\n[data-supertokens~="sendVerifyEmailIcon"] {\n    margin-top: 11px;\n}\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 13px;\n    font-size: var(--font-size-3);\n    letter-spacing: 1.1px;\n    font-weight: 500;\n    line-height: 28px;\n}\n[data-supertokens~="sendVerifyEmailText"] {\n    line-height: 21px;\n    font-size: var(--font-size-1);\n    text-align: center;\n    font-weight: 300;\n    letter-spacing: 0.8px;\n}\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n[data-supertokens~="sendVerifyEmailResend"] {\n    margin-top: 13px;\n    font-weight: 300;\n}\n[data-supertokens~="sendVerifyEmailResend"]:hover {\n    text-decoration: underline;\n}\n[data-supertokens~="noFormRow"] {\n    padding-bottom: 25px;\n}\n[data-supertokens~="emailVerificationButtonWrapper"] {\n    padding-top: 25px;\n    max-width: 96px;\n    margin: 0 auto;\n}\n[data-supertokens~="resetPasswordHeaderTitle"] {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n[data-supertokens~="backButtonCommon"] {\n    width: 16px;\n    height: 13px;\n}\n[data-supertokens~="backButton"] {\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0px;\n}\n[data-supertokens~="backButtonPlaceholder"] {\n    display: block;\n}\n[data-supertokens~="resendEmailLink"] {\n    display: inline-block;\n}\n[data-supertokens~="generalSuccess"] {\n    margin-bottom: 20px;\n    -webkit-animation: swingIn 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) alternate 2 both;\n            animation: swingIn 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) alternate 2 both;\n}\n[data-supertokens~="codeInputLabelWrapper"] {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n[data-supertokens~="headerSubtitle"] strong {\n    max-width: 100%;\n    display: inline-block;\n    vertical-align: bottom;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n[data-supertokens~="sendCodeText"] {\n    margin-top: 15px;\n    margin-bottom: 20px;\n}\n[data-supertokens~="sendCodeText"] strong {\n    max-width: 100%;\n    display: inline-block;\n    vertical-align: bottom;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n[data-supertokens~="resendCodeBtn"] {\n    width: auto;\n    margin-top: 0;\n    line-height: 24px;\n}\n[data-supertokens~="resendCodeBtn"]:hover {\n    text-decoration: underline;\n}\n[data-supertokens~="resendCodeBtn"]:disabled {\n    color: rgb(var(--palette-textPrimary));\n    cursor: default;\n    text-decoration: none;\n}\n[data-supertokens~="phoneInputLibRoot"] {\n    display: flex;\n    align-items: center;\n}\n[data-supertokens~="phoneInputWrapper"] {\n    display: flex;\n    align-items: center;\n}\n[data-supertokens~="phoneInputWrapper"] .iti [data-supertokens~="input"] {\n    padding-left: 15px;\n}\n[data-supertokens~="phoneInputWrapper"] .iti {\n    flex: 1 1;\n    min-width: 0;\n    width: 100%;\n    background: transparent;\n    border: none;\n    color: inherit;\n    outline: none;\n}\n[data-supertokens~="continueButtonWrapper"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n}\n.iti__country-list {\n    border: 0;\n    top: 40px;\n    width: min(72.2vw, 320px);\n    border-radius: 6;\n    box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.16);\n}\n.iti__country {\n    display: flex;\n    align-items: center;\n    height: 34px;\n    cursor: pointer;\n\n    padding: 0 8px;\n}\n.iti__country-name {\n    color: var(--palette-textLabel);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: "0 16px";\n}\n[data-supertokens~="row"] {\n    padding-bottom: 30px;\n}\n[data-supertokens~="providerContainer"] {\n    padding-top: 9px;\n    padding-bottom: 9px;\n}\n[data-supertokens~="providerButton"] {\n    border-color: rgb(221, 221, 221) !important;\n}\n[data-supertokens~="providerButton"] {\n    min-height: 32px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 2px 8px;\n\n    background-color: white;\n    color: black;\n}\n[data-supertokens~="providerButton"]:hover {\n    -webkit-filter: none !important;\n            filter: none !important;\n}\n[data-supertokens~="providerButton"]:hover {\n    background-color: #fafafa;\n}\n[data-supertokens~="providerButtonLeft"] {\n    min-width: 34px;\n    margin-left: 66px;\n}\n[data-supertokens~="providerButtonLogo"] {\n    height: 30px;\n    display: flex;\n}\n[data-supertokens~="providerButtonLogoCenter"] {\n    display: flex;\n    margin: auto;\n}\n[data-supertokens~="providerButtonText"] {\n    font-weight: 400;\n    text-align: center;\n    justify-content: center;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: inline-block;\n}\n[data-supertokens~="providerButtonText"]:only-child {\n    margin: 0 auto;\n}\n[data-supertokens~="thirdPartyPasswordlessDivider"] {\n    padding-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: rgb(var(--palette-textPrimary));\n}\n[data-supertokens~="thirdPartyPasswordlessDividerText"] {\n    flex: 1 1;\n    margin-top: 0.75em;\n}\n[data-supertokens~="divider"] {\n    flex: 3 3;\n}\n[data-supertokens~="providerButton"] {\n    margin: auto !important;\n    max-width: 240px !important;\n}\n[data-supertokens~="providerButtonLeft"] {\n    margin-left: 30px !important;\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles, loadDefaultFont = _a.loadDefaultFont;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          children,
          loadDefaultFont && jsxRuntime.jsx("link", {
            href: "//fonts.googleapis.com/css?family=Rubik:wght@300;400;600;500;700",
            rel: "stylesheet",
            type: "text/css"
          }),
          jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })
        ]
      });
    };
    var Header = uiEntry.withOverride("ThirdPartyPasswordlessHeader", function ThirdPartyPasswordlessHeader() {
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          jsxRuntime.jsx(
            "div",
            genericComponentOverrideContext.__assign(
              { "data-supertokens": "headerTitle" },
              { children: t("THIRD_PARTY_PASSWORDLESS_SIGN_IN_AND_UP_HEADER_TITLE") }
            )
          ),
          jsxRuntime.jsx("div", { "data-supertokens": "divider" })
        ]
      });
    });
    var SignInUpTheme = function(props) {
      var _a;
      var t = translationContext.useTranslation();
      var usesDynamicLoginMethods = genericComponentOverrideContext.SuperTokens.usesDynamicLoginMethods;
      var dynamicLoginMethods = uiEntry.useDynamicLoginMethods();
      var loginMethods;
      if (usesDynamicLoginMethods) {
        if (dynamicLoginMethods.loaded === false) {
          throw new Error("Component requiring dynamicLoginMethods rendered without FeatureWrapper.");
        } else {
          loginMethods = dynamicLoginMethods.loginMethods;
        }
      }
      var hasProviders = ((_a = props.tpChildProps) === null || _a === void 0 ? void 0 : _a.providers) !== void 0 && props.tpChildProps.providers.length > 0;
      var thirdPartyEnabled = usesDynamicLoginMethods === false && hasProviders || (loginMethods === null || loginMethods === void 0 ? void 0 : loginMethods.thirdparty.enabled) && hasProviders;
      var passwordlessEnabled = props.passwordlessRecipe !== void 0 && usesDynamicLoginMethods === false || (loginMethods === null || loginMethods === void 0 ? void 0 : loginMethods.passwordless.enabled);
      if (thirdPartyEnabled === false && passwordlessEnabled === false) {
        return null;
      }
      if (props.activeScreen === passwordlessprebuiltui.SignInUpScreens.CloseTab) {
        return jsxRuntime.jsx(
          passwordlessprebuiltui.CloseTabScreen,
          genericComponentOverrideContext.__assign({}, props.pwlessChildProps)
        );
      } else if (props.activeScreen === passwordlessprebuiltui.SignInUpScreens.LinkSent) {
        return jsxRuntime.jsx(
          passwordlessprebuiltui.LinkSent,
          genericComponentOverrideContext.__assign({}, getCommonPwlessProps(props.pwlessChildProps, props), {
            loginAttemptInfo: props.pwlessState.loginAttemptInfo
          })
        );
      }
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container" },
          {
            children: [
              jsxRuntime.jsx(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: (props.pwlessChildProps === void 0 || props.pwlessState.loaded === true) && jsxRuntime.jsxs(React__namespace.Fragment, {
                      children: [
                        props.activeScreen === passwordlessprebuiltui.SignInUpScreens.UserInputCodeForm ? jsxRuntime.jsx(
                          passwordlessprebuiltui.UserInputCodeFormHeader,
                          genericComponentOverrideContext.__assign(
                            {},
                            getCommonPwlessProps(props.pwlessChildProps, props),
                            { loginAttemptInfo: props.pwlessState.loginAttemptInfo }
                          )
                        ) : jsxRuntime.jsx(Header, {}),
                        props.commonState.error && jsxRuntime.jsx(generalError.GeneralError, {
                          error: props.commonState.error
                        }),
                        props.tpChildProps !== void 0 && thirdPartyEnabled && props.activeScreen !== passwordlessprebuiltui.SignInUpScreens.UserInputCodeForm && jsxRuntime.jsx(
                          thirdpartyprebuiltui.ProvidersForm,
                          genericComponentOverrideContext.__assign({}, props.tpChildProps, {
                            featureState: props.tpState,
                            dispatch: props.tpDispatch
                          })
                        ),
                        thirdPartyEnabled && passwordlessEnabled && props.activeScreen !== passwordlessprebuiltui.SignInUpScreens.UserInputCodeForm && jsxRuntime.jsxs(
                          "div",
                          genericComponentOverrideContext.__assign(
                            { "data-supertokens": "thirdPartyPasswordlessDivider" },
                            {
                              children: [
                                jsxRuntime.jsx("div", {
                                  "data-supertokens": "divider"
                                }),
                                jsxRuntime.jsx(
                                  "div",
                                  genericComponentOverrideContext.__assign(
                                    {
                                      "data-supertokens": "thirdPartyPasswordlessDividerText"
                                    },
                                    {
                                      children: t(
                                        "THIRD_PARTY_PASSWORDLESS_SIGN_IN_AND_UP_DIVIDER_OR"
                                      )
                                    }
                                  )
                                ),
                                jsxRuntime.jsx("div", {
                                  "data-supertokens": "divider"
                                })
                              ]
                            }
                          )
                        ),
                        !passwordlessEnabled ? null : props.activeScreen === passwordlessprebuiltui.SignInUpScreens.EmailForm ? jsxRuntime.jsx(
                          passwordlessprebuiltui.EmailForm,
                          genericComponentOverrideContext.__assign(
                            {},
                            getCommonPwlessProps(props.pwlessChildProps, props)
                          )
                        ) : props.activeScreen === passwordlessprebuiltui.SignInUpScreens.PhoneForm ? jsxRuntime.jsx(
                          passwordlessprebuiltui.PhoneForm,
                          genericComponentOverrideContext.__assign(
                            {},
                            getCommonPwlessProps(props.pwlessChildProps, props)
                          )
                        ) : props.activeScreen === passwordlessprebuiltui.SignInUpScreens.EmailOrPhoneForm ? jsxRuntime.jsx(
                          passwordlessprebuiltui.EmailOrPhoneForm,
                          genericComponentOverrideContext.__assign(
                            {},
                            getCommonPwlessProps(props.pwlessChildProps, props)
                          )
                        ) : props.activeScreen === passwordlessprebuiltui.SignInUpScreens.UserInputCodeForm ? jsxRuntime.jsx(
                          passwordlessprebuiltui.UserInputCodeForm,
                          genericComponentOverrideContext.__assign(
                            {},
                            getCommonPwlessProps(props.pwlessChildProps, props),
                            {
                              loginAttemptInfo: props.pwlessState.loginAttemptInfo,
                              onSuccess: props.pwlessChildProps.onSuccess
                            }
                          )
                        ) : null
                      ]
                    })
                  }
                )
              ),
              jsxRuntime.jsx(SuperTokensBranding.SuperTokensBranding, {})
            ]
          }
        )
      );
    };
    function SignInUpThemeWrapper(props) {
      var hasFont = translations.hasFontDefined(props.config.rootStyle);
      var childProps = props.passwordlessRecipe !== void 0 && props.pwlessChildProps !== void 0 ? genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, props), {
        activeScreen: passwordlessprebuiltui.getActiveScreen({
          config: props.pwlessChildProps.config,
          featureState: props.pwlessState
        }),
        pwlessChildProps: props.pwlessChildProps,
        passwordlessRecipe: props.passwordlessRecipe
      }) : genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, props), {
        activeScreen: void 0,
        passwordlessRecipe: void 0,
        pwlessChildProps: void 0
      });
      var activeStyle;
      if (childProps.activeScreen === passwordlessprebuiltui.SignInUpScreens.CloseTab) {
        activeStyle = props.passwordlessRecipe.config.signInUpFeature.closeTabScreenStyle;
      } else if (childProps.activeScreen === passwordlessprebuiltui.SignInUpScreens.LinkSent) {
        activeStyle = props.passwordlessRecipe.config.signInUpFeature.linkSentScreenStyle;
      } else if (childProps.activeScreen === passwordlessprebuiltui.SignInUpScreens.UserInputCodeForm) {
        activeStyle = props.passwordlessRecipe.config.signInUpFeature.userInputCodeFormStyle;
      } else {
        activeStyle = props.config.thirdPartyProviderAndEmailOrPhoneFormStyle;
      }
      return jsxRuntime.jsx(
        ThemeBase,
        genericComponentOverrideContext.__assign(
          { loadDefaultFont: !hasFont, userStyles: [props.config.rootStyle, activeStyle] },
          { children: jsxRuntime.jsx(SignInUpTheme, genericComponentOverrideContext.__assign({}, childProps)) }
        )
      );
    }
    function getCommonPwlessProps(childProps, props) {
      return {
        recipeImplementation: childProps.recipeImplementation,
        config: childProps.config,
        clearError: function() {
          return props.pwlessDispatch({ type: "setError", error: void 0 });
        },
        onError: function(error) {
          return props.pwlessDispatch({ type: "setError", error });
        },
        error: props.pwlessState.error
      };
    }
    var defaultTranslationsThirdPartyPasswordless = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          genericComponentOverrideContext.__assign({}, thirdpartyprebuiltui.defaultTranslationsThirdParty.en),
          passwordlessprebuiltui.defaultTranslationsPasswordless.en
        ),
        {
          THIRD_PARTY_PASSWORDLESS_SIGN_IN_AND_UP_HEADER_TITLE: "Sign Up or Log In",
          THIRD_PARTY_PASSWORDLESS_SIGN_IN_AND_UP_DIVIDER_OR: "or"
        }
      )
    };
    var SignInAndUp$1 = function(props) {
      var _a;
      var _b = thirdpartyprebuiltui.useFeatureReducer(), tpState = _b[0], tpDispatch = _b[1];
      var userContext = uiEntry.useUserContext();
      var _c = passwordlessprebuiltui.useFeatureReducer(
        (_a = props.recipe.passwordlessRecipe) === null || _a === void 0 ? void 0 : _a.webJSRecipe,
        userContext
      ), pwlessState = _c[0], pwlessDispatch = _c[1];
      var _d = React__namespace.useReducer(
        function(state, action) {
          switch (action.type) {
            case "startLogin":
            case "resendCode":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, state),
                { error: void 0 }
              );
            case "load":
              if (action.loginAttemptInfo !== void 0) {
                return genericComponentOverrideContext.__assign(
                  genericComponentOverrideContext.__assign({}, state),
                  { error: action.error }
                );
              }
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, state),
                { error: state.error !== void 0 ? state.error : action.error }
              );
            case "restartFlow":
            case "setError":
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, state),
                { error: action.error }
              );
            default:
              return state;
          }
        },
        { error: void 0 },
        function() {
          var error = tpState.error;
          if (pwlessState.error !== void 0 && (error === void 0 || error === "SOMETHING_WENT_WRONG_ERROR")) {
            error = pwlessState.error;
          }
          return {
            error
          };
        }
      ), combinedState = _d[0], dispatch = _d[1];
      var combinedTPDispatch = React__namespace.useCallback(
        function(action) {
          dispatch(action);
          tpDispatch(action);
        },
        [tpDispatch, dispatch]
      );
      var tpChildProps = thirdpartyprebuiltui.useChildProps(props.recipe.thirdPartyRecipe);
      var combinedPwlessDispatch = React__namespace.useCallback(
        function(action) {
          dispatch(action);
          pwlessDispatch(action);
        },
        [pwlessDispatch, dispatch]
      );
      var callingConsumeCodeRef = passwordlessprebuiltui.useSuccessInAnotherTabChecker(
        pwlessState,
        combinedPwlessDispatch,
        userContext
      );
      var pwlessChildProps = passwordlessprebuiltui.useChildProps(
        props.recipe.passwordlessRecipe,
        combinedPwlessDispatch,
        pwlessState,
        callingConsumeCodeRef,
        userContext,
        props.history
      );
      var childProps = {
        passwordlessRecipe: props.recipe.passwordlessRecipe,
        thirdPartyRecipe: props.recipe.thirdPartyRecipe,
        config: props.recipe.config,
        history: props.history,
        commonState: combinedState,
        tpState,
        tpDispatch: combinedTPDispatch,
        tpChildProps,
        pwlessState,
        pwlessDispatch: combinedPwlessDispatch,
        pwlessChildProps
      };
      return jsxRuntime.jsxs(React.Fragment, {
        children: [
          props.children === void 0 && jsxRuntime.jsx(SignInUpThemeWrapper, genericComponentOverrideContext.__assign({}, childProps)),
          props.children && React__namespace.Children.map(props.children, function(child) {
            if (React__namespace.isValidElement(child)) {
              return React__namespace.cloneElement(child, childProps);
            }
            return child;
          })
        ]
      });
    };
    var SignInAndUpFeatureWrapper = function(props) {
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: props.recipe.config.useShadowDom,
                  defaultStore: defaultTranslationsThirdPartyPasswordless
                },
                { children: jsxRuntime.jsx(SignInAndUp$1, genericComponentOverrideContext.__assign({}, props)) }
              )
            )
          }
        )
      );
    };
    var ThirdPartyPasswordlessPreBuiltUI = function(_super) {
      genericComponentOverrideContext.__extends(ThirdPartyPasswordlessPreBuiltUI2, _super);
      function ThirdPartyPasswordlessPreBuiltUI2(recipeInstance) {
        var _this = _super.call(this) || this;
        _this.recipeInstance = recipeInstance;
        _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          if (componentName === "signInUp") {
            if (props.redirectOnSessionExists !== false) {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SuperTokensBranding.AuthWidgetWrapper,
                      genericComponentOverrideContext.__assign(
                        { authRecipe: _this.recipeInstance, history: props.history },
                        {
                          children: jsxRuntime.jsx(
                            SignInAndUpFeatureWrapper,
                            genericComponentOverrideContext.__assign(
                              { recipe: _this.recipeInstance },
                              props,
                              { useComponentOverrides }
                            )
                          )
                        }
                      )
                    )
                  }
                )
              );
            } else {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      SignInAndUpFeatureWrapper,
                      genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                        useComponentOverrides
                      })
                    )
                  }
                )
              );
            }
          } else if (componentName === "linkClickedScreen") {
            if (_this.passwordlessPreBuiltUI === void 0) {
              throw new Error(
                "Embedding this component requires the passwordless recipe to be enabled. Please check the value of disablePasswordless in the configuration."
              );
            }
            return _this.passwordlessPreBuiltUI.getFeatureComponent(componentName, props, useComponentOverrides);
          } else if (componentName === "signinupcallback") {
            if (_this.thirdPartyPreBuiltUI === void 0) {
              throw new Error(
                "Embedding this component requires the thirdparty recipe to be enabled. Please check the value of signInUpFeature.providers in the configuration."
              );
            }
            return _this.thirdPartyPreBuiltUI.getFeatureComponent(componentName, props, useComponentOverrides);
          } else {
            throw new Error("Should never come here.");
          }
        };
        _this.getFeatures = function(useComponentOverrides) {
          var _b, _c;
          if (useComponentOverrides === void 0) {
            useComponentOverrides = recipe.useContext;
          }
          var features = {};
          if (_this.passwordlessPreBuiltUI !== void 0) {
            features = genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, features),
              _this.passwordlessPreBuiltUI.getFeatures(useComponentOverrides)
            );
          }
          if (_this.thirdPartyPreBuiltUI !== void 0) {
            features = genericComponentOverrideContext.__assign(
              genericComponentOverrideContext.__assign({}, features),
              _this.thirdPartyPreBuiltUI.getFeatures(useComponentOverrides)
            );
          }
          if (_this.recipeInstance.config.passwordlessConfig !== void 0 && ((_b = _this.recipeInstance.config.passwordlessConfig.signInUpFeature) === null || _b === void 0 ? void 0 : _b.disableDefaultUI) !== true || _this.recipeInstance.config.thirdpartyConfig !== void 0 && ((_c = _this.recipeInstance.config.thirdpartyConfig.signInAndUpFeature) === null || _c === void 0 ? void 0 : _c.disableDefaultUI) !== true) {
            var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
              new NormalisedURLPath__default.default("/")
            );
            features[normalisedFullPath.getAsStringDangerous()] = {
              matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                _this.recipeInstance.config.recipeId
              ),
              component: function(prop) {
                return _this.getFeatureComponent("signInUp", prop, useComponentOverrides);
              },
              recipeID: recipe.ThirdPartyPasswordless.RECIPE_ID
            };
          }
          return genericComponentOverrideContext.__assign({}, features);
        };
        var thirdPartyRecipe = recipeInstance.thirdPartyRecipe, passwordlessRecipe = recipeInstance.passwordlessRecipe;
        if (thirdPartyRecipe !== void 0) {
          _this.thirdPartyPreBuiltUI = new thirdpartyprebuiltui.ThirdPartyPreBuiltUI(thirdPartyRecipe);
        }
        if (passwordlessRecipe !== void 0) {
          _this.passwordlessPreBuiltUI = new passwordlessprebuiltui.PasswordlessPreBuiltUI(passwordlessRecipe);
        }
        return _this;
      }
      ThirdPartyPasswordlessPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
        if (ThirdPartyPasswordlessPreBuiltUI2.instance === void 0) {
          var recipeInstance = recipe.ThirdPartyPasswordless.getInstanceOrThrow();
          ThirdPartyPasswordlessPreBuiltUI2.instance = new ThirdPartyPasswordlessPreBuiltUI2(recipeInstance);
        }
        return ThirdPartyPasswordlessPreBuiltUI2.instance;
      };
      ThirdPartyPasswordlessPreBuiltUI2.getFeatures = function(useComponentOverrides) {
        if (useComponentOverrides === void 0) {
          useComponentOverrides = recipe.useContext;
        }
        return ThirdPartyPasswordlessPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
      };
      ThirdPartyPasswordlessPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
        if (useComponentOverrides === void 0) {
          useComponentOverrides = recipe.useContext;
        }
        return ThirdPartyPasswordlessPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
          componentName,
          props,
          useComponentOverrides
        );
      };
      ThirdPartyPasswordlessPreBuiltUI2.reset = function() {
        if (!genericComponentOverrideContext.isTest()) {
          return;
        }
        ThirdPartyPasswordlessPreBuiltUI2.instance = void 0;
        return;
      };
      var _a;
      _a = ThirdPartyPasswordlessPreBuiltUI2;
      ThirdPartyPasswordlessPreBuiltUI2.SignInAndUp = function(prop) {
        if (prop === void 0) {
          prop = {};
        }
        return _a.getFeatureComponent("signInUp", prop);
      };
      ThirdPartyPasswordlessPreBuiltUI2.ThirdPartySignInAndUpCallback = function(prop) {
        return _a.getFeatureComponent("signinupcallback", prop);
      };
      ThirdPartyPasswordlessPreBuiltUI2.SignInUpTheme = SignInUpThemeWrapper;
      ThirdPartyPasswordlessPreBuiltUI2.PasswordlessLinkClicked = function(prop) {
        return _a.getFeatureComponent("linkClickedScreen", prop);
      };
      return ThirdPartyPasswordlessPreBuiltUI2;
    }(uiEntry.RecipeRouter);
    var SignInAndUp = ThirdPartyPasswordlessPreBuiltUI.SignInAndUp;
    var ThirdPartySignInAndUpCallback = ThirdPartyPasswordlessPreBuiltUI.ThirdPartySignInAndUpCallback;
    var PasswordlessLinkClicked = ThirdPartyPasswordlessPreBuiltUI.PasswordlessLinkClicked;
    exports.PasswordlessLinkClicked = PasswordlessLinkClicked;
    exports.SignInAndUp = SignInAndUp;
    exports.SignInUpTheme = SignInUpThemeWrapper;
    exports.ThirdPartyPasswordlessPreBuiltUI = ThirdPartyPasswordlessPreBuiltUI;
    exports.ThirdPartySignInAndUpCallback = ThirdPartySignInAndUpCallback;
  }
});

// node_modules/supertokens-auth-react/recipe/thirdpartypasswordless/prebuiltui.js
var require_prebuiltui = __commonJS({
  "node_modules/supertokens-auth-react/recipe/thirdpartypasswordless/prebuiltui.js"(exports) {
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_thirdpartypasswordlessprebuiltui());
  }
});
export default require_prebuiltui();
//# sourceMappingURL=supertokens-auth-react_recipe_thirdpartypasswordless_prebuiltui.js.map
